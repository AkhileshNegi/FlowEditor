// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StartSessionForm render should render an empty form with no action 1`] = `
Object {
  "flow": Object {
    "value": null,
  },
  "recipients": Object {
    "value": Array [],
  },
  "valid": false,
}
`;

exports[`StartSessionForm render should render an empty form with no action 2`] = `
<Dialog
  buttons={
    Object {
      "primary": Object {
        "name": "Ok",
        "onClick": [Function],
      },
      "secondary": Object {
        "name": "Cancel",
        "onClick": [Function],
      },
    }
  }
  headerClass="start_session"
  title="Start Somebody Else"
>
  <TypeList
    __className=""
    initialType={
      Object {
        "component": [Function],
        "description": "Start somebody else in a flow",
        "form": undefined,
        "localization": [Function],
        "localizeableKeys": Array [
          "exits",
        ],
        "name": "Start Somebody Else",
        "type": "start_session",
      }
    }
    onChange={[MockFunction]}
  />
  <div>
    <OmniboxElement
      add={true}
      assets={
        RecipientAssets {
          "assets": Object {},
          "endpoint": "/assets/recipients.json",
          "idProperty": "uuid",
          "localStorage": true,
        }
      }
      data-spec="recipients"
      entry={
        Object {
          "value": Array [],
        }
      }
      name="Recipients"
      onChange={[Function]}
      placeholder="Enter a group or contact..."
      searchPromptText="No matches"
    />
    <p>
      <SelectAssetElement
        assets={
          FlowAssets {
            "assetType": "flow",
            "assets": Object {},
            "endpoint": "/assets/flows.json",
            "idProperty": "uuid",
            "localStorage": true,
          }
        }
        entry={
          Object {
            "value": null,
          }
        }
        key="flow_select"
        name="Flow"
        onChange={[Function]}
        placeholder="Select the flow to start them in"
        searchable={true}
      />
    </p>
  </div>
</Dialog>
`;

exports[`StartSessionForm render should render self, children with base props 1`] = `
<Dialog
  buttons={
    Object {
      "primary": Object {
        "name": "Ok",
        "onClick": [Function],
      },
      "secondary": Object {
        "name": "Cancel",
        "onClick": [Function],
      },
    }
  }
  headerClass="start_session"
  title="Start Somebody Else"
>
  <TypeList
    __className=""
    initialType={
      Object {
        "component": [Function],
        "description": "Start somebody else in a flow",
        "form": undefined,
        "localization": [Function],
        "localizeableKeys": Array [
          "exits",
        ],
        "name": "Start Somebody Else",
        "type": "start_session",
      }
    }
    onChange={[MockFunction]}
  />
  <div>
    <OmniboxElement
      add={true}
      assets={
        RecipientAssets {
          "assets": Object {},
          "endpoint": "/assets/recipients.json",
          "idProperty": "uuid",
          "localStorage": true,
        }
      }
      data-spec="recipients"
      entry={
        Object {
          "value": Array [
            Object {
              "id": "4441fa19-8bbf-4894-8529-d04cc3b365d6",
              "name": "Cat Fanciers",
              "type": "group",
            },
            Object {
              "id": "1e5aa7db-89c7-4dec-99b8-cd1194e1f46e",
              "name": "Cat Facts",
              "type": "group",
            },
            Object {
              "id": "1e5aa7db-89c7-4dec-99b8-cd1194e1f46e",
              "name": "Kellan Alexander",
              "type": "contact",
            },
            Object {
              "id": "575fe8e9-cb51-4f15-8df7-422290fdfc64",
              "name": "Norbert Kwizera",
              "type": "contact",
            },
            Object {
              "id": "82df72ae-d835-401b-b248-d0c5dcfdce5c",
              "name": "Rowan Seymour",
              "type": "contact",
            },
          ],
        }
      }
      name="Recipients"
      onChange={[Function]}
      placeholder="Enter a group or contact..."
      searchPromptText="No matches"
    />
    <p>
      <SelectAssetElement
        assets={
          FlowAssets {
            "assetType": "flow",
            "assets": Object {},
            "endpoint": "/assets/flows.json",
            "idProperty": "uuid",
            "localStorage": true,
          }
        }
        entry={
          Object {
            "value": Object {
              "id": "flow_uuid",
              "name": "Flow to Start",
              "type": "flow",
            },
          }
        }
        key="flow_select"
        name="Flow"
        onChange={[Function]}
        placeholder="Select the flow to start them in"
        searchable={true}
      />
    </p>
  </div>
</Dialog>
`;

exports[`StartSessionForm updates should allow switching from router 1`] = `
Array [
  Object {
    "contacts": Array [],
    "flow": Object {
      "name": "My Flow",
      "uuid": "my_flow",
    },
    "groups": Array [
      Object {
        "name": "Subscriber",
        "uuid": "68223118-109f-442a-aed3-7bb3e1eab687",
      },
    ],
    "type": "start_session",
    "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
  },
]
`;

exports[`StartSessionForm updates should save changes 1`] = `
Object {
  "flow": Object {
    "value": Object {
      "id": "my_flow",
      "name": "My Flow",
      "type": "flow",
    },
  },
  "recipients": Object {
    "value": Array [
      Object {
        "id": "68223118-109f-442a-aed3-7bb3e1eab687",
        "name": "Subscriber",
        "type": "group",
      },
    ],
  },
  "valid": true,
}
`;

exports[`StartSessionForm updates should save changes 2`] = `
Array [
  Object {
    "contacts": Array [],
    "flow": Object {
      "name": "My Flow",
      "uuid": "my_flow",
    },
    "groups": Array [
      Object {
        "name": "Subscriber",
        "uuid": "68223118-109f-442a-aed3-7bb3e1eab687",
      },
    ],
    "type": "start_session",
    "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
  },
]
`;
