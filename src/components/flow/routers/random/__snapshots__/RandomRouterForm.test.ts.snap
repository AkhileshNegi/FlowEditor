// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RandomRouterForm should convert from a non-random node 1`] = `
<Dialog
  buttons={
    Object {
      "primary": Object {
        "name": "Ok",
        "onClick": [Function],
      },
      "secondary": Object {
        "name": "Cancel",
        "onClick": [Function],
      },
    }
  }
  headerClass="split_by_random"
  title="Split Randomly"
>
  <TypeList
    __className=""
    initialType={
      Object {
        "description": "Split by random chance",
        "form": undefined,
        "localization": [Function],
        "localizeableKeys": Array [
          "exits",
        ],
        "name": "Split Randomly",
        "type": "split_by_random",
      }
    }
    onChange={[MockFunction]}
  />
  <div
    className="leadIn"
  >
    Split them randomly into one of
  </div>
  <div
    className="bucketSelect"
  >
    <SelectElement
      entry={
        Object {
          "value": Object {
            "label": "2 buckets",
            "value": "2",
          },
        }
      }
      name="Buckets"
      onChange={[Function]}
      options={
        Array [
          Object {
            "label": "2 buckets",
            "value": "2",
          },
          Object {
            "label": "3 buckets",
            "value": "3",
          },
          Object {
            "label": "4 buckets",
            "value": "4",
          },
          Object {
            "label": "5 buckets",
            "value": "5",
          },
          Object {
            "label": "6 buckets",
            "value": "6",
          },
          Object {
            "label": "7 buckets",
            "value": "7",
          },
          Object {
            "label": "8 buckets",
            "value": "8",
          },
          Object {
            "label": "9 buckets",
            "value": "9",
          },
          Object {
            "label": "10 buckets",
            "value": "10",
          },
        ]
      }
      styles={
        Object {
          "control": [Function],
          "indicatorsContainer": [Function],
          "input": [Function],
          "menuList": [Function],
          "option": [Function],
          "singleValue": [Function],
          "valueContainer": [Function],
        }
      }
    />
  </div>
  <div
    className="bucketList"
  >
    <Connect(TextInputElement)
      __className="bucketName"
      data-spec="optional-field"
      entry={
        Object {
          "value": "Bucket 1",
        }
      }
      key="141e0356-9fdd-47d3-a12d-16efc5b45276"
      name="141e0356-9fdd-47d3-a12d-16efc5b45276"
      onChange={[Function]}
    />
    <Connect(TextInputElement)
      __className="bucketName"
      data-spec="optional-field"
      entry={
        Object {
          "value": "Bucket 2",
        }
      }
      key="e81b3f1a-0863-4418-8a72-9c9f8aa72b7c"
      name="e81b3f1a-0863-4418-8a72-9c9f8aa72b7c"
      onChange={[Function]}
    />
  </div>
  <OptionalTextInput
    helpText="By naming the result, you can reference it later using @run.results.whatever_the_name_is"
    name="Result Name"
    onChange={[Function]}
    toggleText="Save as.."
    value={
      Object {
        "value": "",
      }
    }
  />
</Dialog>
`;

exports[`RandomRouterForm should convert from a non-random node 2`] = `
Array [
  Object {
    "inboundConnections": Object {},
    "node": Object {
      "actions": Array [],
      "exits": Array [
        Object {
          "uuid": "c5722340-f7e1-4d99-ac5e-3a6e59845111",
        },
        Object {
          "destination_uuid": null,
          "uuid": "1888ae1f-2518-4727-98e2-731674e1760e",
        },
      ],
      "router": Object {
        "categories": Array [
          Object {
            "exit_uuid": "c5722340-f7e1-4d99-ac5e-3a6e59845111",
            "name": "Bucket 1",
            "uuid": "141e0356-9fdd-47d3-a12d-16efc5b45276",
          },
          Object {
            "exit_uuid": "1888ae1f-2518-4727-98e2-731674e1760e",
            "name": "Bucket 2",
            "uuid": "e81b3f1a-0863-4418-8a72-9c9f8aa72b7c",
          },
        ],
        "type": "random",
      },
      "uuid": "f05fa107-03db-4315-a211-53da63603e6f",
    },
    "ui": Object {
      "config": Object {},
      "position": null,
      "type": "split_by_random",
    },
  },
]
`;

exports[`RandomRouterForm should initialize existing random 1`] = `
<Dialog
  buttons={
    Object {
      "primary": Object {
        "name": "Ok",
        "onClick": [Function],
      },
      "secondary": Object {
        "name": "Cancel",
        "onClick": [Function],
      },
    }
  }
  headerClass="split_by_random"
  title="Split Randomly"
>
  <TypeList
    __className=""
    initialType={
      Object {
        "description": "Split by random chance",
        "form": undefined,
        "localization": [Function],
        "localizeableKeys": Array [
          "exits",
        ],
        "name": "Split Randomly",
        "type": "split_by_random",
      }
    }
    onChange={[MockFunction]}
  />
  <div
    className="leadIn"
  >
    Split them randomly into one of
  </div>
  <div
    className="bucketSelect"
  >
    <SelectElement
      entry={
        Object {
          "value": Object {
            "label": "5 buckets",
            "value": "5",
          },
        }
      }
      name="Buckets"
      onChange={[Function]}
      options={
        Array [
          Object {
            "label": "2 buckets",
            "value": "2",
          },
          Object {
            "label": "3 buckets",
            "value": "3",
          },
          Object {
            "label": "4 buckets",
            "value": "4",
          },
          Object {
            "label": "5 buckets",
            "value": "5",
          },
          Object {
            "label": "6 buckets",
            "value": "6",
          },
          Object {
            "label": "7 buckets",
            "value": "7",
          },
          Object {
            "label": "8 buckets",
            "value": "8",
          },
          Object {
            "label": "9 buckets",
            "value": "9",
          },
          Object {
            "label": "10 buckets",
            "value": "10",
          },
        ]
      }
      styles={
        Object {
          "control": [Function],
          "indicatorsContainer": [Function],
          "input": [Function],
          "menuList": [Function],
          "option": [Function],
          "singleValue": [Function],
          "valueContainer": [Function],
        }
      }
    />
  </div>
  <div
    className="bucketList"
  >
    <Connect(TextInputElement)
      __className="bucketName"
      data-spec="optional-field"
      entry={
        Object {
          "value": "Bucket 1",
        }
      }
      key="e67ce051-f3e4-4c42-807b-e393df5fa382"
      name="e67ce051-f3e4-4c42-807b-e393df5fa382"
      onChange={[Function]}
    />
    <Connect(TextInputElement)
      __className="bucketName"
      data-spec="optional-field"
      entry={
        Object {
          "value": "Bucket 2",
        }
      }
      key="e0bc3776-792f-49d2-b4be-48be2cf8159a"
      name="e0bc3776-792f-49d2-b4be-48be2cf8159a"
      onChange={[Function]}
    />
    <Connect(TextInputElement)
      __className="bucketName"
      data-spec="optional-field"
      entry={
        Object {
          "value": "Bucket 3",
        }
      }
      key="6c22884b-0e35-4206-982e-18320691eda9"
      name="6c22884b-0e35-4206-982e-18320691eda9"
      onChange={[Function]}
    />
    <Connect(TextInputElement)
      __className="bucketName"
      data-spec="optional-field"
      entry={
        Object {
          "value": "Bucket 4",
        }
      }
      key="a62e8284-49f8-4292-adbc-d5f6607f85c5"
      name="a62e8284-49f8-4292-adbc-d5f6607f85c5"
      onChange={[Function]}
    />
    <Connect(TextInputElement)
      __className="bucketName"
      data-spec="optional-field"
      entry={
        Object {
          "value": "Bucket 5",
        }
      }
      key="0c8c9239-9b59-473a-a229-d8a9693be270"
      name="0c8c9239-9b59-473a-a229-d8a9693be270"
      onChange={[Function]}
    />
  </div>
  <OptionalTextInput
    helpText="By naming the result, you can reference it later using @run.results.whatever_the_name_is"
    name="Result Name"
    onChange={[Function]}
    toggleText="Save as.."
    value={
      Object {
        "value": "",
      }
    }
  />
</Dialog>
`;

exports[`RandomRouterForm should render 1`] = `
<Dialog
  buttons={
    Object {
      "primary": Object {
        "name": "Ok",
        "onClick": [Function],
      },
      "secondary": Object {
        "name": "Cancel",
        "onClick": [Function],
      },
    }
  }
  headerClass="split_by_random"
  title="Split Randomly"
>
  <TypeList
    __className=""
    initialType={
      Object {
        "description": "Split by random chance",
        "form": undefined,
        "localization": [Function],
        "localizeableKeys": Array [
          "exits",
        ],
        "name": "Split Randomly",
        "type": "split_by_random",
      }
    }
    onChange={[MockFunction]}
  />
  <div
    className="leadIn"
  >
    Split them randomly into one of
  </div>
  <div
    className="bucketSelect"
  >
    <SelectElement
      entry={
        Object {
          "value": Object {
            "label": "2 buckets",
            "value": "2",
          },
        }
      }
      name="Buckets"
      onChange={[Function]}
      options={
        Array [
          Object {
            "label": "2 buckets",
            "value": "2",
          },
          Object {
            "label": "3 buckets",
            "value": "3",
          },
          Object {
            "label": "4 buckets",
            "value": "4",
          },
          Object {
            "label": "5 buckets",
            "value": "5",
          },
          Object {
            "label": "6 buckets",
            "value": "6",
          },
          Object {
            "label": "7 buckets",
            "value": "7",
          },
          Object {
            "label": "8 buckets",
            "value": "8",
          },
          Object {
            "label": "9 buckets",
            "value": "9",
          },
          Object {
            "label": "10 buckets",
            "value": "10",
          },
        ]
      }
      styles={
        Object {
          "control": [Function],
          "indicatorsContainer": [Function],
          "input": [Function],
          "menuList": [Function],
          "option": [Function],
          "singleValue": [Function],
          "valueContainer": [Function],
        }
      }
    />
  </div>
  <div
    className="bucketList"
  >
    <Connect(TextInputElement)
      __className="bucketName"
      data-spec="optional-field"
      entry={
        Object {
          "value": "Bucket 1",
        }
      }
      key="1dce2b34-9aab-4e20-81c4-3f0408dcb671"
      name="1dce2b34-9aab-4e20-81c4-3f0408dcb671"
      onChange={[Function]}
    />
    <Connect(TextInputElement)
      __className="bucketName"
      data-spec="optional-field"
      entry={
        Object {
          "value": "Bucket 2",
        }
      }
      key="763e4844-3e1b-407a-a1b5-5fdfcd308b41"
      name="763e4844-3e1b-407a-a1b5-5fdfcd308b41"
      onChange={[Function]}
    />
  </div>
  <OptionalTextInput
    helpText="By naming the result, you can reference it later using @run.results.whatever_the_name_is"
    name="Result Name"
    onChange={[Function]}
    toggleText="Save as.."
    value={
      Object {
        "value": "",
      }
    }
  />
</Dialog>
`;
