// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Flow helpers getDragStyle should return style object for drag selection box 1`] = `
Object {
  "height": 211,
  "left": 270,
  "top": 91,
  "width": 230,
}
`;

exports[`Flow instance methods onConnectorDrop should do NodeEditor work if the user is not dragging back 1`] = `
Array [
  Object {
    "originalAction": Object {
      "text": "",
      "type": "send_msg",
      "uuid": "04f59957-22e5-48cf-b26a-aad37f770db1",
    },
    "originalNode": Object {
      "ghost": true,
      "inboundConnections": Object {
        "3ec23bff-2995-4916-959a-39d31e0e5bea": "059a8daa-0697-44a6-9486-2386cc417e9d",
      },
      "node": Object {
        "actions": Array [
          Object {
            "text": "",
            "type": "send_msg",
            "uuid": "04f59957-22e5-48cf-b26a-aad37f770db1",
          },
        ],
        "exits": Array [
          Object {
            "destination_uuid": null,
            "uuid": "4993f221-2381-47f9-97c3-878dc5ef258c",
          },
        ],
        "uuid": "712ff538-daa1-4ab2-8ce3-762bc0bf7f12",
      },
      "ui": Object {
        "position": Object {
          "left": 0,
          "top": 0,
        },
        "type": "execute_actions",
      },
    },
  },
]
`;

exports[`Flow render should render NodeEditor 1`] = `
Object {
  "plumberConnectExit": [MockFunction],
  "plumberRepaintForDuration": [MockFunction],
}
`;

exports[`Flow render should render Simulator 1`] = `
Object {
  "Activity": Object {
    "clearSimulation": [MockFunction],
    "deregister": [MockFunction],
    "getActiveCount": [MockFunction],
    "getActivity": [MockFunction],
    "getPathCount": [MockFunction],
    "notifyListeners": [MockFunction],
    "registerListener": [MockFunction],
    "setSimulation": [MockFunction],
  },
  "mergeEditorState": [MockFunction] {
    "calls": Array [
      Array [
        Object {
          "containerOffset": Object {
            "left": 0,
            "top": 0,
          },
        },
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
}
`;

exports[`Flow render should render dragNode 1`] = `
<Connect(NodeComp)
  Activity={
    Object {
      "clearSimulation": [MockFunction],
      "deregister": [MockFunction],
      "getActiveCount": [MockFunction],
      "getActivity": [MockFunction],
      "getPathCount": [MockFunction],
      "notifyListeners": [MockFunction],
      "registerListener": [MockFunction],
      "setSimulation": [MockFunction],
    }
  }
  data-spec="ghost-node"
  ghost={true}
  key="5349b008-960d-4d8d-a17e-ad99b550ae87"
  nodeUUID="5349b008-960d-4d8d-a17e-ad99b550ae87"
  plumberConnectExit={[MockFunction]}
  plumberMakeSource={[MockFunction]}
  plumberMakeTarget={[MockFunction]}
  plumberRecalculate={[MockFunction]}
  plumberRemove={[MockFunction]}
  selected={false}
  startingNode={false}
/>
`;
