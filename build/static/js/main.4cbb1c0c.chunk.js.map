{"version":3,"sources":["variables.module.scss","components/flow/actions/sendemail/SendEmailForm.module.scss","components/flow/actions/setrunresult/SetRunResultForm.module.scss","components/flow/actions/startsession/StartSession.module.scss","components/counter/Counter.module.scss","components/mountscroll/MountScroll.module.scss","temba/TembaSelect.module.scss","components/form/textinput/UnicodeList.module.scss","components/flow/actions/addurn/AddURNForm.module.scss","components/form/multichoice/MultiChoice.module.scss","components/flow/actions/saymsg/SayMsg.module.scss","components/flow/actions/transferairtime/TransferAirtime.module.scss","components/form/optionaltext/OptionalTextInput.module.scss","components/form/ValidationFailures.module.scss","components/flow/routers/field/FieldRouterForm.module.scss","components/flow/routers/ticket/TicketRouterForm.module.scss","components/canvas/CanvasDraggable.module.scss","components/simulator/Simulator.module.scss","static/images/map.jpg","components/nodeeditor/TypeList.module.scss","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.module.scss","components/flow/actions/updatecontact/UpdateContactForm.module.scss","components/flow/routers/airtime/AirtimeRouterForm.module.scss","components/flow/routers/digits/DigitsRouterForm.module.scss","components/flow/routers/resthook/ResthookRouterForm.module.scss","components/flow/routers/wait/WaitRouterForm.module.scss","components/flow/routers/classify/ClassifyRouterForm.module.scss","components/loading/Loading.module.scss","components/flow/Flow.module.scss","global.module.scss","components/translator/TranslatorTab.module.scss","components/simulator/LogEvent.module.scss","components/dialog/Dialog.module.scss","components/form/textinput/TextInputElement.module.scss","components/flow/exit/Exit.module.scss","flowTypes.ts","services/Localization.ts","components/button/Button.tsx","utils/index.tsx","components/dialog/Dialog.tsx","store/constants.ts","components/fixy/Fixy.tsx","store/flowContext.ts","config/interfaces.ts","store/currencies.ts","external/index.ts","components/flow/actions/helpers.tsx","components/flow/props.ts","config/ConfigProvider.tsx","components/flow/actions/addlabels/AddLabels.tsx","components/form/assetselector/helpers.ts","components/form/FormElement.tsx","utils/reactselect.ts","utils/completion.ts","config/i18n/index.js","temba/TembaSelect.tsx","components/form/assetselector/AssetSelector.tsx","components/form/assetselector/widgets.tsx","config/helpers.ts","components/nodeeditor/TypeList.tsx","store/validators.ts","store/nodeEditor.ts","components/flow/actions/addlabels/helpers.ts","components/flow/actions/addlabels/AddLabelsForm.tsx","components/flow/actions/addurn/helpers.ts","components/form/textinput/constants.ts","components/flow/actions/addurn/AddURN.tsx","components/form/select/SelectElement.tsx","components/form/textinput/UnicodeList.tsx","components/form/textinput/CharCount.tsx","components/form/textinput/TextInputElement.tsx","components/form/textinput/ExcellentParser.ts","components/form/textinput/helpers.ts","components/flow/actions/addurn/AddURNForm.tsx","components/flow/actions/callresthook/CallResthook.tsx","components/flow/actions/callwebhook/CallWebhook.tsx","components/flow/actions/changegroups/helpers.ts","components/flow/actions/changegroups/addgroups/AddGroupsForm.tsx","components/flow/actions/changegroups/addgroups/helpers.ts","components/flow/actions/changegroups/ChangeGroups.tsx","components/form/checkbox/CheckboxElement.tsx","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.tsx","components/flow/actions/changegroups/removegroups/helpers.ts","components/flow/helpers.ts","components/flow/actions/localization/KeyLocalizationForm.tsx","components/flow/actions/localization/helpers.ts","components/pill/Pill.tsx","components/form/multichoice/MultiChoice.tsx","components/uploadbutton/UploadButton.tsx","components/flow/actions/localization/MsgLocalizationForm.tsx","components/flow/actions/missing/Missing.tsx","components/flow/actions/playaudio/PlayAudio.tsx","components/flow/actions/playaudio/PlayAudioForm.tsx","components/flow/actions/playaudio/helpers.ts","components/mediaplayer/MediaPlayer.tsx","components/flow/actions/saymsg/SayMsg.tsx","components/flow/actions/saymsg/SayMsgForm.tsx","components/flow/actions/saymsg/helpers.ts","components/flow/actions/sendbroadcast/SendBroadcast.tsx","components/flow/actions/sendbroadcast/SendBroadcastForm.tsx","components/flow/actions/sendbroadcast/helpers.ts","components/flow/actions/sendemail/SendEmail.tsx","components/form/select/tags/TaggingElement.tsx","components/flow/actions/sendemail/SendEmailForm.tsx","components/flow/actions/sendemail/helpers.ts","components/flow/actions/sendmsg/SendMsg.tsx","components/flow/actions/sendmsg/helpers.ts","components/flow/actions/sendmsg/SendMsgForm.tsx","components/flow/actions/setrunresult/SetRunResult.tsx","components/flow/actions/setrunresult/SetRunResultForm.tsx","components/flow/actions/setrunresult/helpers.ts","components/flow/actions/startflow/StartFlow.tsx","components/flow/actions/startsession/StartSession.tsx","components/flow/routers/constants.ts","components/flow/actions/startsession/StartSessionForm.tsx","components/flow/actions/startsession/helpers.ts","components/flow/actions/transferairtime/TransferAirtime.tsx","components/flow/actions/updatecontact/UpdateContact.tsx","components/helpers.ts","components/flow/routers/helpers.ts","components/flow/node/helpers.ts","store/mutators.ts","components/flow/actions/updatecontact/UpdateContactForm.tsx","components/flow/routers/airtime/currency/CurrencyElement.tsx","components/form/optionaltext/OptionalTextInput.tsx","components/flow/routers/widgets.tsx","components/form/ValidationFailures.tsx","components/flow/routers/airtime/helpers.ts","components/flow/routers/airtime/AirtimeRouterForm.tsx","config/operatorConfigs.ts","components/flow/routers/case/helpers.ts","components/flow/routers/case/CaseElement.tsx","components/flow/routers/caselist/helpers.ts","components/flow/routers/caselist/CaseList.tsx","components/flow/routers/expression/ExpressionRouterForm.tsx","components/flow/routers/digits/DigitsRouterForm.tsx","components/flow/routers/digits/helpers.ts","components/nodeeditor/constants.ts","components/flow/routers/field/FieldRouterForm.tsx","components/flow/routers/expression/helpers.ts","components/flow/routers/field/helpers.ts","components/flow/routers/groups/helpers.ts","components/flow/routers/localization/helpers.ts","components/flow/routers/groups/GroupsRouterForm.tsx","components/flow/routers/localization/RouterLocalizationForm.tsx","components/flow/routers/menu/helpers.ts","components/flow/routers/menu/MenuRouterForm.tsx","components/flow/routers/random/helpers.ts","components/flow/routers/random/RandomRouterForm.tsx","components/flow/routers/response/helpers.ts","components/flow/routers/response/ResponseRouterForm.tsx","components/form/timeout/TimeoutControl.tsx","components/flow/routers/resthook/helpers.ts","components/flow/routers/resthook/ResthookRouterForm.tsx","components/flow/routers/result/helpers.ts","components/flow/routers/result/ResultRouterForm.tsx","components/flow/routers/subflow/helpers.ts","components/flow/routers/subflow/SubflowRouterForm.tsx","components/flow/routers/wait/helpers.ts","components/flow/routers/webhook/helpers.ts","components/flow/routers/wait/WaitRouterForm.tsx","components/flow/routers/webhook/header/HeaderElement.tsx","components/flow/routers/webhook/WebhookRouterForm.tsx","components/flow/actions/callclassifier/CallClassifier.tsx","config/index.ts","components/flow/routers/classify/helpers.ts","components/flow/routers/classify/ClassifyRouterForm.tsx","components/flow/routers/scheme/helpers.ts","components/flow/routers/scheme/SchemeRouterForm.tsx","components/flow/routers/ticket/helpers.ts","components/flow/routers/ticket/TicketRouterForm.tsx","components/flow/actions/openticket/OpenTicket.tsx","config/typeConfigs.ts","components/flow/actions/updatecontact/helpers.ts","store/editor.ts","store/thunks.ts","store/helpers.ts","components/canvas/CanvasDraggable.tsx","components/canvas/helpers.ts","components/canvas/Canvas.tsx","components/counter/Counter.tsx","components/titlebar/TitleBar.tsx","components/mountscroll/MountScroll.tsx","components/flow/actions/action/Action.tsx","components/draghelper/DragHelper.tsx","components/flow/exit/helpers.ts","components/loading/Loading.tsx","components/Portal.tsx","components/flow/exit/Exit.tsx","components/flow/node/Node.tsx","components/simulator/LogEvent.tsx","components/modal/Modal.tsx","components/nodeeditor/NodeEditor.tsx","components/simulator/helpers.ts","components/simulator/Simulator.tsx","components/simulator/ContextExplorer.tsx","components/sticky/Sticky.tsx","services/Plumber.ts","utils/debug.ts","components/flow/Flow.tsx","components/translator/helpers.ts","components/languageselector/LanguageSelector.tsx","components/poptab/PopTab.tsx","components/revisions/RevisionExplorer.tsx","components/issues/IssuesTab.tsx","store/rootReducer.ts","store/state.ts","store/createStore.ts","components/translator/TranslatorTab.tsx","components/index.tsx","serviceWorker.js","index.js","components/simulator/ContextExplorer.module.scss","components/sticky/Sticky.module.scss","components/flow/node/Node.module.scss","components/shared.module.scss","components/flow/actions/action/Action.module.scss","components/flow/routers/case/CaseElement.module.scss","components/flow/routers/webhook/WebhookRouterForm.module.scss","components/revisions/RevisionExplorer.module.scss","components/form/FormElement.module.scss","components/flow/actions/sendmsg/SendMsgForm.module.scss","components/flow/routers/result/ResultRouterForm.module.scss","components/titlebar/TitleBar.module.scss","components/poptab/PopTab.module.scss","components/issues/IssuesTab.module.scss","components/form/textinput/CharCount.module.scss","components/mediaplayer/MediaPlayer.module.scss","components/flow/routers/localization/RouterLocalizationForm.module.scss","components/draghelper/DragHelper.module.scss","components/index.module.scss","components/flow/actions/sendmsg/SendMsg.module.scss","components/form/assetselector/AssetSelector.module.scss","components/form/checkbox/CheckboxElement.module.scss","components/flow/routers/airtime/currency/CurrencyElement.module.scss","components/flow/routers/subflow/SubflowRouterForm.module.scss","components/button/Button.module.scss","components/pill/Pill.module.scss","components/flow/actions/sendbroadcast/SendBroadcast.module.scss","components/flow/routers/caselist/CaseList.module.scss","components/flow/routers/menu/MenuRouterForm.module.scss","components/flow/routers/random/RandomRouterForm.module.scss","components/form/timeout/TimeoutControl.module.scss","components/canvas/Canvas.module.scss","components/languageselector/LanguageSelector.module.scss"],"names":["module","exports","DependencyType","FlowIssueType","RouterTypes","WaitTypes","HintTypes","ContactProperties","ValueType","StartFlowArgs","StartFlowExitNames","WebhookExitNames","TransferAirtimeExitNames","SPEC_VERSION","ButtonTypes","LocalizedObject","object","id","name","localizedKeys","localizedObject","localized","iso","language","this","key","value","Object","assign","Array","isArray","length","Localization","translations","uuid","values","keys","forEach","addTranslation","SNAKED_CHARS","GRID_SIZE","parseInt","variables","grid_size","NODE_SPACING","node_spacing","NODE_PADDING","node_padding","snapToGrid","left","top","leftAdjust","topAdjust","Math","max","snapPositionToGrid","position","right","bottom","snakify","toLowerCase","trim","replace","titleCase","str","s","charAt","toUpperCase","substr","hasErrorType","errors","exps","error","exp","match","createClickHandler","onClick","shouldCancelClick","onMouseDown","event","onMouseUp","getLocalization","obj","localization","translate","emphasize","text","className","renderIf","predicate","then","otherwise","isRealValue","undefined","set","val","$set","merge","$merge","unset","$unset","push","arr","$push","splice","$splice","createUUID","generateUUID","range","start","end","from","v","k","pluralize","count","noun","suffix","hasString","names","find","item","throttle","func","timeout","ready","setTimeout","onNextRender","fn","window","bool","prop","HeaderStyle","Button","props","state","active","bindCallbacks","include","setState","onRef","type","disabled","leftSpacing","topSpacing","iconName","ref","style","marginLeft","marginTop","handleMouseDown","handleMouseUp","styles","btn","paddingRight","React","Constants","Dialog","tabFocus","primaryButton","activeTab","index","foundTab","tabs","tab","hasErrors","shiftKey","preventDefault","stopPropagation","target","blur","click","focus","console","log","document","addEventListener","handleKey","capture","clearTimeout","removeEventListener","rightButtons","buttons","primary","secondary","tertiary","handlePrimaryButton","leftButtons","headerClasses","header","clickable","headerClass","shared","headerIcon","iconed","headerStyle","BARBER","barber","activeClasses","dialog","getButtons","join","map","evt","icon","tab_icon","checked","header_overlay","header_icon","title_container","title","subtitle","noPadding","content","body","children","footer","left_buttons","gutter","right_buttons","Fixy","ele","fixed","scrollY","handleScroll","getBoundingClientRect","AssetType","FlowTypes","ContactStatus","Types","Operators","FeatureFilter","PopTabType","REMOVE_VALUE_ASSET","Remove","DEFAULT_LANGUAGE","Language","initialState","definition","baseLanguage","metadata","dependencies","results","waiting_exit_uuids","parent_refs","issues","contactFields","nodes","assetStore","updateDefinition","UPDATE_DEFINITION","payload","updateNodes","UPDATE_NODES","updateIssues","UPDATE_ISSUES","updateMetadata","UPDATE_METADATA","updateAssets","assets","UPDATE_ASSET_MAP","combineReducers","action","UPDATE_BASE_LANGUAGE","UPDATE_CONTACT_FIELDS","currencies","ARS","Currency","AUD","BIF","BRL","CAD","CDF","CLP","COP","DJF","DOP","DZD","EUR","GBP","GHS","GNF","KES","LBP","LKR","LRD","MWK","MXN","NAD","NPR","NZD","PHP","PKR","RUB","RWF","SDG","SGD","SLL","SOS","SRD","SVC","TND","TRY","TZS","UGX","USD","UYU","UZS","VEF","XCD","YER","ZAR","ZMW","ZWL","HIDDEN","NONE","VOICE","SURVEY","TEXT_TYPES","MESSAGE","ONLINE","axios","defaults","headers","post","responseType","saveRevision","endpoint","csrf","getCookie","patch","release","spec_version","split","Promise","resolve","reject","response","status","data","catch","cookie","idx","indexOf","fetchAsset","getAssets","asset","getAssetPage","url","get","result","resultToAsset","order","next","a","pageUrl","assetPage","concat","idKey","assetType","Flow","label","isMatch","input","shouldExclude","inputLower","includes","searchAssetMap","query","additionalOptions","search","matches","filter","createAssetStore","endpoints","channels","getURL","Channel","items","classifiers","Classifier","languages","flows","fields","Field","globals","Global","groups","Group","revisions","Revision","labels","Label","Result","recipients","Contact","URN","resthooks","Resthook","templates","Template","ticketers","Ticketer","prefetched","fetches","storeId","store","assetListToMap","all","getFunctions","getCompletionSchema","getFlowDetails","revisionToLoad","Error","details","path","endsWith","startsWith","location","protocol","hostname","port","getBaseURL","showHelpArticle","link","open","renderIssues","issueProps","helpArticles","padding","issue","num","node_uuid","action_uuid","margin","display","fontSize","color","marginRight","renderIssue","message","description","MISSING_DEPENDENCY","i18nKey","dependency","INVALID_REGEX","regex","LEGACY_EXTRA","article","issue_help","getActionUUID","nodeSettings","currentType","originalAction","getRecipients","selected","group","contacts","contact","missing","legacy_vars","expression","Expression","renderAssetList","reduce","elements","renderAsset","assetBody","node_group","node_label","e","href","editor","rel","node_asset","getAllErrors","entry","validationFailures","getExpressions","getRecipientsByAsset","NAME_PROPERTY","Name","ContactProperty","CHANNEL_PROPERTY","LANGUAGE_PROPERTY","STATUS_PROPERTY","Status","fakePropType","isRequired","ConfigProvider","config","only","childContextTypes","assetService","AddLabelsComp","context","contextTypes","sortByName","b","localeCompare","cx","classNames","bind","FormElement","showLabel","helpText","help_text","hideError","getValidationErrors","failure","send_msg_error","sendMsgError","arrow_up","error_list","getName","getHelpText","errorsToDisplay","getErrors","border","invalid","__className","large","placeholder","singleValue","multiValue","caretColor","marginBottom","boxShadow","control","borderColor","transition","messageStyle","borderBottom","borderBottomRightRadius","borderBottomLeftRadius","small","maxHeight","minHeight","lineHeight","menuList","option","indicatorsContainer","height","valueContainer","tagging","backgroundColor","functions","signature","getCompletions","completion","dotQuery","parts","currentProps","schema","root","prefix","part","shift","nextProp","nextType","types","properties","property_template","template","help","summary","getCompletionName","getCompletionSignature","resources","translation","en","es","pt","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","TembaSelectStyle","AssetOption","isDisabled","components","innerRef","innerProps","Option","Scheme","getIconForAssetType","AssetSelector","lastCreation","defaultOptions","menuOpen","isLoading","onChange","callback","options","completions","localMatches","onFilter","sort","sortFunction","encodeURIComponent","remoteAssets","remoteMatches","removalAsset","valueClearable","seen","hasOwnProperty","uniqueBy","existing","createAssetFromInput","createPrefix","inputValue","now","Date","getTime","postNewAsset","onAssetCreated","non_field_errors","baseControl","erroredControl","fallbackPlaceholder","t","toLocaleLowerCase","multi","commonAttributes","selection","captureMenuScroll","getStyle","handleChanged","onMenuOpen","handleMenuOpen","onMenuClose","handleMenuClose","onBlur","handleClearMessage","menuShouldBlockScroll","isMulti","isClearable","formClearable","isSearchable","searchable","getOptionValue","getOptionLabel","isValidNewOption","handleCheckValid","formatCreateLabel","handleCreatePrompt","getNewOptionData","handleGetNewOptionData","onCreateOption","handleCreateOption","cacheOptions","loadOptions","handleLoadOptions","noOptionsMessage","nextProps","prevState","isOnlineFlowType","flowType","filterVisibility","filters","visibility","findIndex","ft","TembaSelect","selectbox","nameKey","valueKey","getValue","resolved","op","JSON","stringify","getOption","normal","data-testid","TypeList","typeConfigs","initialType","handleChangeType","configsToDisplay","type_list","getTypeConfigs","mergeForm","form","toMerge","toRemove","updated","isEntry","existingIdx","mutate","remove","removeKeys","valid","typeConfig","userAddingAction","settings","updateNodeEditorSettings","UPDATE_NODE_EDITOR_SETTINGS","updateUserAddingAction","UPDATE_USER_ADDING_ACTION","UPDATE_TYPE_CONFIG","REGEX_URL","RegExp","fromRegex","inputAsString","test","failures","validate","validators","allFailures","validateFunc","validation","Empty","isNotFinished","Required","MoreThan","amount","checkName","parseFloat","shouldRequireIf","required","validateIf","HeaderName","headerUtils","MaxOfTenItems","StartIsNonNumeric","ValidURL","Numeric","Alphanumeric","NumOrExp","getAsset","AddLabelsForm","add_input_labels","formState","handleLabelsChanged","newAction","updateAction","onClose","submitting","updates","handleSave","addAsset","onTypeChange","data-spec","handleCreateAssetFromInput","handleLabelCreated","KeyValues","getSchemeObject","scheme","SCHEMES","getSchemeSelectOption","schemeToSelectOption","AddURNComp","schemeObject","schemeName","SelectElement","UnicodeList","unicodeChars","chars","unicode_list","char","unicode_char","CharCount","hasUnicode","toolTipTextClasses","tooltip_text","unicode","tooltip","divider","fine_print","Count","GSM","0","1","2","3","4","5","6","7","8","9","$","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","_","c","d","f","g","h","i","j","l","m","n","o","p","q","r","u","w","x","y","z","Ä","Å","Æ","Ç","É","Ñ","Ö","Ø","Ü","ß","à","ä","å","æ","è","é","ì","ñ","ò","ö","ø","ù","ü","Γ","Δ","Θ","Λ","Ξ","Π","Σ","Φ","Ψ","Ω","isValidStart","partialExpression","allowedTopLevels","allowIncomplete","substring","topLevel","allowed","isWordChar","ch","isInStringLiteral","numQuotes","ExcellentParser","expressionPrefix","textToCaret","expressions","findExpressions","lastExpression","closed","neededParentheses","fragment","skipChar","inQuotes","prependFlag","pos","pop","identifier","parenthesesLevel","re","exec","currentExpression","nextCh","nextNextCh","getUnicodeChars","msg","getMsgStats","newVal","constructor","stats","characterCount","ReactMarkdown","require","caretCoordinates","completionVisible","selectedOptionIndex","TextInputElement","selectedEl","textEl","parser","nextCaret","completionSchema","initial","SMS","selectionStart","selectionEnd","focusInput","previous","scrollIntoView","autocomplete","KEY_ENTER","onEnter","KEY_SPACE","ctrlKey","reevaluate","currentTarget","KEY_P","setSelection","KEY_UP","KEY_N","KEY_DOWN","KEY_AT","getCaretCoordinates","KEY_ESC","KEY_TAB","caret","newValue","parens","newCaret","KEY_BACKSPACE","executeQuery","force","KEY_F","KEY_B","KEY_RIGHT","KEY_LEFT","expressionContext","includeFunctions","functionQuery","functionContext","fns","curr","selectedIdx","showSummary","numExamples","examples","option_summary","source","option_examples","example_header","example","slice","option_name","fn_marker","option_signature","optionClasses","first_option","selectedElRef","scrollTop","textElClasses","textinput","showInvalid","textarea","textElRef","handleClick","handleChange","handleBlur","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","maxLength","completionClasses","completion_container","hidden","fnClasses","fn_container","getOptions","charCount","send_msg","send_broadcast","showFn","wrapper","getTextElement","getScroll","options_wrapper","option_list","ConnectedTextInputElement","connect","flowContext","editorState","nodeEditor","forwardRef","AddURNForm","add_contact_urn","initializeForm","handlePathChanged","alignItems","scheme_selection","handleSchemeChanged","CallResthookComp","resthook","CallWebhookComp","excludeDynamicGroups","mapGroupsToAssets","mapAssetsToGroups","searchResults","AddGroupsForm","add_contact_groups","handleGroupsChanged","handleGroupAdded","getContentMarkup","remove_contact_groups","specId","getRemoveAllMarkup","ChangeGroupsComp","getChangeGroupsMarkup","CheckboxElement","checkboxIcon","labelClassName","checkboxClassName","description_solo","LABEL","REMOVE_FROM_ALL","REMOVE_FROM_ALL_DESC","RemoveGroupsForm","removeAll","all_groups","groupValidators","handleUpdate","checkbox","handleRemoveAllUpdate","determineTypeConfig","renderNode","originalNode","node","getTypeConfig","actions","getType","router","hasIssues","translating","KeyLocalizationForm","keyValues","localizations","getObject","localizeableKeys","initializeLocalizedKeyForm","updateLocalizations","base","translate_from","handleKeyUpdate","Pill","pillStyles","pill","data-advanced","advanced","MultiChoiceInput","currentInput","onEntryChanged","newItem","onItemAdded","chosen","onRemoved","getChosenItems","handleInputChanged","handleValidateEmpty","handleAddItem","UploadButton","filePicker","onUploadChanged","files","FormData","append","handleUploadFile","removeText","handleRemoveUpload","uploadText","MsgLocalizationForm","quickReplies","templateVariables","templating","audio","say_msg","isLocalized","audio_url","quick_replies","initializeLocalizedForm","handleQuickRepliesUpdate","newQuickReply","newReplies","reply","updatedText","hasLocalizedValue","variable","handleTemplateVariableChanged","handleRemoveQuickReply","handleAddQuickReply","audioButton","attachments","handleAudioChanged","handleMessageUpdate","MissingComp","PlayAudioComp","PlayAudioForm","play_audio","handleAudioUpdate","MediaPlayer","stroke","radius","radiusNormalized","circumference","PI","durationSeconds","currentSeconds","playing","progress","currentTime","duration","ended","floor","triggered","handleTogglePlay","pause","play","prevProps","strokeDashoffset","player","width","handleRef","onTimeUpdate","handleTimeUpdate","src","circles","circle_background","fill","strokeWidth","cy","circle_foreground","strokeDasharray","button","PLACEHOLDER","SayMsgComp","recording","SayMsgForm","handleUploadChanged","SendBroadcastComp","to","line","SendBroadcastForm","handleRecipientsChanged","SendEmailComp","subject","TaggingElement","tags","tag","optionsToTags","onCheckValid","tagsToOptions","handleUpdateTags","prompt","createPrompt","Component","EMAIL_PATTERN","SendEmailForm","send_email","addresses","handleSubjectChanged","handleBodyChanged","SendMsgComp","replies","attachment","whatsapp","topic","facebook","TOPIC_OPTIONS","TYPE_OPTIONS","NEW_TYPE_OPTIONS","SendMsgForm","attachmentString","splitPoint","uploaded","msgTemplate","quickReplyEntry","sendAll","all_urns","stateToForm","handleTemplateChanged","templatingUUID","stateToAction","url_attachment","type_choice","upload","remove_upload","handleAttachmentRemoved","renderUpload","renderAttachment","emptyOption","templateTranslation","variable_count","handleTopicUpdate","clearable","handleShouldExcludeTemplate","template_text","handleQuickReplyEntry","renderAttachments","handleSendAllUpdate","hasFeature","HAS_WHATSAPP","renderTemplateConfig","HAS_FACEBOOK","renderTopicConfig","SetRunResultComp","getSavePlaceholder","getClearPlaceholder","SetRunResultForm","set_run_result","category","snaked","handleNameUpdate","resultFormat","handleValueUpdate","handleCategoryUpdate","StartFlowComp","flow","StartSessionComp","create_contact","contact_query","DefaultExitNames","START_TYPE_ASSETS","START_TYPE_CREATE","START_TYPE_QUERY","START_TYPE_OPTIONS","StartSessionForm","start_session","startType","contactQuery","handleStartTypeChanged","handleContactQueryChanged","handleFlowChanged","TransferAirtimeComp","transfer","amounts","code","withEmph","emph","renderSetText","emphasizeName","UpdateContactComp","set_contact_field","field","set_contact_channel","channel","set_contact_language","getLanguageForCode","set_contact_status","set_contact_name","getDraggedFrom","ghostNode","ghost","exitUUIDs","inboundConnections","exitUUID","nodeUUID","ONLINE_PROPERTIES","OFFLINE_PROPERTIES","getContactProperties","WAIT_LABEL","GROUP_LABEL","createRenderNode","exits","uiConfig","ui","hasCases","cases","createCaseProps","categories","getCategories","parse","kase","matchingCategory","category_uuid","isRelativeDate","caseConfig","arguments","categoryName","operatorType","has_date_eq","has_date_gt","has_date_lt","isCategoryMatch","cat","categorizeCases","newCases","originalRouter","previousCategories","newCase","getSwitchRouter","previousCase","previousCategory","previousExit","exit","exit_uuid","switch","getDefaultRoute","defaultCategoryName","defaultCategory","default_category_uuid","defaultExit","getTimeoutRoute","timeoutCategory","timeoutExit","wait","No_Response","resolveRoutes","hasTimeout","resolvedDefaultCategory","Other","All_Responses","createWebhookBasedNode","useCategoryTest","previousRouter","destination_uuid","Success","Failure","has_category","has_only_text","operand","result_name","splitType","split_by_webhook","call_resthook","split_by_resthook","open_ticket","split_by_ticket","transfer_airtime","split_by_airtime","getCategoriesForExit","isGroupSplit","split_by_groups","getResultName","switchRouter","random","call_webhook","uniquifyNode","newNode","removeResultFromStore","resultName","reference","filteredRefs","references","actionUUID","removeResultReference","addResult","addRevision","revision","updateConnection","fromNodeUUID","fromExitUUID","destinationNodeUUID","updatedNodes","fromNode","getNode","exitIdx","getExitIndex","previousDestination","mergeNode","removeNode","spliceInAction","previousNode","otherExit","getDefaultExit","destination","execute_actions","remap","nodeToRemove","detectLoops","updatePosition","snap","adjusted","updateStickyNotePosition","stickyUUID","_ui","stickies","lastPos","updateStickyNote","sticky","CONTACT_STATUS_ACTIVE","ACTIVE","CONTACT_STATUS_BLOCKED","BLOCKED","CONTACT_STATUS_STOPPED","STOPPED","CONTACT_STATUS_ARCHIVED","ARCHIVED","CONTACT_STATUS_OPTIONS","UpdateContactForm","fieldValue","dispatch","getState","assetMap","mutators","handlePropertyChange","handleLanguageUpdate","handleChannelUpdate","onUpdated","handleStatusUpdate","handleFieldValueUpdate","value_type","sortFieldsAndProperties","handleFieldAdded","getValueWidget","CurrencyElement","isNaN","Number","currency","amountInput","handleAmountChanged","removeIco","onRemove","form_element","exclude","airtime","handleCurrencyChanged","OptionalTextInput","editing","handleTextChanged","toggle_link","handleEditingChanged","toggleText","optional_text_input","createResultNameInput","ValidationFailures","getOriginalAction","AirtimeRouterForm","nodeToState","updateRouter","stateToNode","handleTransferChanged","handleRemoved","renderAmount","renderAmounts","handleUpdateResultName","intentOperatorList","has_top_intent","verboseName","operands","has_intent","operatorConfigList","has_any_word","has_all_words","has_phrase","has_only_phrase","has_beginning","has_text","has_number","has_number_between","has_number_lt","has_number_lte","has_number_eq","has_number_gte","has_number_gt","has_date","has_time","has_group","has_phone","has_email","has_state","has_district","has_ward","has_error","has_value","has_pattern","operatorConfigMap","operatorConfig","getOperatorConfig","pre","validateCase","classifier","exitEdited","exitName","min","argument","district","intentValidators","intents","intent","confidence","categoryNameEdited","getCategoryName","today","inDays","abs","words","firstWord","CaseElement","operators","arg1","arg2","previousProps","filterOperators","getArgumentArray","getCaseProps","handleIntentChanged","handleMinChanged","data-draggable","handleMaxChanged","handleIntentMenuOpened","handleIntentMenuClosed","handleConfidenceChanged","handleStateChanged","handleDistrictChanged","relative_date","handleArgumentChanged","kaseError","dnd_icon","choice","getOperators","handleOperatorChanged","multi_operand","single_operand","renderArguments","categorize_as","handleExitChanged","remove_icon","handleRemoveClicked","DragCursor","SortableItem","SortableElement","row","caseProps","list","handleRemoveCase","handleUpdateCase","CaseList","sortableList","SortableContainer","case_list","currentCases","shouldCancelStart","hasEmptyCase","createEmptyCase","ensureEmptyCase","removeCase","onCasesUpdated","oldIndex","newIndex","arrayMove","case_list_container","scrolling","onSortEnd","handleSortEnd","HTMLElement","dataset","draggable","InputToFocus","DigitsRouterForm","initialCases","wait_for_digits","optionalRouter","hint","digits","wait_for_response","lead_in","handleCasesUpdated","renderEdit","ExpressionRouterForm","split_by_expression","handleOperandUpdated","getRoutableFields","FieldRouterForm","split_by_contact_field","field_select","handleFieldChanged","LocalizedType","extractGroups","groupsToCases","GroupsRouterForm","getLocalizedObjects","localizedType","filtered","Case","hasLocalizableCases","original","RouterLocalizationForm","Category","arg","originalCase","orginalArgument","translating_operator_container","translating_operator","translating_from","translating_to","handleUpdateCaseArgument","originalCategory","translating_category","handleUpdateCategoryName","renderCases","renderCategories","menuToCases","menu","previousCases","MenuRouterForm","wait_for_menu","originalCases","menu_option","digit","handleMenuChanged","renderOption","renderMenu","BUCKET_OPTIONS","bucketOption","fillOutCategories","buckets","RandomRouterForm","split_by_random","bucketChoice","newExit","bucket_name","handleBucketNameChanged","OPTIONS","bucket_select","handleBucketsChanged","bucket_list","renderBucketNames","TIMEOUT_OPTIONS","DEFAULT_TIMEOUT","TimeoutControl","entries","isChecked","onChanged","timeout_control_container","left_section","getInstructions","handleChecked","drop_down","getSelected","handleTimeoutChanged","ResponseRouterForm","seconds","invalidCase","handleUpdateTimeout","ResthookRouterForm","resthookAsset","handleResthookChanged","FIELD_NUMBER_OPTIONS","DELIMITER_OPTIONS","getDelimiterOption","ResultRouterForm","fieldNumber","delimiter","shouldDelimit","split_by_run_result","split_by_run_result_delimited","handleResultChanged","nodeType","non_delimited","result_select","delimited","field_number","handleFieldNumberChanged","lead_in_sub","result_select_delimited","handleDelimiterChanged","should_delimit","handleShouldDelimitChanged","renderFieldDelimited","renderField","flowToAsset","assetToFlow","SubflowRouterForm","params","split_by_subflow","enter_flow","setRunResult","hasFieldErrors","startFlowAction","Complete","Expired","setResultAction","info","param","param_name","param_input","handleParamChanged","handleFilter","Methods","WaitRouterForm","wait_for_audio","wait_for_image","image","wait_for_location","wait_for_video","video","NAME_PLACEHOLDER","VALUE_PLACEHOLDER","HeaderElement","getHeader","remove_ico","handleRemove","getRemoveIco","header_name","handleChangeName","header_value","handleChangeValue","GET_METHOD","GET","METHOD_OPTIONS","POST","PUT","DELETE","HEAD","PATCH","getDefaultBody","method","WebhookRouterForm","ensureEmptyHeader","oldMethod","newMethod","existingContentTypeHeader","lastHeader","removeHeader","needsHeader","handleCreateHeader","headerElements","handleHeaderRemoved","handleHeaderUpdated","body_form","req_body","handleBodyUpdate","handleMethodUpdate","handleUrlUpdate","instructions","CallClassifierComp","call_classifier","routes","hiddenCases","route","existingCasePosition","every","existingCase","ensureRoute","routerResultName","actionResultName","split_by_intent","ClassifyRouterForm","showTab","handleClassifierUpdated","getChannelTypeOptions","excludeFromSplit","extractSchemes","schemes","selectOptions","schemesToCases","SchemeRouterForm","split_by_scheme","orginalCases","handleSchemesChanged","TicketRouterForm","ticketer","handleTicketerUpdate","handleSubjectUpdate","handleResultNameUpdate","OpenTicketComp","typeConfigList","component","massageForDisplay","aliases","HAS_RESTHOOK","HAS_TICKETER","HAS_AIRTIME","HAS_CLASSIFIER","dedupeTypeConfigs","typeConfigMap","alias","originalType","fieldAction","fieldToAsset","channelAction","channelToAsset","languageAction","languageToAsset","statusAction","nameAction","assetToField","assetToChannel","assetToLanguage","lang","EMPTY_DRAG_STATE","dragStartTime","dragDownPosition","dragActive","dragNodeUUID","dragGroup","dragSelection","currentRevision","simulating","fetchingFlow","debug","warnings","popped","activity","segments","liveActivity","activityInterval","visible","scrollToNode","scrollToAction","UPDATE_EDITOR_STATE","markDirty","lastDirtyAttemptTimeout","postingRevision","lastDirtyMillis","lastSuccessfulMillis","NETWORK_ERROR","createSaveMonitor","setInterval","mergeEditorState","modalMessage","saving","createDirty","revisionsEndpoint","quiet","newDefinition","getCurrentDefinition","createFlowIssueMap","updatedAssets","errorMessage","changes","updateEditorState","createNewRevision","loadFlowDefinition","currentTop","guessNodeType","getFlowComponents","mergeAssetMaps","renderNodeMap","fetchFlow","forceSave","fetchFlowActivity","triggerActivityUpdate","handleLanguageChange","currentLanguage","isEqual","onUpdateLocalizations","newDef","normalizedTranslations","prev","updateExitDestination","disconnectExit","removeAction","actionIdx","getActionIndex","moveActionUp","actionAbove","handleTypeConfigChange","updateTypeConfig","resetNodeEditingState","onUpdateAction","updateContactFields","onAddToNode","showAdvanced","onRemoveNodes","uuids","updatedDefinition","didNodes","didDef","onUpdateCanvasPositions","positions","updatedNodePosition","updatedStickyPosition","onConnectionDrag","sourceId","resultCount","createEmptyNode","updateSticky","onUpdateRouter","newRouterNode","previousAction","previousPosition","originalResultName","actionToSplice","topNode","bottomNode","topActions","bottomActions","onOpenNodeEditor","actionToTranslate","getLocalizations","updateTranslationFilters","translationFilters","translation_filters","activityTimeout","hasLoopSplit","hasWait","toNodeUUID","toNode","sendMsgAction","nodeMap","includeUI","renderNodes","getOrderedNodes","uiNodes","sorted","diff","suggestedResultNameCount","emptyNode","replyType","replyAction","actionType","pointerMap","groupUUID","groupsToChange","resultAction","pointers","toAdd","previousIssues","issueMap","nodeIssues","activityEndpoint","flowUUID","getActivity","CanvasDraggable","updateDimensions","clientWidth","clientHeight","nativeEvent","which","onDragStop","tagName","onDragStart","pageX","pageY","classes","onTransitionEnd","onAnimated","elementCreator","collides","fudge","getFirstCollision","changed","sortedDraggables","getOrderedDraggables","current","other","cascaded","setTop","newTop","Canvas","isScrolling","reflowTimeout","lastX","lastY","justSelected","onDragThrottled","onDragging","onMouseThrottled","handleMouseMove","documentElement","draggables","dragUUID","windowHeight","handleWindowResize","onLoaded","updatedPositions","drag","startX","startY","currentX","currentY","drag_selection","mutable","offset","isClickOnCanvas","draggingNew","updateStateWithScroll","clientY","updatePositions","box","collisions","getDraggablesInBox","speed","scrollBy","dimensions","newPosition","markReflow","reflowPositions","newPositions","attempts","collision","cascade","cascadeTop","reflow","onUpdatePositions","doReflow","windowY","otherState","viewportHeight","clearInterval","scrollCanvas","startPosition","xd","yd","lowestNode","delta","addPosition","DRAG_THRESHOLD","getSelectedPositions","onDoubleClick","canvas_container","onMouseMove","handleMouseUpCapture","handleDoubleClick","canvas_background","canvas","newDragElement","handleAnimated","handleUpdateDimensions","handleDragStart","handleDragStop","dragOnAdd","renderSelectionBox","PureComponent","Counter","handleScrollIntoView","keepVisible","scrollTo","behavior","handleMouseEvent","onMouseEnter","onMouseLeave","toString","counter","containerStyle","handleMouseEnter","handleMouseLeave","countStyle","TitleBar","confirmationTimeout","confirmingRemoval","handleConfirmRemoval","showMove","up_button","onMoveUp","remove_button","showRemoval","confirmation","remove_confirm","titletext","onRemoval","getConfirmationEl","moveArrow","getMoveArrow","getRemove","titlebar","MountScroll","pulse","handleScrollCompleted","timer","innerHeight","scrollHeight","ActionWrapper","attributes","getAttribute","missingLocalization","notLocalizable","has_router","not_localizable","missing_localization","getClasses","actionToInject","getAction","titleBarClass","actionClass","first","events","handleActionClicked","handleRemoval","handleMoveUp","render","overlay","pulseAfterScroll","ConnectedActionWrapper","bindActionCreators","DragHelper","drag_helper","arrow","tail","head","bold","getExitActivityKey","hexToRgb","hex","Loading","loading","size","units","borderRadius","square","animationDelay","background","Portal","el","portalRoot","createElement","getElementById","appendChild","ReactDOM","createPortal","ExitComp","hideDragHelper","pendingMessageFetch","confirmDelete","recentMessages","fetchingRecentMessages","showDragHelper","activityId","recentMessagesId","plumberMakeSource","getSourceId","handleDisconnect","plumberUpdateClass","plumberRemove","plumberConnectExit","recentsEndpoint","cancel","recents","sent","segmentCount","handleShowRecentMessages","handleHideRecentMessages","delim","hasRecents","recentStyles","recent_messages","no_recents","recentMessage","moment","fromNow","nameStyle","connected","dragNodeClasses","confirm","confirm_x","onDisconnect","dragging","exitClasses","unnamed_exit","confirm_delete","getSegmentCount","getRecentMessages","ConnectedExit","EMPTY","NodeComp","firstAction","clicking","handleShouldCancelClick","parentElement","canvasBounds","querySelector","plumberMakeTarget","ghostListener","getGhostListener","plumberRecalculate","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","textContent","Exit","onlyNode","startingNode","showUUIDs","handleUUIDClicked","actionList","firstRef","actionConfig","filterIssuesForAction","ActionComponent","Action","anyAction","enterAnimation","leaveAnimation","easing","addActions","save_result","save_as","add","handleAddToNode","getExits","flow_start","isStartNodeVisible","isSelected","immutable","renderDebug","flow_start_message","activeCount","onActivityClicked","cropped","exit_table","node_container","eleRef","Direction","scrollNode","scrollAction","Modal","customStyles","outline","ariaHideApp","isOpen","show","onAfterOpen","onModalOpen","onRequestClose","shouldCloseOnOverlayClick","contentLabel","NodeEditor","canceled","dragPoint","LocalizationForm","localizationProps","close","Form","formProps","handleAddAsset","mins","getMinutes","minStr","getHours","isMessage","isMT","MAP_THUMB","DrawerType","getStyleForDirection","direction","MO","msg_received","renderError","renderInfo","dangerouslySetInnerHTML","__html","renderMessage","attaches","audio_attachment","media_player","audio_text","alt","video_attachment","controls","msg_text","LogEvent","detailsVisible","showDetails","groups_added","renderValueList","groups_removed","renderClickable","email","email_details","webhook","webhook_details","request","http_logs","renderHTTPRequest","element","step_uuid","has_detail","event_viewer","classification","extra","toFixed","entities","entity","renderClassification","MT","renderGroupsChanged","renderEmailSent","base_language","service","renderWebhook","renderLabelsAdded","actual_amount","recipient","urn","renderLogEvent","EXCLUDED_PATHS","legacy_extra","ContextExplorer","opened","messageVisible","showEmpty","openState","prevPath","navigator","clipboard","writeText","openPath","closing","newPath","valueType","hasChildren","arrowStyles","arrow_right","has_children","keyStyles","keySummary","handleCopyPath","handlePathClick","key_summary","str_value","renderProperties","renderContextNode","contents","pruneEmpty","context_explorer","panel","empty_toggle","handleToggleHide","IMAGE_A","IMAGE_B","IMAGE_C","VIDEO_A","VIDEO_A_THUMB","Simulator","currentFlow","inputBox","drawerEle","urns","keypadEntry","drawerHeight","time","waitingForHint","drawerOpen","attachmentOptionsVisible","contextExplorerVisible","sprinting","bottomRef","inputBoxRef","session","activeFlow","lastExit","paths","runs","run","finalStep","step","pathCount","flow_uuid","simulatedMessages","messages","messageFound","fromUUID","toUUID","created_on","unshift","newState","update","scrollToBottom","updateEvents","runContext","wasJustActive","toISOString","newlyRecentMessages","newEvents","drawerType","videos","images","hasQuickReplies","updateActivity","handleFocusUpdate","trigger","environment","date_format","time_format","timezone","triggered_on","simulateStart","updateRunContext","resume","resumed_on","simulateResume","startFlow","delay","newVisible","onToggled","SIMULATOR","drawer_items","drawer_item","sendAttachment","map_thumb","audio_picker","audio_icon","audio_message","quick_reply","multiple","handleKeyPress","keypad","keypad_entry","getKeyRow","getLocationDrawer","getAudioDrawer","getImageDrawer","getVideoDrawer","getQuickRepliesDrawer","getKeypadDrawer","zIndex","paddingBottom","handleDrawerRef","drawer","drawer_visible","forced","getDrawerContents","showAttachmentDrawer","attachment_buttons","handleHideAttachments","getAttachmentButton","handleContextExplorerClose","handleHideAttachmentDrawer","String","simHidden","sim_hidden","tabHidden","tab_hidden","messagesStyle","sim_container","simulator","getContextExplorer","screen","onToggle","float","clear","show_attachments_button","getAttachmentOptions","getDrawer","show_context_button","reset","inactive","onReset","simulator_tab","simulator_tab_icon","simulator_tab_text","STICKY_TITLE","STICKY_BODY","COLOR_OPTIONS","yellow","blue","green","purple","gray","Sticky","debounceTextChanges","showConfirmation","DEFUALT_TITLE","DEFUALT_BODY","finalPos","onUpdateText","select","handleSelectForValue","color_chooser_container","color_chooser","handleChangeColor","color_option","titleClasses","title_wrapper","removal","containerClasses","sticky_container","stickyClasses","colorChooser","getColorChooser","handleClickRemove","handleChangeTitle","onFocusCapture","handleTitleFocused","body_wrapper","handleChangeBody","handleBodyFocused","importDefaults","jsPlumb","connectorOverlays","TARGET_DEFAULTS","anchor","shape","faces","cssClass","hoverClass","dropOptions","tolerance","isTarget","dragAllowedWhenFull","deleteEndpointsOnEmpty","SOURCE_DEFAULTS","maxConnections","isSource","getAnchor","sourceEle","targetEle","defaultConnector","stub","midpoint","alwaysRespectStubs","gap","cornerRadius","Plumber","pendingConnections","pendingConnectionTimeout","animateInterval","onLoadFunction","DragOptions","cursor","DropOptions","Endpoint","EndpointStyle","strokeStyle","PaintStyle","ConnectionsDetachable","Connector","ConnectionOverlays","setSourceEnabled","makeSource","makeTarget","connectExit","setDragSelection","clearDragSelection","removeFromDragSelection","cancelDurationRepaint","handlePendingConnections","checkForPendingConnections","repaint","recalculate","updateClass","rerouteAnchors","containerId","setContainer","enabled","onConnection","connection","addClass","removeClass","addToDragSelection","targets","batch","slot","totalSlots","anchors","delete","fireEvent","connector","plumbConnect","detachable","overlays","activityElement","getOverlays","getElement","recentsElement","classList","onConnected","onLoad","onEvent","recalculateOffsets","repaintEverything","unmakeSource","deleteConnectionsForElement","connections","getConnections","setAnchor","revalidate","closure","debounce","Debug","isDraggingBack","suspendedElementId","targetId","nodeContainerUUID","fe","beforeConnectionDrag","onConnectorDrop","onBeforeConnectorDrop","triggerLoaded","offsetLeft","offsetTop","dispatchEvent","Event","stickyMap","Node","handleNodeCreation","handleStickyCreation","ghostRef","nodeEditorSettings","empty_flow","querySelectorAll","getNodes","getStickies","getEmptyFlow","getSimulator","getNodeEditor","getDragNode","handleDragging","handleCanvasLoaded","TranslationState","LanguageSelector","handleLanguageSort","separator","language_link","handleLanguageChanged","PopTab","poppedEle","offsetWidth","onShow","onHide","pop_wrapper","tab_wrapper","handleTabClick","handlePoppedRef","handleClose","header_label","RevisionExplorer","onRevisionClicked","onRevertClicked","REVISION_HISTORY","handleUpdateRevisions","mask","handleTabClicked","explorer_wrapper","explorer","selectedClass","dateFormat","utc","user","getIssueKey","getRenderObjects","renderAction","IssuesTab","selectedIssue","issueDetails","buildIssueDetails","issueDetail","renderObjects","nodeDifference","ISSUES_TAB","onIssueClicked","onIssueOpened","issueCount","lastLanguage","languageHeader","handleIssueClicked","issues_code","issues_wrapper","middlewares","thunk","TranslationType","getMergedByType","bundle","COMPLETE","MISSING","findTranslations","localizable","attribute","getFriendlyAttribute","i18next","getBundleKey","TranslatorTab","selectedTranslation","translationBundles","optionsVisible","pctComplete","rules","handleUpdateTranslations","CATEGORY","CASE","translated","PROPERTY","counts","total","complete","round","bundles","TRANSLATOR_TAB","onTranslationFilterChanged","from_text","onTranslationClicked","onTranslationOpened","onChangeLanguage","showChangeButton","optionsClasses","options_visible","change_visible","filledClasses","filled","hundredpct","wrapperClasses","translations_wrapper","translate_block","handleTranslationClicked","needs_translation","type_name","renderMissing","toggleOptions","progress_bar","toggle","checkboxes","toggleCategories","toggleRules","pct_complete","changeLanguage","handleChangeLanguageClick","PageVisibility","default","hotStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","FlowEditor","forceSaveOnLoad","dataStr","downloadAnchorNode","setAttribute","downloadJSON","alert_modal","alert_body","showDownload","download_button","handleDownloadClicked","handleLanguageSetting","handleScrollToNode","handleVisibilityChanged","getFooter","getAlertModal","getSavingIndicator","handleScrollToTranslation","handleOpenTranslation","handleTabPopped","handleScrollToIssue","handleOpenIssue","ConnectedFlowEditor","FlowEditorContainer","Boolean","customElements","showFlowEditor","serviceWorker","registration","unregister"],"mappings":"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,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACH,KAAM,GACN,KAAM,GACN,KAAM,GACN,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACLC,EAAG,GACH,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACLC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACH,IAAK,GACL,KAAM,GACN,IAAK,GACL,IAAK,GACLC,EAAG,GACH1c,EAAG,GACHgJ,EAAG,GACH2T,EAAG,GACHC,EAAG,IACHxV,EAAG,IACHyV,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHlsB,EAAG,IACHmsB,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHzvB,EAAG,IACH8iB,EAAG,IACH4M,EAAG,IACH3sB,EAAG,IACH4sB,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACH,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,OAAK,IACL,OAAK,IACL,OAAK,IACL,OAAK,IACL,OAAK,IACL,OAAK,IACLC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC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","file":"static/js/main.4cbb1c0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ele\":\"SendEmailForm_ele__1PGrg\",\"subject\":\"SendEmailForm_subject__sf_DY\",\"message\":\"SendEmailForm_message__BlZ0U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetRunResultForm_form__JWMvQ\",\"name\":\"SetRunResultForm_name__3HY_c\",\"value\":\"SetRunResultForm_value__2lzfp\",\"category\":\"SetRunResultForm_category__3vpcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node\":\"StartSession_node__1U2Ga\",\"to\":\"StartSession_to__1tudJ\",\"name\":\"StartSession_name__3jSTs\",\"icon\":\"StartSession_icon__34RoK\",\"more\":\"StartSession_more__3sTcz\",\"message\":\"StartSession_message__1MVY4\",\"flow\":\"StartSession_flow__2eiJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"counter\":\"Counter_counter___6ogz\",\"visible\":\"Counter_visible__2Z483\",\"clickable\":\"Counter_clickable__23WoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MountScroll_wrapper__1szW4\",\"pulse\":\"MountScroll_pulse__-hpUP\",\"pulse_animation\":\"MountScroll_pulse_animation__1Sqfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"small\":\"TembaSelect_small__7qbi8\",\"normal\":\"TembaSelect_normal__1nAal\",\"error\":\"TembaSelect_error__2zSXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unicode_char\":\"UnicodeList_unicode_char__2S8vz\",\"unicode_list\":\"UnicodeList_unicode_list__1A9RI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheme_selection\":\"AddURNForm_scheme_selection__qUAEY\",\"path\":\"AddURNForm_path__3-Al6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"chosen\":\"MultiChoice_chosen__1GElL\",\"item\":\"MultiChoice_item__4fde7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"text\":\"SayMsg_text__jqZPd\",\"recording\":\"SayMsg_recording__1H1Zo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"code\":\"TransferAirtime_code__3isQH\",\"amount\":\"TransferAirtime_amount__37Sd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optional_text_input\":\"OptionalTextInput_optional_text_input__333nH\",\"toggle_link\":\"OptionalTextInput_toggle_link__2AH9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"errors\":\"ValidationFailures_errors__3e6PN\",\"error\":\"ValidationFailures_error__THHrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"FieldRouterForm_lead_in__6Qab5\",\"field_select\":\"FieldRouterForm_field_select__1n51y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"subject\":\"TicketRouterForm_subject__2qFgP\",\"body\":\"TicketRouterForm_body__3pwn2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"draggable\":\"CanvasDraggable_draggable__dwK-H\",\"selected\":\"CanvasDraggable_selected__1v1Bc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"sim_container\":\"Simulator_sim_container__a_14c\",\"simulator\":\"Simulator_simulator__dbf5t\",\"sim_hidden\":\"Simulator_sim_hidden__2YZjQ\",\"screen\":\"Simulator_screen__tIxW5\",\"header\":\"Simulator_header__15rS-\",\"close\":\"Simulator_close__19saF\",\"time\":\"Simulator_time__2IQxP\",\"battery\":\"Simulator_battery__1OI0j\",\"wifi\":\"Simulator_wifi__xaL4H\",\"footer\":\"Simulator_footer__18btX\",\"show_context_button\":\"Simulator_show_context_button__2K96p\",\"reset\":\"Simulator_reset__2-5cb\",\"inactive\":\"Simulator_inactive__1lnEx\",\"active\":\"Simulator_active__3sZ-7\",\"messages\":\"Simulator_messages__rfIHi\",\"controls\":\"Simulator_controls__1pfYI\",\"show_attachments_button\":\"Simulator_show_attachments_button__WK-HV\",\"attachment_buttons\":\"Simulator_attachment_buttons__3WBZu\",\"visible\":\"Simulator_visible__32ik5\",\"drawer\":\"Simulator_drawer__2-Gsx\",\"drawer_visible\":\"Simulator_drawer_visible__Y1UdJ\",\"forced\":\"Simulator_forced__2p2lH\",\"drawer_header\":\"Simulator_drawer_header__210Ys\",\"map_thumb\":\"Simulator_map_thumb__W52pm\",\"audio_picker\":\"Simulator_audio_picker__18DLS\",\"audio_icon\":\"Simulator_audio_icon__lpA_J\",\"audio_message\":\"Simulator_audio_message__h0itM\",\"keypad\":\"Simulator_keypad__zvnil\",\"keypad_entry\":\"Simulator_keypad_entry__1uSiM\",\"keys\":\"Simulator_keys__1IWL6\",\"row\":\"Simulator_row__1EZ0S\",\"key\":\"Simulator_key__r4GTh\",\"drawer_items\":\"Simulator_drawer_items__30iuH\",\"drawer_item\":\"Simulator_drawer_item__3M_eo\",\"simulator_tab\":\"Simulator_simulator_tab__1EIPp\",\"tab_hidden\":\"Simulator_tab_hidden__16Q_9\",\"simulator_tab_icon\":\"Simulator_simulator_tab_icon__3kxzt\",\"simulator_tab_text\":\"Simulator_simulator_tab_text__1sFYS\",\"detail_webhook_called\":\"Simulator_detail_webhook_called__2KVpg\",\"quick_replies\":\"Simulator_quick_replies__1iGdl\",\"quick_reply\":\"Simulator_quick_reply__2oHpD\"};","module.exports = __webpack_public_path__ + \"static/media/map.5e547148.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"type_list\":\"TypeList_type_list__2NKsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"RemoveGroupsForm_checkbox__39FRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"UpdateContactForm_value__3dp2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"AirtimeRouterForm_result_name__rN8iu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"DigitsRouterForm_lead_in__2TrLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"ResthookRouterForm_result_name__17X_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"result_name\":\"WaitRouterForm_result_name__1FgTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"ClassifyRouterForm_link__3xlM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"loading\":\"Loading_loading__1NAET\",\"pulse\":\"Loading_pulse__31oEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"empty_flow\":\"Flow_empty_flow__g72R5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"proper\":\"global_proper__1t6Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"TranslatorTab_hidden__gXxnB\",\"message\":\"TranslatorTab_message__2bB8t\",\"header\":\"TranslatorTab_header__16huo\",\"translations_wrapper\":\"TranslatorTab_translations_wrapper__2a84r\",\"complete\":\"TranslatorTab_complete__2vrvp\",\"language\":\"TranslatorTab_language__2KMhv\",\"options\":\"TranslatorTab_options__2_hpO\",\"options_visible\":\"TranslatorTab_options_visible__1OunI\",\"filters\":\"TranslatorTab_filters__1d7u9\",\"pct_complete\":\"TranslatorTab_pct_complete__TuDGg\",\"toggle\":\"TranslatorTab_toggle__gtc3P\",\"change_visible\":\"TranslatorTab_change_visible__3EVgs\",\"changeLanguage\":\"TranslatorTab_changeLanguage__3Z1CG\",\"progress_bar\":\"TranslatorTab_progress_bar__1lvIK\",\"filled\":\"TranslatorTab_filled__31lFy\",\"hundredpct\":\"TranslatorTab_hundredpct__36Cgm\",\"checkboxes\":\"TranslatorTab_checkboxes__2mr6_\",\"translate_block\":\"TranslatorTab_translate_block__3qqQP\",\"item\":\"TranslatorTab_item__3yScd\",\"text\":\"TranslatorTab_text__Syb6c\",\"from_text\":\"TranslatorTab_from_text__2mLGr\",\"to_text\":\"TranslatorTab_to_text__1vjpa\",\"needs_translation\":\"TranslatorTab_needs_translation__3b9DT\",\"type_name\":\"TranslatorTab_type_name__1-V0N\",\"attribute\":\"TranslatorTab_attribute__2amDS\",\"translated\":\"TranslatorTab_translated__1qQNd\",\"check\":\"TranslatorTab_check__2YYiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"evt\":\"LogEvent_evt__1OWXF\",\"fadein\":\"LogEvent_fadein__12uUk\",\"msg_text\":\"LogEvent_msg_text__1vpou\",\"ivr_msg\":\"LogEvent_ivr_msg__3IQNC\",\"send_msg\":\"LogEvent_send_msg__3nGrz\",\"msg_received\":\"LogEvent_msg_received__1euw8\",\"image_attachment\":\"LogEvent_image_attachment__2cGY2\",\"error\":\"LogEvent_error__34EAe\",\"info\":\"LogEvent_info__15czN\",\"email\":\"LogEvent_email__KzJ_n\",\"webhook\":\"LogEvent_webhook__3BNA8\",\"video_attachment\":\"LogEvent_video_attachment__145Dw\",\"audio_attachment\":\"LogEvent_audio_attachment__3OYIA\",\"media_player\":\"LogEvent_media_player__96RoV\",\"audio_text\":\"LogEvent_audio_text__UrMFb\",\"email_details\":\"LogEvent_email_details__2CVbJ\",\"to\":\"LogEvent_to__UGEly\",\"subject\":\"LogEvent_subject__3R5YA\",\"body\":\"LogEvent_body__3cp1g\",\"webhook_details\":\"LogEvent_webhook_details__1skhu\",\"response\":\"LogEvent_response__3rFwp\",\"event_viewer\":\"LogEvent_event_viewer__3lAsr\",\"has_detail\":\"LogEvent_has_detail__2XL8j\",\"classification\":\"LogEvent_classification__1MFyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"clickable\":\"Dialog_clickable__1LNeo\",\"dialog\":\"Dialog_dialog__1tJE_\",\"header\":\"Dialog_header__3JPAH\",\"header_overlay\":\"Dialog_header_overlay__3q5z0\",\"header_icon\":\"Dialog_header_icon__19jaR\",\"title\":\"Dialog_title__3rrJh\",\"barber\":\"Dialog_barber__2VtGk\",\"iconed\":\"Dialog_iconed__2E824\",\"title_container\":\"Dialog_title_container__2JWgY\",\"content\":\"Dialog_content__r1RvJ\",\"footer\":\"Dialog_footer__2JTYO\",\"gutter\":\"Dialog_gutter__2g8bA\",\"buttons\":\"Dialog_buttons__1-x71\",\"left_buttons\":\"Dialog_left_buttons__2Luew\",\"right_buttons\":\"Dialog_right_buttons__1iBvr\",\"tabs\":\"Dialog_tabs__31N2s\",\"tab\":\"Dialog_tab__2Te9G\",\"tab_icon\":\"Dialog_tab_icon__1o0ZW\",\"active\":\"Dialog_active__1ACOu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"option_list\":\"TextInputElement_option_list__4m7Vr\",\"option_summary\":\"TextInputElement_option_summary__6IrXW\",\"option_signature\":\"TextInputElement_option_signature__2ZbTr\",\"option\":\"TextInputElement_option__2shus\",\"selected\":\"TextInputElement_selected__CHrTB\",\"first_option\":\"TextInputElement_first_option__3hPi4\",\"fn_marker\":\"TextInputElement_fn_marker__bivAY\",\"function_help\":\"TextInputElement_function_help__2q_M1\",\"completion_container\":\"TextInputElement_completion_container__1VEX7\",\"options_wrapper\":\"TextInputElement_options_wrapper__xGM8S\",\"fn_container\":\"TextInputElement_fn_container__2cA-H\",\"option_name\":\"TextInputElement_option_name__37HFw\",\"option_examples\":\"TextInputElement_option_examples__2PZmz\",\"example_header\":\"TextInputElement_example_header__2t8_c\",\"example\":\"TextInputElement_example__UDA3i\",\"fn_signature\":\"TextInputElement_fn_signature__2p8z3\",\"wrapper\":\"TextInputElement_wrapper__d3Rra\",\"help\":\"TextInputElement_help__1GiSv\",\"hidden\":\"TextInputElement_hidden__1jQkV\",\"textinput\":\"TextInputElement_textinput__28D4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"exit\":\"Exit_exit__25o8F\",\"translating\":\"Exit_translating__IWP5x\",\"unnamed_exit\":\"Exit_unnamed_exit__3MCUk\",\"endpoint\":\"Exit_endpoint__361pL\",\"missing_localization\":\"Exit_missing_localization__3JyDz\",\"name\":\"Exit_name__1UFE2\",\"confirm_delete\":\"Exit_confirm_delete__22Da2\",\"activity\":\"Exit_activity__1IA0S\",\"count\":\"Exit_count__M-y9h\",\"confirm_x\":\"Exit_confirm_x__2YqZk\",\"recent_messages\":\"Exit_recent_messages__13pCi\",\"no_recents\":\"Exit_no_recents__HurD3\",\"title\":\"Exit_title__2ytWW\",\"loading\":\"Exit_loading__1vo_F\",\"message\":\"Exit_message__3Zg60\",\"text\":\"Exit_text__1e8l7\",\"sent\":\"Exit_sent__3FhQ7\"};","import { Methods } from 'components/flow/routers/webhook/helpers';\r\nimport { FlowTypes, Operators, Types, ContactStatus } from 'config/interfaces';\r\n\r\n// we don't concern ourselves with patch versions\r\nexport const SPEC_VERSION = '13.1';\r\n\r\nexport interface Languages {\r\n  [iso: string]: string;\r\n}\r\n\r\nexport interface Language {\r\n  name: string;\r\n  iso: string;\r\n}\r\n\r\nexport interface Environment {\r\n  date_format: string;\r\n  time_format: string;\r\n  timezone: string;\r\n  languages: string[];\r\n}\r\n\r\nexport interface Endpoints {\r\n  attachments: string;\r\n  resthooks: string;\r\n  recents: string;\r\n  fields: string;\r\n  globals: string;\r\n  groups: string;\r\n  recipients: string;\r\n  flows: string;\r\n  revisions: string;\r\n  activity: string;\r\n  labels: string;\r\n  channels: string;\r\n  classifiers: string;\r\n  ticketers: string;\r\n  environment: string;\r\n  languages: string;\r\n  templates: string;\r\n  completion: string;\r\n  functions: string;\r\n  simulateStart: string;\r\n  simulateResume: string;\r\n  editor: string;\r\n}\r\n\r\nexport interface FlowEditorConfig {\r\n  localStorage: boolean;\r\n  endpoints: Endpoints;\r\n  flow: string;\r\n  flowType: FlowTypes;\r\n  showTemplates?: boolean;\r\n  showDownload?: boolean;\r\n  mutable?: boolean;\r\n  debug?: boolean;\r\n  path?: string;\r\n  headers?: any;\r\n  onLoad?: () => void;\r\n  onActivityClicked?: (uuid: string) => void;\r\n  onChangeLanguage?: (code: string, name: string) => void;\r\n\r\n  // help links\r\n  help: { [key: string]: string };\r\n\r\n  // whether to force a save on load\r\n  forceSaveOnLoad?: boolean;\r\n\r\n  filters?: string[];\r\n}\r\n\r\nexport interface LocalizationMap {\r\n  [lang: string]: {\r\n    [uuid: string]: any;\r\n  };\r\n}\r\n\r\nexport interface Result {\r\n  key: string;\r\n  name: string;\r\n  categories: string[];\r\n  node_uuids: string[];\r\n}\r\n\r\nexport enum DependencyType {\r\n  channel = 'channel',\r\n  classifier = 'classifier',\r\n  contact = 'contact',\r\n  field = 'field',\r\n  flow = 'flow',\r\n  group = 'group',\r\n  label = 'label',\r\n  template = 'template'\r\n}\r\n\r\nexport interface Dependency {\r\n  uuid?: string;\r\n  key?: string;\r\n  name: string;\r\n  type: DependencyType;\r\n  missing?: boolean;\r\n  nodes: { [uuid: string]: string[] };\r\n}\r\n\r\nexport interface FlowMetadata {\r\n  dependencies: Dependency[];\r\n  waiting_exit_uuids: string[];\r\n  results: Result[];\r\n  parent_refs: string[];\r\n  issues: FlowIssue[];\r\n}\r\n\r\nexport enum FlowIssueType {\r\n  MISSING_DEPENDENCY = 'missing_dependency',\r\n  LEGACY_EXTRA = 'legacy_extra',\r\n  INVALID_REGEX = 'invalid_regex'\r\n}\r\n\r\nexport interface FlowIssue {\r\n  type: FlowIssueType;\r\n  node_uuid: string;\r\n  action_uuid: string;\r\n  description: string;\r\n  dependency?: Dependency;\r\n  language?: string;\r\n  regex?: string;\r\n}\r\n\r\nexport interface FlowDetails {\r\n  definition: FlowDefinition;\r\n  metadata: FlowMetadata;\r\n}\r\n\r\nexport interface FlowDefinition {\r\n  localization: LocalizationMap;\r\n  language: string;\r\n  name: string;\r\n  nodes: FlowNode[];\r\n  uuid: string;\r\n  revision: number;\r\n  spec_version: string;\r\n  _ui: UIMetaData;\r\n}\r\n\r\nexport interface FlowNode {\r\n  uuid: string;\r\n  actions: Action[];\r\n  exits: Exit[];\r\n  router?: Router;\r\n}\r\n\r\nexport interface Exit {\r\n  uuid: string;\r\n  destination_uuid?: string;\r\n}\r\n\r\nexport enum RouterTypes {\r\n  switch = 'switch',\r\n  random = 'random'\r\n}\r\n\r\nexport interface Router {\r\n  type: RouterTypes;\r\n  result_name?: string;\r\n  categories: Category[];\r\n  wait?: Wait;\r\n}\r\n\r\nexport interface Channel {\r\n  uuid: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Case {\r\n  uuid: string;\r\n  type: Operators;\r\n  category_uuid: string;\r\n  arguments?: string[];\r\n  omit_operand?: boolean;\r\n}\r\n\r\nexport interface Category {\r\n  uuid: string;\r\n  name: string;\r\n  exit_uuid: string;\r\n}\r\n\r\nexport interface TemplateTranslation {\r\n  language: string;\r\n  status: string;\r\n  content: string;\r\n}\r\n\r\nexport interface Template {\r\n  created_on: Date;\r\n  modified_on: Date;\r\n  translations: TemplateTranslation[];\r\n}\r\n\r\nexport interface SwitchRouter extends Router {\r\n  cases: Case[];\r\n  operand: string;\r\n  default_category_uuid: string;\r\n}\r\n\r\nexport enum WaitTypes {\r\n  msg = 'msg'\r\n}\r\n\r\nexport enum HintTypes {\r\n  digits = 'digits',\r\n  audio = 'audio',\r\n  image = 'image',\r\n  video = 'video',\r\n  location = 'location'\r\n}\r\n\r\nexport interface Hint {\r\n  type: HintTypes;\r\n  count?: number;\r\n}\r\n\r\nexport interface Timeout {\r\n  category_uuid: string;\r\n  seconds: number;\r\n}\r\n\r\nexport interface Wait {\r\n  type: WaitTypes;\r\n  timeout?: Timeout;\r\n  hint?: Hint;\r\n}\r\n\r\nexport interface Group {\r\n  uuid: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Contact {\r\n  uuid: string;\r\n  name: string;\r\n}\r\n\r\nexport interface ChangeGroups extends Action {\r\n  groups: Group[];\r\n}\r\n\r\nexport interface RemoveFromGroups extends ChangeGroups {\r\n  all_groups: boolean;\r\n}\r\n\r\nexport interface Field {\r\n  key: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Label {\r\n  uuid: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Flow {\r\n  uuid: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Action {\r\n  type: Types;\r\n  uuid: string;\r\n}\r\n\r\nexport interface SetContactField extends Action {\r\n  field: Field;\r\n  value: string;\r\n}\r\n\r\nexport interface SetContactName extends Action {\r\n  type: Types.set_contact_name;\r\n  name: string;\r\n}\r\n\r\nexport interface SetContactLanguage extends Action {\r\n  type: Types.set_contact_language;\r\n  language: string;\r\n}\r\n\r\nexport interface SetContactChannel extends Action {\r\n  type: Types.set_contact_channel;\r\n  channel: Channel;\r\n}\r\n\r\nexport interface SetContactStatus extends Action {\r\n  type: Types.set_contact_status;\r\n  status: ContactStatus;\r\n}\r\n\r\nexport type SetContactProperty =\r\n  | SetContactName\r\n  | SetContactLanguage\r\n  | SetContactChannel\r\n  | SetContactStatus;\r\n\r\nexport type SetContactAttribute = SetContactField | SetContactProperty;\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface Missing extends Action {}\r\n\r\nexport interface RecipientsAction extends Action {\r\n  contacts: Contact[];\r\n  groups: Group[];\r\n  legacy_vars?: string[];\r\n}\r\n\r\nexport interface TemplateTranslation {\r\n  channel: Channel;\r\n  content: string;\r\n  language: string;\r\n  status: string;\r\n  variable_count: number;\r\n}\r\n\r\nexport interface TemplateOptions {\r\n  translations: TemplateTranslation[];\r\n}\r\n\r\nexport interface MsgTemplate {\r\n  name: string;\r\n  uuid: string;\r\n}\r\n\r\nexport interface MsgTemplating {\r\n  uuid: string;\r\n  template: MsgTemplate;\r\n  variables: string[];\r\n}\r\n\r\nexport interface SendMsg extends Action {\r\n  text: string;\r\n  all_urns?: boolean;\r\n  quick_replies?: string[];\r\n  attachments?: string[];\r\n  topic?: string;\r\n  templating?: MsgTemplating;\r\n}\r\n\r\nexport interface SayMsg extends Action {\r\n  text: string;\r\n  audio_url?: string;\r\n}\r\n\r\nexport interface PlayAudio extends Action {\r\n  audio_url: string;\r\n}\r\n\r\nexport interface BroadcastMsg extends RecipientsAction {\r\n  text: string;\r\n}\r\n\r\nexport interface AddLabels extends Action {\r\n  labels: Label[];\r\n}\r\n\r\nexport interface AddURN extends Action {\r\n  scheme: string;\r\n  path: string;\r\n}\r\n\r\nexport interface SetPreferredChannel extends Action {\r\n  language: string;\r\n}\r\n\r\nexport interface SendEmail extends Action {\r\n  subject: string;\r\n  body: string;\r\n  addresses: string[];\r\n}\r\n\r\nexport interface SetRunResult extends Action {\r\n  name: string;\r\n  value: string;\r\n  category?: string;\r\n}\r\n\r\nexport interface Headers {\r\n  [name: string]: string;\r\n}\r\n\r\nexport interface Classifier {\r\n  uuid: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Ticketer {\r\n  uuid: string;\r\n  name: string;\r\n}\r\n\r\nexport interface TransferAirtime extends Action {\r\n  amounts: { [name: string]: number };\r\n  result_name: string;\r\n}\r\n\r\nexport interface CallClassifier extends Action {\r\n  classifier: Classifier;\r\n  input: string;\r\n  result_name: string;\r\n}\r\n\r\nexport interface CallResthook extends Action {\r\n  resthook: string;\r\n  result_name: string;\r\n}\r\n\r\nexport interface CallWebhook extends Action {\r\n  url: string;\r\n  method: Methods;\r\n  result_name: string;\r\n  body?: string;\r\n  headers?: Headers;\r\n}\r\n\r\nexport interface OpenTicket extends Action {\r\n  ticketer: Ticketer;\r\n  subject: string;\r\n  body: string;\r\n  result_name: string;\r\n}\r\n\r\nexport interface StartFlow extends Action {\r\n  flow: Flow;\r\n}\r\n\r\nexport interface StartSession extends RecipientsAction {\r\n  flow: Flow;\r\n  create_contact?: boolean;\r\n  contact_query?: string;\r\n}\r\n\r\nexport interface UIMetaData {\r\n  nodes: { [key: string]: UINode };\r\n  languages: { [iso: string]: string }[];\r\n  translation_filters?: { categories: boolean; rules: boolean };\r\n}\r\n\r\nexport interface FlowPosition {\r\n  left: number;\r\n  top: number;\r\n  right?: number;\r\n  bottom?: number;\r\n}\r\n\r\nexport interface Dimensions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface UIConfig {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface UINode {\r\n  position: FlowPosition;\r\n  // ui type, used for split by expression, contact field, etc\r\n  type?: Types;\r\n  config?: UIConfig;\r\n}\r\n\r\nexport interface StickyNote {\r\n  position: FlowPosition;\r\n  title: string;\r\n  body: string;\r\n  color?: string;\r\n}\r\n\r\nexport interface UIMetaData {\r\n  nodes: { [key: string]: UINode };\r\n  stickies: { [key: string]: StickyNote };\r\n}\r\n\r\nexport type AnyAction =\r\n  | Action\r\n  | ChangeGroups\r\n  | SetContactField\r\n  | SetContactName\r\n  | SetRunResult\r\n  | SendMsg\r\n  | SetPreferredChannel\r\n  | SendEmail\r\n  | CallClassifier\r\n  | CallWebhook\r\n  | StartFlow\r\n  | StartSession;\r\n\r\nexport enum ContactProperties {\r\n  UUID = 'uuid',\r\n  'Created By' = 'created_by',\r\n  'Modified By' = 'modified_by',\r\n  Org = 'org',\r\n  Name = 'name',\r\n  Language = 'language',\r\n  Status = 'status',\r\n  Timezone = 'timezone',\r\n  Channel = 'channel',\r\n  Email = 'email',\r\n  Mailto = 'mailto',\r\n  Phone = 'phone',\r\n  Groups = 'groups'\r\n}\r\n\r\nexport enum ValueType {\r\n  text = 'text',\r\n  numeric = 'numeric',\r\n  datetime = 'datetime',\r\n  state = 'state',\r\n  district = 'district',\r\n  ward = 'ward'\r\n}\r\n\r\nexport interface CreateOptions {\r\n  promptTextCreator?: any;\r\n  newOptionCreator?: any;\r\n  isValidNewOption?: any;\r\n  isOptionUnique?: any;\r\n  createNewOption?: any;\r\n  createPrompt?: string;\r\n}\r\n\r\nexport enum StartFlowArgs {\r\n  Complete = 'C',\r\n  Expired = 'E'\r\n}\r\n\r\nexport enum StartFlowExitNames {\r\n  Complete = 'Complete',\r\n  Expired = 'Expired'\r\n}\r\n\r\nexport enum WebhookExitNames {\r\n  Success = 'Success',\r\n  Failure = 'Failure'\r\n}\r\n\r\nexport enum TransferAirtimeExitNames {\r\n  Success = 'Success',\r\n  Failure = 'Failed'\r\n}\r\n","import { Action, Case, Category, Language, MsgTemplating } from 'flowTypes';\r\nimport { Asset } from 'store/flowContext';\r\n\r\nexport class LocalizedObject {\r\n  public localizedKeys: { [key: string]: boolean } = {};\r\n\r\n  private localizedObject: Action | Category | Case | any;\r\n  private localized: boolean = false;\r\n  private iso: string;\r\n  private name: string;\r\n  private language: Language;\r\n\r\n  constructor(object: Action | Category | Case | MsgTemplating, { id, name }: Asset) {\r\n    this.localizedObject = object;\r\n    this.iso = id;\r\n    this.language = { iso: this.iso, name };\r\n  }\r\n\r\n  public getLanguage(): Language {\r\n    if (!this.language) {\r\n      if (this.iso) {\r\n        this.language = { iso: this.iso, name: this.name };\r\n      }\r\n    }\r\n\r\n    return this.language;\r\n  }\r\n\r\n  public hasTranslation(key: string): boolean {\r\n    return key in this.localizedKeys;\r\n  }\r\n\r\n  // We use explicit any here to make this generic across all actions,\r\n  // note this means we'll attempt to set any property in our localization\r\n  // dictionary regardless of the object type\r\n  public addTranslation(key: string, value: any): void {\r\n    // localization shouldn't side-affect the original object\r\n    if (!this.localized) {\r\n      this.localizedObject = Object.assign({}, this.localizedObject);\r\n      this.localized = true;\r\n    }\r\n\r\n    if (Array.isArray(this.localizedObject[key])) {\r\n      this.localizedObject[key] = value;\r\n    } else {\r\n      if (value.length === 1) {\r\n        this.localizedObject[key] = value[0];\r\n      }\r\n    }\r\n\r\n    this.localizedKeys[key] = true;\r\n  }\r\n\r\n  public isLocalized(): boolean {\r\n    return this.localized;\r\n  }\r\n\r\n  public getObject(): Action | Case | Category | MsgTemplating {\r\n    return this.localizedObject;\r\n  }\r\n}\r\n\r\nexport default class Localization {\r\n  public static translate(\r\n    object: Action | Category | Case | MsgTemplating,\r\n    language: Asset,\r\n    translations?: { [uuid: string]: any }\r\n  ): LocalizedObject {\r\n    const localized: LocalizedObject = new LocalizedObject(object, language);\r\n\r\n    if (translations) {\r\n      if (object.uuid in translations) {\r\n        const values = translations[object.uuid];\r\n        // We don't want to side affect our action\r\n        Object.keys(values).forEach(key => {\r\n          return localized.addTranslation(key, values[key]);\r\n        });\r\n      }\r\n    }\r\n\r\n    return localized;\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\nimport { renderIf } from 'utils';\r\n\r\nimport styles from './Button.module.scss';\r\n\r\nexport enum ButtonTypes {\r\n  primary = 'primary',\r\n  secondary = 'secondary',\r\n  tertiary = 'tertiary'\r\n}\r\nexport interface ButtonProps {\r\n  name: string;\r\n  onClick: any;\r\n  disabled?: boolean;\r\n  type?: ButtonTypes;\r\n  leftSpacing?: boolean;\r\n  topSpacing?: boolean;\r\n  iconName?: string;\r\n  onRef?: (ele: any) => void;\r\n}\r\n\r\ninterface ButtonState {\r\n  active: boolean;\r\n}\r\n\r\nexport default class Button extends React.Component<ButtonProps, ButtonState> {\r\n  constructor(props: ButtonProps) {\r\n    super(props);\r\n    this.state = {\r\n      active: false\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\r\n    this.setState({ active: true });\r\n  }\r\n\r\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\r\n    this.setState({ active: false });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { onRef, name, onClick, type, disabled, leftSpacing, topSpacing, iconName } = this.props;\r\n\r\n    return (\r\n      <div\r\n        ref={onRef}\r\n        style={{\r\n          marginLeft: leftSpacing ? 10 : 0,\r\n          marginTop: topSpacing ? 10 : 0\r\n        }}\r\n        onClick={onClick}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.handleMouseUp}\r\n        className={`${styles.btn} ${styles[type!]} ${disabled ? styles.disabled : ''} ${\r\n          this.state.active ? styles.active : ''\r\n        }`}\r\n      >\r\n        {renderIf(iconName != null)(<span style={{ paddingRight: 4 }} className={iconName} />)}\r\n        {name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Action,\r\n  Case,\r\n  Category,\r\n  ContactProperties,\r\n  FlowPosition,\r\n  LocalizationMap\r\n} from 'flowTypes';\r\nimport { Query } from 'immutability-helper';\r\nimport * as React from 'react';\r\nimport Localization, { LocalizedObject } from 'services/Localization';\r\nimport { Asset, Assets } from 'store/flowContext';\r\nimport { FormEntry } from 'store/nodeEditor';\r\nimport { v4 as generateUUID } from 'uuid';\r\nimport variables from 'variables.module.scss';\r\n\r\nexport const V4_UUID = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\r\nconst LABEL_CHARS = /^[a-zA-Z0-9-][a-zA-Z0-9- ]*$/;\r\nconst MAX_LABEL_LENGTH = 36;\r\nconst SNAKED_CHARS = /\\s|-+(?=\\S)/g;\r\n\r\nexport const MAX_REFLOW_ATTEMPTS = 100;\r\nexport const ACTIVITY_INTERVAL = 5000;\r\nexport const COLLISION_FUDGE = 5;\r\nexport const GRID_SIZE: number = parseInt(variables.grid_size, 10) || 20;\r\nexport const NODE_SPACING: number = parseInt(variables.node_spacing, 10) || 10;\r\nexport const NODE_PADDING: number = parseInt(variables.node_padding, 10) || 10;\r\nexport const QUIET_NOTE = 2000;\r\nexport const CONFIRMATION_TIME = 2000;\r\n\r\nexport interface BoolMap {\r\n  [key: string]: boolean;\r\n}\r\n\r\ninterface Bounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n}\r\n\r\nexport type LabelIdCb = (label?: string, labelKey?: string, valueKey?: string) => string;\r\n\r\n/**\r\n * Adjusts the left and top offsets to a grid\r\n * @param left horizontal offset\r\n * @param top vertical offset\r\n */\r\nexport const snapToGrid = (left: number, top: number): { left: number; top: number } => {\r\n  let leftAdjust = left % GRID_SIZE;\r\n  let topAdjust = top % GRID_SIZE;\r\n\r\n  if (leftAdjust > GRID_SIZE / 3) {\r\n    leftAdjust = GRID_SIZE - leftAdjust;\r\n  } else {\r\n    leftAdjust = leftAdjust * -1;\r\n  }\r\n\r\n  if (topAdjust > GRID_SIZE / 3) {\r\n    topAdjust = GRID_SIZE - topAdjust;\r\n  } else {\r\n    topAdjust = topAdjust * -1;\r\n  }\r\n\r\n  return {\r\n    left: Math.max(left + leftAdjust, 0),\r\n    top: Math.max(top + topAdjust, 0)\r\n  };\r\n};\r\n\r\n/**\r\n * Adjusts the position offsets to a grid\r\n */\r\nexport const snapPositionToGrid = (position: FlowPosition): FlowPosition => {\r\n  let leftAdjust = position.left % GRID_SIZE;\r\n  let topAdjust = position.top % GRID_SIZE;\r\n\r\n  if (leftAdjust > GRID_SIZE / 3) {\r\n    leftAdjust = GRID_SIZE - leftAdjust;\r\n  } else {\r\n    leftAdjust = leftAdjust * -1;\r\n  }\r\n\r\n  if (topAdjust > GRID_SIZE / 3) {\r\n    topAdjust = GRID_SIZE - topAdjust;\r\n  } else {\r\n    topAdjust = topAdjust * -1;\r\n  }\r\n\r\n  const left = Math.max(position.left + leftAdjust, 0);\r\n  const top = Math.max(position.top + topAdjust, 0);\r\n  const right = left + position.right - position.left;\r\n  const bottom = top + position.bottom - position.top;\r\n\r\n  return {\r\n    left,\r\n    top,\r\n    right,\r\n    bottom\r\n  };\r\n};\r\n\r\n/**\r\n * Turns a string array into a bool map for constant lookup\r\n * @param {string[]} array - an array of strings, e.g. contact fields\r\n * @returns {object} A map of each string\r\n */\r\nexport const toBoolMap = (array: string[]): BoolMap =>\r\n  array.reduce(\r\n    (map: BoolMap, item: string) => ({\r\n      ...map,\r\n      [item]: true\r\n    }),\r\n    {}\r\n  );\r\n\r\n/**\r\n * Inserts commas into numbers where appropriate for better readability\r\n * @param {number} value - A number, e.g. 10000\r\n * @returns {string} A comma-separated string, e.g. 10,000\r\n */\r\nexport const addCommas = (value: number): string =>\r\n  value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n/**\r\n * Replaces spaces with underscores\r\n * @param {string} value - A space-separated string to be snaked, e.g. a raw flow field name ('my flow field')\r\n * @returns {string} A snaked string, e.g. 'my_flow_field'\r\n */\r\nexport const snakify = (value: string): string =>\r\n  value\r\n    .toLowerCase()\r\n    .trim()\r\n    .replace(SNAKED_CHARS, '_');\r\n/**\r\n * Returns true if a given UUID matches v4 format\r\n * @param {string} uuid - A version 4 UUID (no braces, uppercase OK)\r\n * @returns {boolean}\r\n */\r\nexport const validUUID = (uuid: string): boolean => V4_UUID.test(uuid);\r\n\r\n/**\r\n * Returns a given string in title case, e.g. 'full name' becomes 'Full Name'\r\n * @param {string} str - string to be title-cased\r\n * @returns {string} Title-cased string\r\n */\r\nexport const titleCase = (str: string): string =>\r\n  str.replace(/\\b\\w+/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\r\n\r\nexport const getSelectClassForEntry = (entry: FormEntry): string => {\r\n  if (entry && entry.validationFailures && entry.validationFailures.length > 0) {\r\n    return 'select-invalid';\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const getSelectClass = (errors: number): string => {\r\n  if (errors === 0) {\r\n    return 'react-select select-base';\r\n  }\r\n  // We use a global selector here for react-select\r\n  return 'react-select select-base select-invalid';\r\n};\r\n\r\nexport const reorderList = (list: any[], startIndex: number, endIndex: number): any[] => {\r\n  const [removed] = list.splice(startIndex, 1);\r\n\r\n  list.splice(endIndex, 0, removed);\r\n\r\n  return list;\r\n};\r\n\r\n/**\r\n * Compares basic objects (no methods and DOM nodes; property order important)\r\n * @param {object} objA - basic object\r\n * @param {object} objB - basic object\r\n * @returns {boolean}\r\n */\r\nexport const jsonEqual = (objA: {}, objB: {}): boolean =>\r\n  JSON.stringify(objA) === JSON.stringify(objB);\r\n\r\n/**\r\n * Checks whether any of a list of error strings contain one or more queries.\r\n * Used to determine whether a particular error has been encountered.\r\n */\r\nexport const hasErrorType = (errors: string[], exps: RegExp[]): boolean => {\r\n  if (!errors.length) {\r\n    return false;\r\n  }\r\n  for (const error of errors) {\r\n    for (const exp of exps) {\r\n      if (error.match(exp)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getLocalizedObject = (localizations: LocalizedObject[]) => {\r\n  if (localizations && localizations.length) {\r\n    return localizations[0];\r\n  }\r\n};\r\n\r\nexport interface ClickHandler {\r\n  // onClick: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  onMouseDown: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  onMouseUp: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n}\r\n\r\n/**\r\n * Creates a simple click handler via onMouseDown and onMouseUp.\r\n * This is a necessity in order to let jsPlumb manage our element dragging.\r\n * @param onClick\r\n */\r\nexport const createClickHandler = (\r\n  onClick: (event: React.MouseEvent<HTMLElement>) => void,\r\n  shouldCancelClick: () => boolean = null,\r\n  onMouseDown?: (event: React.MouseEvent<HTMLElement>) => void\r\n): any => {\r\n  return {\r\n    onMouseDown: (event: React.MouseEvent<HTMLElement>) => {\r\n      if (onMouseDown) {\r\n        onMouseDown(event);\r\n      }\r\n    },\r\n    onMouseUp: (event: React.MouseEvent<HTMLElement>) => {\r\n      if (!shouldCancelClick || !shouldCancelClick()) {\r\n        onClick(event);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const getLocalization = (\r\n  obj: Action | Category | Case,\r\n  localization: LocalizationMap,\r\n  language: Asset\r\n) => Localization.translate(obj, language, localization[language.id]);\r\n\r\n/** istanbul ignore next */\r\nexport const dump = (thing: any) => console.log(JSON.stringify(thing, null, 4));\r\n\r\n/**\r\n * Apply emphasis style\r\n */\r\nexport const emphasize = (text: string) => <span className=\"emphasize\">{text}</span>;\r\n\r\n/**\r\n * Does property exist in our ContactProperties enum?\r\n * @param {string} propertyToCheck - 'name' key on react-select AutoCompleteOption\r\n */\r\nexport const propertyExists = (propertyToCheck: string) => {\r\n  for (const property of Object.keys(ContactProperties)) {\r\n    if (property.toLowerCase() === propertyToCheck.toLowerCase().trim()) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Should x element be rendered?\r\n */\r\nexport const renderIf = (predicate: boolean) => (then: JSX.Element, otherwise?: JSX.Element) =>\r\n  predicate ? then : otherwise ? otherwise : null;\r\n\r\n/**\r\n * Does the label meet our length requirements?\r\n * @param {string} label - label created by react-select\r\n */\r\nexport const properLabelLength = (label: string = '') =>\r\n  label.length > 0 && label.length <= MAX_LABEL_LENGTH;\r\n\r\n/**\r\n * Does the label meet our character requirements?\r\n * @param {string} label\r\n */\r\nexport const containsOnlyLabelChars = (label: string = '') => LABEL_CHARS.test(label);\r\n\r\n/**\r\n * Does the label meet our length, character requirements?\r\n * @param {string} label - label created by react-select\r\n */\r\nexport const isValidLabel = (label: string) =>\r\n  properLabelLength(label) && containsOnlyLabelChars(label);\r\n\r\nexport const isRealValue = (obj: any) => obj !== null && obj !== undefined;\r\n\r\n/* istanbul ignore next */\r\nexport const timeStart = (name: string) =>\r\n  process.env.NODE_ENV === 'development' && console.time(name);\r\n\r\n/* istanbul ignore next */\r\nexport const timeEnd = (name: string) =>\r\n  process.env.NODE_ENV === 'development' && console.timeEnd(name);\r\n\r\nexport const log = (...message: any[]) =>\r\n  process.env.NODE_ENV === 'development' && console.log(...message);\r\n\r\nexport const capitalize = (str: string) =>\r\n  str.replace(/(?:^|\\s)\\S/g, captured => captured.toUpperCase());\r\n\r\nexport const set = (val: any): Query<any> => ({ $set: val });\r\n\r\nexport const setTrue = (): Query<true> => set(true);\r\n\r\nexport const setFalse = (): Query<false> => set(false);\r\n\r\nexport const setNull = (): Query<null> => set(null);\r\n\r\nexport const setEmpty = (): Query<string> => set('');\r\n\r\nexport const merge = (val: any): Query<any> => ({ $merge: val });\r\n\r\nexport const unset = (val: any): Query<any> => ({ $unset: val });\r\n\r\nexport const push = (arr: any[]): Query<any[]> => ({ $push: arr });\r\n\r\n// tslint:disable-next-line:array-type\r\nexport const splice = (arr: Array<Array<any>>): Query<Array<Array<any>>> => ({\r\n  $splice: arr\r\n});\r\n\r\nexport const optionExists = (newOptName: string, options: any[]) =>\r\n  options.find(({ name }) => name.toLowerCase().trim() === newOptName.toLowerCase().trim())\r\n    ? true\r\n    : false;\r\n\r\n/* export const isOptionUnique: IsOptionUniqueHandler = ({ option, options, labelKey, valueKey }) =>\r\n    !propertyExists(option.name) && !optionExists(option.name, options);\r\n\r\nexport const isValidNewOption: IsValidNewOptionHandler = ({ label }) => isValidLabel(label);\r\n*/\r\n/* export const composeCreateNewOption = ({\r\n    idCb,\r\n    type\r\n}: {\r\n    idCb: LabelIdCb;\r\n    type: AssetType;\r\n}): NewOptionCreatorHandler => ({ label, labelKey, valueKey }) => ({\r\n    id: idCb(label, labelKey, valueKey),\r\n    name: label,\r\n    type,\r\n    isNew: true\r\n});*/\r\n\r\n/**\r\n * Deduplicate values in an array.\r\n * Pass it a key to deduplicate based on obj key.\r\n */\r\nexport const uniqueBy = (a: any[], key: string): any[] => {\r\n  const seen: any = {};\r\n  return a.filter((item: any) => {\r\n    const k = item[key];\r\n    return seen.hasOwnProperty(k) ? false : (seen[k] = true);\r\n  });\r\n};\r\n\r\nexport const downloadJSON = (obj: any, name: string): void => {\r\n  const dataStr =\r\n    'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2));\r\n  const downloadAnchorNode = document.createElement('a');\r\n  downloadAnchorNode.setAttribute('href', dataStr);\r\n  downloadAnchorNode.setAttribute('download', name + '.json');\r\n  document.body.appendChild(downloadAnchorNode); // required for firefox\r\n  downloadAnchorNode.click();\r\n  downloadAnchorNode.remove();\r\n};\r\n\r\nexport const fetchAsset = (asset: Asset) => (assets: Assets, id: string): Promise<Asset> => {\r\n  return new Promise<Asset>((resolve, reject) => {\r\n    resolve(asset);\r\n  });\r\n};\r\n\r\nexport let createUUID = (): string => {\r\n  return generateUUID();\r\n};\r\n\r\nexport const seededUUIDs = (seed: number = 1): any => {\r\n  let current = seed;\r\n  const randomNext = () => {\r\n    const x = Math.sin(current++) * 10000;\r\n    return x - Math.floor(x);\r\n  };\r\n\r\n  const random = (min: number, max: number): number => {\r\n    return Math.floor(randomNext() * (max - min) + min);\r\n  };\r\n\r\n  return () => {\r\n    const randomSeed: number[] = [];\r\n    for (let idx = 0; idx < 16; idx++) {\r\n      randomSeed.push(random(0, 250));\r\n    }\r\n    return generateUUID({ random: randomSeed });\r\n  };\r\n};\r\n\r\nexport const range = (start: number, end: number) =>\r\n  Array.from({ length: end - start }, (v: number, k: number) => k + start);\r\n\r\nexport const pluralize = (count: number, noun: string, suffix: string = 's'): string =>\r\n  `${noun}${count !== 1 ? suffix : ''}`;\r\n\r\nexport const hasString = (names: string[], key: string): boolean =>\r\n  !!names.find((item: string) => item === key);\r\n\r\nexport const scalarArrayEquals = (a: any[], b: any[]) =>\r\n  a.every((value, index) => value === b[index]);\r\n\r\nexport const getURNPath = (urn: string) => {\r\n  return urn.split(':')[1];\r\n};\r\n\r\nexport const copyToClipboard = (text: string) => {\r\n  navigator.clipboard.writeText(text);\r\n};\r\n\r\nexport const throttle = (func: any, timeout: any) => {\r\n  let ready: boolean = true;\r\n\r\n  return (...args: any) => {\r\n    if (!ready) {\r\n      return;\r\n    }\r\n\r\n    ready = false;\r\n    func(...args);\r\n    setTimeout(() => {\r\n      ready = true;\r\n    }, timeout);\r\n  };\r\n};\r\n\r\nexport const traceUpdate = (component: any, prevProps: any, prevState?: any) => {\r\n  const messages: string[] = [];\r\n  Object.entries(component.props).forEach(\r\n    ([key, val]) => prevProps[key] !== val && messages.push(`Prop: '${key}' changed`)\r\n  );\r\n  if (prevState && component.state) {\r\n    Object.entries(component.state).forEach(\r\n      ([key, val]) => prevState[key] !== val && messages.push(`State: '${key}' changed`)\r\n    );\r\n  }\r\n\r\n  if (messages.length > 0) {\r\n    log('****  ' + component._reactInternalFiber.type.name + ' changed');\r\n    messages.forEach((message: string) => {\r\n      log(message);\r\n    });\r\n  }\r\n};\r\n\r\nexport const debounce = (fn: any, quiet: number, closure: any = null) => {\r\n  if (fn.timeout) {\r\n    window.clearTimeout(fn.timeout);\r\n  }\r\n  fn.timeout = window.setTimeout(closure || fn, quiet);\r\n};\r\n\r\nexport const onNextRender = (fn: any) => {\r\n  window.setTimeout(fn, 0);\r\n};\r\n\r\nexport const desnake = (text: string): string => {\r\n  if (!text) {\r\n    return text;\r\n  }\r\n  return text\r\n    .split('_')\r\n    .join(' ')\r\n    .toLowerCase();\r\n};\r\n\r\nexport const bool = (prop: boolean) => {\r\n  return prop ? 'true' : null;\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Button, { ButtonProps, ButtonTypes } from 'components/button/Button';\r\nimport shared from 'components/shared.module.scss';\r\nimport * as React from 'react';\r\nimport { renderIf } from 'utils';\r\n\r\nimport styles from './Dialog.module.scss';\r\n\r\nexport enum HeaderStyle {\r\n  NORMAL = 'normal',\r\n  BARBER = 'barber'\r\n}\r\n\r\nexport interface ButtonSet {\r\n  primary: ButtonProps;\r\n  secondary?: ButtonProps;\r\n  tertiary?: ButtonProps;\r\n}\r\n\r\nexport interface Tab {\r\n  name: string;\r\n  body: JSX.Element;\r\n  hasErrors?: boolean;\r\n  icon?: string;\r\n  checked?: boolean;\r\n}\r\n\r\ninterface Buttons {\r\n  leftButtons: JSX.Element[];\r\n  rightButtons: JSX.Element[];\r\n}\r\n\r\nexport interface DialogProps {\r\n  title: string;\r\n  subtitle?: string;\r\n  headerIcon?: string;\r\n  headerClass?: string;\r\n  headerStyle?: HeaderStyle;\r\n  buttons?: ButtonSet;\r\n  gutter?: JSX.Element;\r\n  noPadding?: boolean;\r\n  tabs?: Tab[];\r\n  className?: string;\r\n}\r\n\r\nexport interface DialogState {\r\n  activeTab: number;\r\n}\r\n\r\n/**\r\n * A component that has a front and back and can flip back and forth between them\r\n */\r\nexport default class Dialog extends React.Component<DialogProps, DialogState> {\r\n  private tabFocus: any = null;\r\n  private primaryButton: any = null;\r\n\r\n  constructor(props: DialogProps) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: -1\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^get/]\r\n    });\r\n  }\r\n\r\n  public showTab(index: number): void {\r\n    this.setState({ activeTab: index });\r\n  }\r\n\r\n  private handlePrimaryButton(onClick: any): void {\r\n    onClick();\r\n\r\n    this.tabFocus = window.setTimeout(() => {\r\n      let foundTab = false;\r\n      // focus on a tab with errors\r\n      (this.props.tabs || []).forEach((tab: Tab, index: number) => {\r\n        if (tab.hasErrors) {\r\n          this.setState({ activeTab: index });\r\n          foundTab = true;\r\n          return;\r\n        }\r\n      });\r\n\r\n      if (!foundTab) {\r\n        // or focus on the main content\r\n        this.setState({ activeTab: -1 });\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  private handleKey(event: KeyboardEvent): void {\r\n    if (event.key === 'Enter' && event.shiftKey) {\r\n      if (this.primaryButton) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        (event.target as any).blur();\r\n        this.primaryButton.click();\r\n        (event.target as any).focus();\r\n      } else {\r\n        console.log('No primary button!');\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    window.document.addEventListener('keydown', this.handleKey, {\r\n      capture: true\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    window.clearTimeout(this.tabFocus);\r\n    window.document.removeEventListener('keydown', this.handleKey, {\r\n      capture: true\r\n    });\r\n  }\r\n\r\n  private getButtons(): Buttons {\r\n    const rightButtons: JSX.Element[] = [];\r\n    const buttons = this.props.buttons || {\r\n      primary: null,\r\n      secondary: null,\r\n      tertiary: null\r\n    };\r\n\r\n    if (buttons.secondary) {\r\n      rightButtons.push(<Button key={0} type={ButtonTypes.secondary} {...buttons.secondary} />);\r\n    }\r\n\r\n    if (buttons.primary) {\r\n      rightButtons.push(\r\n        <Button\r\n          key={'button_' + buttons.primary.name}\r\n          onRef={(ref: any) => {\r\n            this.primaryButton = ref;\r\n          }}\r\n          onClick={() => {\r\n            this.handlePrimaryButton(buttons.primary.onClick);\r\n          }}\r\n          leftSpacing={true}\r\n          name={buttons.primary.name}\r\n          disabled={buttons.primary.disabled}\r\n          type={ButtonTypes.primary}\r\n        />\r\n      );\r\n    }\r\n\r\n    const leftButtons: JSX.Element[] = [];\r\n\r\n    // Our left most button if we have one\r\n    if (buttons.tertiary) {\r\n      leftButtons.push(<Button key={0} type={ButtonTypes.tertiary} {...buttons.tertiary} />);\r\n    }\r\n\r\n    return {\r\n      leftButtons,\r\n      rightButtons\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const headerClasses = [styles.header];\r\n\r\n    if (this.state.activeTab > -1) {\r\n      headerClasses.push(styles.clickable);\r\n    }\r\n\r\n    if (this.props.headerClass) {\r\n      headerClasses.push(shared[this.props.headerClass]);\r\n    }\r\n\r\n    if (this.props.headerIcon) {\r\n      headerClasses.push(styles.iconed);\r\n    }\r\n\r\n    if (this.props.headerStyle === HeaderStyle.BARBER) {\r\n      headerClasses.push(styles.barber);\r\n    }\r\n\r\n    const activeClasses = [styles.dialog];\r\n    const { leftButtons, rightButtons } = this.getButtons();\r\n\r\n    if (this.props.className) {\r\n      activeClasses.push(this.props.className);\r\n    }\r\n\r\n    return (\r\n      <div className={activeClasses.join(' ')}>\r\n        {(this.props.tabs || []).length > 0 ? (\r\n          <div className={styles.tabs}>\r\n            {(this.props.tabs || []).map((tab: Tab, index: number) => (\r\n              <div\r\n                key={'tab_' + tab.name}\r\n                className={styles.tab + ' ' + (index === this.state.activeTab ? styles.active : '')}\r\n                onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\r\n                  evt.stopPropagation();\r\n                  this.setState({ activeTab: index });\r\n                }}\r\n              >\r\n                {tab.name} {tab.icon ? <span className={styles.tab_icon + ' ' + tab.icon} /> : null}\r\n                {tab.checked ? <span className={styles.tab_icon + ' fe-check'} /> : null}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : null}\r\n        <div\r\n          onClick={() => {\r\n            this.setState({ activeTab: -1 });\r\n          }}\r\n          className={headerClasses.join(' ')}\r\n        >\r\n          {this.state.activeTab > -1 ? <div className={styles.header_overlay} /> : null}\r\n          {renderIf(this.props.headerIcon !== undefined)(\r\n            <span className={`${styles.header_icon} ${this.props.headerIcon}`} />\r\n          )}\r\n          <div className={styles.title_container}>\r\n            <div className={styles.title}>{this.props.title}</div>\r\n            <div className={styles.subtitle}>{this.props.subtitle}</div>\r\n          </div>\r\n        </div>\r\n        <div className={this.props.noPadding ? '' : styles.content}>\r\n          {this.state.activeTab > -1\r\n            ? this.props.tabs![this.state.activeTab].body\r\n            : this.props.children}\r\n        </div>\r\n\r\n        <div className={styles.footer}>\r\n          <div className={styles.buttons}>\r\n            {renderIf(leftButtons.length > 0)(\r\n              <div className={styles.left_buttons}>{leftButtons}</div>\r\n            )}\r\n            {renderIf(this.props.gutter != null)(\r\n              <div className={styles.gutter}>{this.props.gutter}</div>\r\n            )}\r\n            <div className={styles.right_buttons}>{rightButtons}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","enum Constants {\r\n  UPDATE_EDITOR_STATE = 'UPDATE_EDITOR_STATE',\r\n  UPDATE_NODE_EDITOR_SETTINGS = 'UPDATE_NODE_EDITOR_SETTINGS',\r\n  UPDATE_TRANSLATING = 'UPDATE_TRANSLATING',\r\n  UPDATE_BASE_LANGUAGE = 'UPDATE_BASE_LANGUAGE',\r\n  UPDATE_LANGUAGES = 'UPDATE_LANGUAGES',\r\n  UPDATE_LANGUAGE = 'UPDATE_LANGUAGE',\r\n  UPDATE_FETCHING_FLOW = 'FETCHING_FLOW',\r\n  UPDATE_DEFINITION = 'UPDATE_DEFINITION',\r\n  UPDATE_NODE_DRAGGING = 'UPDATE_NODE_DRAGGING',\r\n  UPDATE_FLOWS = 'UPDATE_FLOWS',\r\n  UPDATE_PENDING_CONNECTIONS = 'UPDATE_PENDING_CONNECTIONS',\r\n  REMOVE_PENDING_CONNECTION = 'REMOVE_PENDING_CONNECTION',\r\n  UPDATE_COMPONENTS = 'UPDATE_COMPONENTS',\r\n  UPDATE_CONTACT_FIELDS = 'UPDATE_CONTACT_FIELDS',\r\n  UPDATE_GROUPS = 'UPDATE_GROUPS',\r\n  UPDATE_RESULT_MAP = 'UPDATE_RESULT_MAP',\r\n  UPDATE_ASSET_MAP = 'UPDATE_ASSET_MAP',\r\n  UPDATE_NODES = 'UPDATE_NODES',\r\n  UPDATE_ISSUES = 'UPDATE_ISSUES',\r\n  UPDATE_METADATA = 'UPDATE_METADATA',\r\n  UPDATE_EXITS = 'UPDATE_EXITS',\r\n  UPDATE_NODE_EDITOR_OPEN = 'UPDATE_NODE_EDITOR_OPEN',\r\n  UPDATE_CREATE_NODE_POSITION = 'UPDATE_CREATE_NODE_POSITION',\r\n  UPDATE_DRAG_GROUP = 'UPDATE_DRAG_GROUP',\r\n  UPDATE_TYPE_CONFIG = 'UPDATE_TYPE_CONFIG',\r\n  UPDATE_USER_ADDING_ACTION = 'UPDATE_USER_ADDING_ACTION',\r\n  INCREMENT_SUGGESTED_RESULT_NAME_COUNT = 'INCREMENT_SUGGESTED_RESULT_NAME_COUNT'\r\n}\r\n\r\nexport default Constants;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\ninterface FixyProps {}\r\n\r\ninterface FixyState {\r\n  top: number;\r\n  fixed: boolean;\r\n}\r\n\r\nexport class Fixy extends React.PureComponent<FixyProps, FixyState> {\r\n  private ele!: HTMLDivElement | null;\r\n\r\n  constructor(props: FixyProps) {\r\n    super(props);\r\n    this.state = {\r\n      top: 0,\r\n      fixed: false\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private handleScroll(): void {\r\n    const fixed = window.scrollY > this.state.top;\r\n    this.setState({ fixed });\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const top = this.ele!.getBoundingClientRect().top + window.scrollY;\r\n    const fixed = window.scrollY > top;\r\n    this.setState({ top, fixed });\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    let styles: React.CSSProperties = { position: 'absolute' };\r\n    if (this.state.fixed) {\r\n      styles = {\r\n        position: 'fixed',\r\n        top: 0\r\n      };\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ele => {\r\n          this.ele = ele;\r\n        }}\r\n        style={styles}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { FlowDefinition, FlowNode, UINode, FlowMetadata, FlowIssue } from 'flowTypes';\r\nimport { combineReducers, Action } from 'redux';\r\nimport ActionTypes, {\r\n  UpdateAssetsAction,\r\n  UpdateBaseLanguageAction,\r\n  UpdateContactFieldsAction,\r\n  UpdateDefinitionAction,\r\n  UpdateNodesAction,\r\n  UpdateMetadataAction,\r\n  UpdateIssuesAction\r\n} from 'store/actionTypes';\r\nimport Constants from 'store/constants';\r\nimport { Type } from 'config/interfaces';\r\n\r\n// tslint:disable:no-shadowed-variable\r\nexport interface RenderNodeMap {\r\n  [uuid: string]: RenderNode;\r\n}\r\n\r\nexport interface FlowIssueMap {\r\n  [uuid: string]: FlowIssue[];\r\n}\r\n\r\nexport interface RenderNode {\r\n  ui: UINode;\r\n  node: FlowNode;\r\n  inboundConnections: { [nodeUUID: string]: string };\r\n  ghost?: boolean;\r\n}\r\n\r\nexport interface RenderAction {\r\n  action: Action;\r\n  config: Type;\r\n  index?: number;\r\n}\r\n\r\nexport interface FunctionExample {\r\n  template: string;\r\n  output: string;\r\n}\r\n\r\nexport interface CompletionOption {\r\n  name?: string;\r\n  summary: string;\r\n\r\n  // functions\r\n  signature?: string;\r\n  detail?: string;\r\n  examples?: FunctionExample[];\r\n}\r\n\r\nexport interface ContactFields {\r\n  [snakedFieldName: string]: string;\r\n}\r\n\r\nexport enum AssetType {\r\n  Channel = 'channel',\r\n  Classifier = 'classifier',\r\n  Contact = 'contact',\r\n  ContactProperty = 'property',\r\n  Currency = 'currency',\r\n  Environment = 'environment',\r\n  Expression = 'expression',\r\n  Field = 'field',\r\n  Flow = 'flow',\r\n  Global = 'global',\r\n  Group = 'group',\r\n  Label = 'label',\r\n  Language = 'language',\r\n  Remove = 'remove',\r\n  Resthook = 'resthook',\r\n  Result = 'result',\r\n  Revision = 'revision',\r\n  Scheme = 'scheme',\r\n  Template = 'template',\r\n  Ticketer = 'ticketer',\r\n  URN = 'urn'\r\n}\r\n\r\nexport interface Reference {\r\n  nodeUUID: string;\r\n  actionUUID?: string;\r\n}\r\n\r\nexport interface Asset {\r\n  id: string;\r\n  name: string;\r\n  type: AssetType;\r\n\r\n  order?: number;\r\n  references?: Reference[];\r\n  isNew?: boolean;\r\n  content?: any;\r\n}\r\n\r\nexport const REMOVE_VALUE_ASSET = {\r\n  id: AssetType.Remove,\r\n  name: 'Remove Value',\r\n  type: AssetType.Remove\r\n};\r\n\r\nexport const DEFAULT_LANGUAGE = {\r\n  id: 'base',\r\n  name: 'Default',\r\n  type: AssetType.Language\r\n};\r\n\r\nexport interface AssetStore {\r\n  [assetType: string]: Assets;\r\n}\r\n\r\nexport interface AssetMap {\r\n  [id: string]: Asset;\r\n}\r\n\r\nexport interface Assets {\r\n  // our local cache of assets\r\n  items: AssetMap;\r\n\r\n  type: AssetType;\r\n\r\n  // an optional endpoint to search for more\r\n  endpoint?: string;\r\n\r\n  // option name for the id when fetching remotely\r\n  id?: string;\r\n\r\n  // have our assets already been loaded\r\n  prefetched?: boolean;\r\n}\r\n\r\nexport interface FlowContext {\r\n  metadata: FlowMetadata;\r\n  baseLanguage: Asset;\r\n  contactFields: ContactFields;\r\n  definition: FlowDefinition;\r\n  nodes: { [uuid: string]: RenderNode };\r\n  issues: FlowIssueMap;\r\n  assetStore: AssetStore;\r\n}\r\n\r\n// Initial state\r\nexport const initialState: FlowContext = {\r\n  definition: null,\r\n  baseLanguage: null,\r\n  metadata: {\r\n    dependencies: [],\r\n    results: [],\r\n    waiting_exit_uuids: [],\r\n    parent_refs: [],\r\n    issues: []\r\n  },\r\n  contactFields: {},\r\n  nodes: {},\r\n  issues: {},\r\n  assetStore: {}\r\n};\r\n\r\n// Action Creators\r\nexport const updateDefinition = (definition: FlowDefinition): UpdateDefinitionAction => ({\r\n  type: Constants.UPDATE_DEFINITION,\r\n  payload: {\r\n    definition\r\n  }\r\n});\r\n\r\nexport const updateNodes = (nodes: RenderNodeMap): UpdateNodesAction => ({\r\n  type: Constants.UPDATE_NODES,\r\n  payload: {\r\n    nodes\r\n  }\r\n});\r\n\r\nexport const updateIssues = (issues: FlowIssueMap): UpdateIssuesAction => ({\r\n  type: Constants.UPDATE_ISSUES,\r\n  payload: {\r\n    issues\r\n  }\r\n});\r\n\r\nexport const updateMetadata = (metadata: FlowMetadata): UpdateMetadataAction => {\r\n  return {\r\n    type: Constants.UPDATE_METADATA,\r\n    payload: {\r\n      metadata\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateBaseLanguage = (baseLanguage: Asset): UpdateBaseLanguageAction => ({\r\n  type: Constants.UPDATE_BASE_LANGUAGE,\r\n  payload: {\r\n    baseLanguage\r\n  }\r\n});\r\n\r\nexport const updateContactFields = (contactFields: ContactFields): UpdateContactFieldsAction => ({\r\n  type: Constants.UPDATE_CONTACT_FIELDS,\r\n  payload: {\r\n    contactFields\r\n  }\r\n});\r\n\r\nexport const updateAssets = (assets: AssetStore): UpdateAssetsAction => ({\r\n  type: Constants.UPDATE_ASSET_MAP,\r\n  payload: {\r\n    assets\r\n  }\r\n});\r\n\r\n// Reducers\r\nexport const definition = (\r\n  state: FlowDefinition = initialState.definition,\r\n  action: ActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_DEFINITION:\r\n      return action.payload.definition;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const nodes = (state: {} = initialState.nodes, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_NODES:\r\n      return action.payload.nodes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const issues = (state: {} = initialState.issues, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_ISSUES:\r\n      return action.payload.issues;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const metadata = (state: FlowMetadata = initialState.metadata, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_METADATA:\r\n      return action.payload.metadata;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const assetStore = (state: AssetStore = initialState.assetStore, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_ASSET_MAP:\r\n      return action.payload.assets;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const baseLanguage = (state: Asset = initialState.baseLanguage, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_BASE_LANGUAGE:\r\n      return action.payload.baseLanguage;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const contactFields = (\r\n  state: ContactFields = initialState.contactFields,\r\n  action: ActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_CONTACT_FIELDS:\r\n      return action.payload.contactFields;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Root reducer\r\nexport default combineReducers({\r\n  definition,\r\n  nodes,\r\n  issues,\r\n  metadata,\r\n  assetStore,\r\n  baseLanguage,\r\n  contactFields\r\n});\r\n","export enum FlowTypes {\r\n  MESSAGE = 'message',\r\n  VOICE = 'voice',\r\n  SURVEY = 'message_offline',\r\n  NONE = '-'\r\n}\r\n\r\nexport enum ContactStatus {\r\n  ACTIVE = 'active',\r\n  BLOCKED = 'blocked',\r\n  STOPPED = 'stopped',\r\n  ARCHIVED = 'archived'\r\n}\r\n\r\nexport enum Types {\r\n  execute_actions = 'execute_actions',\r\n  add_contact_urn = 'add_contact_urn',\r\n  add_contact_groups = 'add_contact_groups',\r\n  add_input_labels = 'add_input_labels',\r\n  remove_contact_groups = 'remove_contact_groups',\r\n  set_contact_channel = 'set_contact_channel',\r\n  set_contact_field = 'set_contact_field',\r\n  set_contact_name = 'set_contact_name',\r\n  set_contact_language = 'set_contact_language',\r\n  set_contact_status = 'set_contact_status',\r\n  set_run_result = 'set_run_result',\r\n  call_classifier = 'call_classifier',\r\n  call_resthook = 'call_resthook',\r\n  call_webhook = 'call_webhook',\r\n  open_ticket = 'open_ticket',\r\n  send_msg = 'send_msg',\r\n  send_email = 'send_email',\r\n  send_broadcast = 'send_broadcast',\r\n  enter_flow = 'enter_flow',\r\n  start_session = 'start_session',\r\n  transfer_airtime = 'transfer_airtime',\r\n  split_by_airtime = 'split_by_airtime',\r\n  split_by_expression = 'split_by_expression',\r\n  split_by_contact_field = 'split_by_contact_field',\r\n  split_by_run_result = 'split_by_run_result',\r\n  split_by_run_result_delimited = 'split_by_run_result_delimited',\r\n  split_by_groups = 'split_by_groups',\r\n  split_by_intent = 'split_by_intent',\r\n  split_by_random = 'split_by_random',\r\n  split_by_resthook = 'split_by_resthook',\r\n  split_by_ticket = 'split_by_ticket',\r\n  split_by_scheme = 'split_by_scheme',\r\n  split_by_subflow = 'split_by_subflow',\r\n  split_by_webhook = 'split_by_webhook',\r\n  wait_for_response = 'wait_for_response',\r\n  wait_for_menu = 'wait_for_menu',\r\n  wait_for_digits = 'wait_for_digits',\r\n  wait_for_audio = 'wait_for_audio',\r\n  wait_for_video = 'wait_for_video',\r\n  wait_for_location = 'wait_for_location',\r\n  wait_for_image = 'wait_for_image',\r\n  missing = 'missing',\r\n  say_msg = 'say_msg',\r\n  play_audio = 'play_audio'\r\n}\r\n\r\nexport enum Operators {\r\n  has_any_word = 'has_any_word',\r\n  has_all_words = 'has_all_words',\r\n  has_phrase = 'has_phrase',\r\n  has_only_phrase = 'has_only_phrase',\r\n  has_beginning = 'has_beginning',\r\n  has_text = 'has_text',\r\n  has_date = 'has_date',\r\n  has_date_lt = 'has_date_lt',\r\n  has_date_eq = 'has_date_eq',\r\n  has_date_gt = 'has_date_gt',\r\n  has_time = 'has_time',\r\n  has_number = 'has_number',\r\n  has_number_between = 'has_number_between',\r\n  has_number_lt = 'has_number_lt',\r\n  has_number_lte = 'has_number_lte',\r\n  has_number_eq = 'has_number_eq',\r\n  has_number_gte = 'has_number_gte',\r\n  has_number_gt = 'has_number_gt',\r\n  has_run_status = 'has_run_status',\r\n  has_only_text = 'has_only_text',\r\n  has_group = 'has_group',\r\n  has_phone = 'has_phone',\r\n  has_email = 'has_email',\r\n  has_value = 'has_value',\r\n  has_district = 'has_district',\r\n  has_state = 'has_state',\r\n  has_ward = 'has_ward',\r\n  has_pattern = 'has_pattern',\r\n  has_error = 'has_error',\r\n  has_intent = 'has_intent',\r\n  has_top_intent = 'has_top_intent',\r\n  has_category = 'has_category'\r\n}\r\n\r\nexport enum FeatureFilter {\r\n  HAS_RESTHOOK = 'resthook',\r\n  HAS_WHATSAPP = 'whatsapp',\r\n  HAS_AIRTIME = 'airtime',\r\n  HAS_CLASSIFIER = 'classifier',\r\n  HAS_TICKETER = 'ticketer',\r\n  HAS_FACEBOOK = 'facebook'\r\n}\r\n\r\nexport interface FlowTypeVisibility {\r\n  visibility?: FlowTypes[];\r\n  filter?: FeatureFilter;\r\n}\r\n\r\nexport enum PopTabType {\r\n  SIMULATOR = 'Simulator',\r\n  REVISION_HISTORY = 'Revision History',\r\n  ISSUES_TAB = 'Issues Tab',\r\n  TRANSLATOR_TAB = 'Translator Tab'\r\n}\r\n\r\nexport interface Type extends FlowTypeVisibility {\r\n  type: Types;\r\n  name: string;\r\n  description: string;\r\n  component?: any;\r\n  form?: React.ComponentClass<any>;\r\n  aliases?: string[];\r\n  localization?: React.ComponentClass<any>;\r\n  localizeableKeys?: string[];\r\n\r\n  // opportunity to massage our object for display\r\n  massageForDisplay?: (obj: any) => void;\r\n}\r\n\r\nexport interface Operator extends FlowTypeVisibility {\r\n  type: Operators;\r\n  verboseName: string;\r\n  operands: number;\r\n  categoryName?: string;\r\n}\r\n\r\nexport interface OperatorMap {\r\n  [propName: string]: Operator;\r\n}\r\n\r\nexport const HIDDEN = [FlowTypes.NONE];\r\nexport const VOICE = [FlowTypes.VOICE];\r\nexport const SURVEY = [FlowTypes.SURVEY];\r\nexport const TEXT_TYPES = [FlowTypes.MESSAGE, FlowTypes.SURVEY];\r\nexport const ONLINE = [FlowTypes.MESSAGE, FlowTypes.VOICE];\r\n","import { AssetType } from 'store/flowContext';\r\n\r\nexport const currencies = {\r\n  ARS: {\r\n    id: 'ARS',\r\n    name: 'Argentine Peso',\r\n    type: AssetType.Currency\r\n  },\r\n  AUD: {\r\n    id: 'AUD',\r\n    name: 'Australian Dollar',\r\n    type: AssetType.Currency\r\n  },\r\n  BIF: {\r\n    id: 'BIF',\r\n    name: 'Burundi Franc',\r\n    type: AssetType.Currency\r\n  },\r\n  BRL: {\r\n    id: 'BRL',\r\n    name: 'Brazilian Real',\r\n    type: AssetType.Currency\r\n  },\r\n\r\n  CAD: {\r\n    id: 'CAD',\r\n    name: 'Canadian Dollar',\r\n    type: AssetType.Currency\r\n  },\r\n  CDF: {\r\n    id: 'CDF',\r\n    name: 'Congolese Franc',\r\n    type: AssetType.Currency\r\n  },\r\n  CLP: {\r\n    id: 'CLP',\r\n    name: 'Chilean Peso',\r\n    type: AssetType.Currency\r\n  },\r\n  COP: {\r\n    id: 'COP',\r\n    name: 'Colombian Peso',\r\n    type: AssetType.Currency\r\n  },\r\n  DJF: {\r\n    id: 'DJF',\r\n    name: 'Djibouti Franc',\r\n    type: AssetType.Currency\r\n  },\r\n  DOP: {\r\n    id: 'DOP',\r\n    name: 'Dominican Peso',\r\n    type: AssetType.Currency\r\n  },\r\n  DZD: {\r\n    id: 'DZD',\r\n    name: 'Algerian Dinar',\r\n    type: AssetType.Currency\r\n  },\r\n  EUR: {\r\n    id: 'EUR',\r\n    name: 'Euro',\r\n    type: AssetType.Currency\r\n  },\r\n  GBP: {\r\n    id: 'GBP',\r\n    name: 'Pound Sterling',\r\n    type: AssetType.Currency\r\n  },\r\n  GHS: {\r\n    id: 'GHS',\r\n    name: 'Ghana Cedi',\r\n    type: AssetType.Currency\r\n  },\r\n  GNF: {\r\n    id: 'GNF',\r\n    name: 'Guinean Franc',\r\n    type: AssetType.Currency\r\n  },\r\n  KES: {\r\n    id: 'KES',\r\n    name: 'Kenyan Shilling',\r\n    type: AssetType.Currency\r\n  },\r\n  LBP: {\r\n    id: 'LBP',\r\n    name: 'Lebanese Pound',\r\n    type: AssetType.Currency\r\n  },\r\n  LKR: {\r\n    id: 'LKR',\r\n    name: 'Sri Lanka Rupee',\r\n    type: AssetType.Currency\r\n  },\r\n  LRD: {\r\n    id: 'LRD',\r\n    name: 'Liberian Dollar',\r\n    type: AssetType.Currency\r\n  },\r\n  MWK: {\r\n    id: 'MWK',\r\n    name: 'Malawi Kwacha',\r\n    type: AssetType.Currency\r\n  },\r\n  MXN: {\r\n    id: 'MXN',\r\n    name: 'Mexican Peso',\r\n    type: AssetType.Currency\r\n  },\r\n  NAD: {\r\n    id: 'NAD',\r\n    name: 'Namibia Dollar',\r\n    type: AssetType.Currency\r\n  },\r\n  NPR: {\r\n    id: 'NPR',\r\n    name: 'Nepalese Rupee',\r\n    type: AssetType.Currency\r\n  },\r\n  NZD: {\r\n    id: 'NZD',\r\n    name: 'New Zealand Dollar',\r\n    type: AssetType.Currency\r\n  },\r\n  PHP: {\r\n    id: 'PHP',\r\n    name: 'Philippine Piso',\r\n    type: AssetType.Currency\r\n  },\r\n  PKR: {\r\n    id: 'PKR',\r\n    name: 'Pakistan Rupee',\r\n    type: AssetType.Currency\r\n  },\r\n  RUB: {\r\n    id: 'RUB',\r\n    name: 'Russian Ruble',\r\n    type: AssetType.Currency\r\n  },\r\n  RWF: {\r\n    id: 'RWF',\r\n    name: 'Rwanda Franc',\r\n    type: AssetType.Currency\r\n  },\r\n  SDG: {\r\n    id: 'SDG',\r\n    name: 'Sudanese Pound',\r\n    type: AssetType.Currency\r\n  },\r\n  SGD: {\r\n    id: 'SGD',\r\n    name: 'Singapore Dollar',\r\n    type: AssetType.Currency\r\n  },\r\n  SLL: {\r\n    id: 'SLL',\r\n    name: 'Leone',\r\n    type: AssetType.Currency\r\n  },\r\n  SOS: {\r\n    id: 'SOS',\r\n    name: 'Somali Shilling',\r\n    type: AssetType.Currency\r\n  },\r\n  SRD: {\r\n    id: 'SRD',\r\n    name: 'Surinam Dollar',\r\n    type: AssetType.Currency\r\n  },\r\n  SVC: {\r\n    id: 'SVC',\r\n    name: 'El Salvador Colon',\r\n    type: AssetType.Currency\r\n  },\r\n  TND: {\r\n    id: 'TND',\r\n    name: 'Tunisian Dinar',\r\n    type: AssetType.Currency\r\n  },\r\n  TRY: {\r\n    id: 'TRY',\r\n    name: 'Turkish Lira',\r\n    type: AssetType.Currency\r\n  },\r\n  TZS: {\r\n    id: 'TZS',\r\n    name: 'Tanzanian Shilling',\r\n    type: AssetType.Currency\r\n  },\r\n  UGX: {\r\n    id: 'UGX',\r\n    name: 'Uganda Shilling',\r\n    type: AssetType.Currency\r\n  },\r\n  USD: {\r\n    id: 'USD',\r\n    name: 'US Dollar',\r\n    type: AssetType.Currency\r\n  },\r\n  UYU: {\r\n    id: 'UYU',\r\n    name: 'Peso Uruguayo',\r\n    type: AssetType.Currency\r\n  },\r\n  UZS: {\r\n    id: 'UZS',\r\n    name: 'Uzbekistan Sum',\r\n    type: AssetType.Currency\r\n  },\r\n  VEF: {\r\n    id: 'VEF',\r\n    name: 'Bolívar',\r\n    type: AssetType.Currency\r\n  },\r\n  XCD: {\r\n    id: 'XCD',\r\n    name: 'East Caribbean Dollar',\r\n    type: AssetType.Currency\r\n  },\r\n  YER: {\r\n    id: 'YER',\r\n    name: 'Yemeni Rial',\r\n    type: AssetType.Currency\r\n  },\r\n  ZAR: {\r\n    id: 'ZAR',\r\n    name: 'Rand',\r\n    type: AssetType.Currency\r\n  },\r\n  ZMW: {\r\n    id: 'ZMW',\r\n    name: 'Zambian Kwacha',\r\n    type: AssetType.Currency\r\n  },\r\n  ZWL: {\r\n    id: 'ZWL',\r\n    name: 'Zimbabwe Dollar',\r\n    type: AssetType.Currency\r\n  }\r\n};\r\n","/* istanbul ignore file */\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { SaveResult } from 'components/revisions/RevisionExplorer';\r\nimport { Endpoints, Exit, FlowDefinition, SPEC_VERSION, FlowDetails } from 'flowTypes';\r\nimport { currencies } from 'store/currencies';\r\nimport { Activity, RecentMessage } from 'store/editor';\r\nimport {\r\n  Asset,\r\n  AssetMap,\r\n  Assets,\r\n  AssetStore,\r\n  AssetType,\r\n  CompletionOption\r\n} from 'store/flowContext';\r\nimport { assetListToMap } from 'store/helpers';\r\nimport { CompletionSchema } from 'utils/completion';\r\nimport { FlowTypes } from 'config/interfaces';\r\n\r\n// Configure axios to always send JSON requests\r\naxios.defaults.headers.post['Content-Type'] = 'application/javascript';\r\naxios.defaults.responseType = 'json';\r\naxios.defaults.timeout = 30000;\r\n\r\n/**\r\n * Gets the path activity and the count of active particpants at each node\r\n * @param {string} flowUUID - The UUID of the current flow\r\n * @param {string} activityEndpoint - The URL path to the endpoint providing this data\r\n * @returns {Object} - An object representation of the flow's activty\r\n */\r\nexport const getActivity = (\r\n  activityEndpoint: string,\r\n  flowUUID: string,\r\n  headers = {}\r\n): Promise<Activity> =>\r\n  new Promise<Activity>((resolve, reject) =>\r\n    axios\r\n      .get(`${activityEndpoint}?flow=${flowUUID}`, { headers })\r\n      .then((response: AxiosResponse) => resolve(response.data as Activity))\r\n      .catch((error: any) => reject(error))\r\n  );\r\n\r\nexport interface Cancel {\r\n  reject?: () => void;\r\n}\r\n\r\nexport const saveRevision = (endpoint: string, definition: FlowDefinition): Promise<SaveResult> => {\r\n  const csrf = getCookie('csrftoken');\r\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\r\n\r\n  // update the spec version in our def to the current editor version\r\n  let patch = '0';\r\n\r\n  // honor any existing patch increments\r\n  let release = definition.spec_version.split('.');\r\n  if (release.length > 2) {\r\n    patch = release[2];\r\n  }\r\n\r\n  definition.spec_version = [SPEC_VERSION, patch].join('.');\r\n\r\n  return new Promise<SaveResult>((resolve, reject) => {\r\n    axios\r\n      .post(endpoint, definition, { headers })\r\n      .then((response: AxiosResponse) => {\r\n        if (response.status === 200) {\r\n          resolve(response.data as SaveResult);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n};\r\n\r\nexport const getRecentMessages = (\r\n  recentsEndpoint: string,\r\n  exit: Exit,\r\n  cancel: Cancel\r\n): Promise<RecentMessage[]> =>\r\n  new Promise<RecentMessage[]>((resolve, reject) => {\r\n    cancel.reject = reject;\r\n    return axios\r\n      .get(`${recentsEndpoint}?exits=${exit.uuid}&to=${exit.destination_uuid}`)\r\n      .then((response: AxiosResponse) => {\r\n        const recentMessages: RecentMessage[] = [];\r\n        for (const row of response.data) {\r\n          recentMessages.push({ text: row.text, sent: row.sent });\r\n        }\r\n\r\n        resolve(response.data as RecentMessage[]);\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n\r\n/** Get the value for a named cookie */\r\nexport const getCookie = (name: string): string => {\r\n  for (const cookie of document.cookie.split(';')) {\r\n    const idx = cookie.indexOf('=');\r\n    let key = cookie.substr(0, idx);\r\n    let value = cookie.substr(idx + 1);\r\n\r\n    // no spaces allowed\r\n    key = key.trim();\r\n    value = value.trim();\r\n\r\n    if (key === name) {\r\n      return value;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const postNewAsset = (assets: Assets, payload: any): Promise<Asset> => {\r\n  // if we have a csrf in our cookie, pass it along as a header\r\n  const csrf = getCookie('csrftoken');\r\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\r\n\r\n  return new Promise<Asset>((resolve, reject) => {\r\n    axios\r\n      .post(assets.endpoint, payload, { headers })\r\n      .then((response: AxiosResponse) => {\r\n        resolve(resultToAsset(response.data, assets.type, assets.id));\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n};\r\n\r\nexport const fetchAsset = (assets: Assets, id: string): Promise<Asset> => {\r\n  return new Promise<Asset>((resolve, reject) => {\r\n    getAssets(assets.endpoint, assets.type, assets.id).then((results: Asset[]) => {\r\n      resolve(results.find((asset: Asset) => asset.id === id));\r\n    });\r\n  });\r\n};\r\n\r\ninterface AssetPage {\r\n  assets: Asset[];\r\n  next: string;\r\n}\r\n\r\nexport const getAssetPage = (url: string, type: AssetType, id: string): Promise<AssetPage> => {\r\n  return new Promise<AssetPage>((resolve, reject) => {\r\n    axios\r\n      .get(url)\r\n      .then((response: AxiosResponse) => {\r\n        const assets: Asset[] = response.data.results.map((result: any, idx: number) => {\r\n          const asset = resultToAsset(result, type, id);\r\n          asset.order = idx;\r\n          return asset;\r\n        });\r\n        resolve({ assets, next: response.data.next });\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n};\r\n\r\nexport const getAssets = async (url: string, type: AssetType, id: string): Promise<Asset[]> => {\r\n  if (!url) {\r\n    return new Promise<Asset[]>((resolve, reject) => resolve([]));\r\n  }\r\n\r\n  let assets: Asset[] = [];\r\n  let pageUrl = url;\r\n  while (pageUrl) {\r\n    const assetPage = await getAssetPage(pageUrl, type, id);\r\n    assets = assets.concat(assetPage.assets);\r\n    pageUrl = assetPage.next;\r\n  }\r\n  return assets;\r\n};\r\n\r\nexport const resultToAsset = (result: any, type: AssetType, id: string): Asset => {\r\n  const idKey = id || 'uuid';\r\n\r\n  let assetType = type;\r\n\r\n  if (type === AssetType.Flow && result.type) {\r\n    switch (result.type) {\r\n      case 'message':\r\n        result.type = FlowTypes.MESSAGE;\r\n        break;\r\n      case 'voice':\r\n        result.type = FlowTypes.VOICE;\r\n        break;\r\n      case 'survey':\r\n        result.type = FlowTypes.SURVEY;\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (type !== AssetType.Flow && result.type) {\r\n    assetType = result.type;\r\n  }\r\n\r\n  const asset: Asset = {\r\n    name: result.name || result.text || result.label || result[idKey],\r\n    id: result[idKey],\r\n    type: assetType\r\n  };\r\n\r\n  delete result[idKey];\r\n  delete result.name;\r\n  delete result.text;\r\n\r\n  asset.content = result;\r\n  return asset;\r\n};\r\n\r\nexport const isMatch = (\r\n  input: string,\r\n  asset: Asset,\r\n  shouldExclude: (asset: Asset) => boolean\r\n): boolean => {\r\n  if (shouldExclude && shouldExclude(asset)) {\r\n    return false;\r\n  }\r\n\r\n  const inputLower = input.toLowerCase();\r\n  // some assets have ids worth matching\r\n  if (asset.type === AssetType.Currency || asset.type === AssetType.Language) {\r\n    if (asset.id.toLowerCase().includes(inputLower)) {\r\n      return true;\r\n    }\r\n  }\r\n  return asset.name.toLowerCase().includes(inputLower);\r\n};\r\n\r\n/**\r\n * Searches an AssetMap for a substring\r\n */\r\nexport const searchAssetMap = (\r\n  query: string,\r\n  assets: AssetMap,\r\n  additionalOptions?: Asset[],\r\n  shouldExclude?: (asset: Asset) => boolean\r\n): Asset[] => {\r\n  const search = query.toLowerCase();\r\n  let matches = Object.keys(assets)\r\n    .map(key => assets[key])\r\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\r\n\r\n  // include our additional matches if we have any\r\n  matches = matches\r\n    .concat(additionalOptions || [])\r\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\r\n\r\n  return matches;\r\n};\r\n\r\nexport const createAssetStore = (endpoints: Endpoints): Promise<AssetStore> => {\r\n  return new Promise<AssetStore>((resolve, reject) => {\r\n    const assetStore: AssetStore = {\r\n      channels: {\r\n        endpoint: getURL(endpoints.channels),\r\n        type: AssetType.Channel,\r\n        items: {}\r\n      },\r\n      classifiers: {\r\n        endpoint: getURL(endpoints.classifiers),\r\n        type: AssetType.Classifier,\r\n        items: {}\r\n      },\r\n      languages: {\r\n        endpoint: getURL(endpoints.languages),\r\n        type: AssetType.Language,\r\n        items: {},\r\n        id: 'iso'\r\n      },\r\n      flows: {\r\n        endpoint: getURL(endpoints.flows),\r\n        type: AssetType.Flow,\r\n        items: {}\r\n      },\r\n      fields: {\r\n        endpoint: getURL(endpoints.fields),\r\n        type: AssetType.Field,\r\n        id: 'key',\r\n        items: {}\r\n      },\r\n      globals: {\r\n        endpoint: getURL(endpoints.globals),\r\n        type: AssetType.Global,\r\n        id: 'key',\r\n        items: {}\r\n      },\r\n      groups: {\r\n        endpoint: getURL(endpoints.groups),\r\n        type: AssetType.Group,\r\n        items: {}\r\n      },\r\n      revisions: {\r\n        endpoint: getURL(endpoints.revisions),\r\n        type: AssetType.Revision,\r\n        id: 'id',\r\n        items: {}\r\n      },\r\n      labels: {\r\n        endpoint: getURL(endpoints.labels),\r\n        type: AssetType.Label,\r\n        items: {}\r\n      },\r\n      results: {\r\n        type: AssetType.Result,\r\n        items: {}\r\n      },\r\n      recipients: {\r\n        endpoint: getURL(endpoints.recipients),\r\n        type: AssetType.Contact || AssetType.Group || AssetType.URN,\r\n        items: {},\r\n        id: 'id'\r\n      },\r\n      resthooks: {\r\n        endpoint: getURL(endpoints.resthooks),\r\n        type: AssetType.Resthook,\r\n        id: 'resthook',\r\n        items: {}\r\n      },\r\n      templates: {\r\n        endpoint: getURL(endpoints.templates),\r\n        type: AssetType.Template,\r\n        items: {}\r\n      },\r\n      ticketers: {\r\n        endpoint: getURL(endpoints.ticketers),\r\n        type: AssetType.Ticketer,\r\n        items: {}\r\n      },\r\n      currencies: {\r\n        type: AssetType.Currency,\r\n        id: 'id',\r\n        items: currencies,\r\n        prefetched: true\r\n      }\r\n    };\r\n\r\n    // prefetch some of our assets\r\n    const fetches: any[] = [];\r\n    ['languages', 'fields', 'groups', 'labels', 'globals', 'classifiers'].forEach(\r\n      (storeId: string) => {\r\n        const store = assetStore[storeId];\r\n        fetches.push(\r\n          getAssets(store.endpoint, store.type, store.id || 'uuid').then((assets: Asset[]) => {\r\n            store.items = assetListToMap(assets);\r\n            store.prefetched = true;\r\n          })\r\n        );\r\n      }\r\n    );\r\n\r\n    // wait for our prefetches to finish\r\n    Promise.all(fetches).then((results: any) => {\r\n      resolve(assetStore);\r\n    });\r\n  });\r\n};\r\n\r\nexport const getFunctions = (endpoint: string): Promise<CompletionOption[]> => {\r\n  return new Promise<CompletionOption[]>((resolve, reject) => {\r\n    axios\r\n      .get(endpoint)\r\n      .then(response => {\r\n        resolve(response.data);\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n};\r\n\r\nexport const getCompletionSchema = (endpoint: string): Promise<CompletionSchema> => {\r\n  return new Promise<CompletionSchema>((resolve, reject) => {\r\n    axios.get(endpoint).then(response => {\r\n      resolve(response.data);\r\n    });\r\n  });\r\n};\r\n\r\nexport const getFlowDetails = (revisions: Assets, id: string = null): Promise<FlowDetails> => {\r\n  return new Promise<FlowDetails>((resolve, reject) => {\r\n    (async () => {\r\n      let revisionToLoad = id;\r\n      if (!revisionToLoad) {\r\n        try {\r\n          const response = await axios.get(`${revisions.endpoint}?version=${SPEC_VERSION}`);\r\n          if (response.data.results.length > 0) {\r\n            revisionToLoad = response.data.results[0].id;\r\n          }\r\n        } catch (error) {\r\n          reject(new Error(\"Couldn't reach revisions endpoint\"));\r\n        }\r\n      }\r\n\r\n      if (revisionToLoad) {\r\n        const url = `${revisions.endpoint}${revisionToLoad}?version=${SPEC_VERSION}`;\r\n        axios\r\n          .get(url)\r\n          .then((response: AxiosResponse) => {\r\n            const details = response.data as FlowDetails;\r\n            return resolve(details);\r\n          })\r\n          .catch(error => reject(error));\r\n      } else {\r\n        reject(new Error('No revision found for flow'));\r\n      }\r\n    })();\r\n  });\r\n};\r\n\r\nexport const getBaseURL = (): string => {\r\n  const location = window.location;\r\n  return location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\r\n};\r\n\r\nexport const getURL = (path: string): string => {\r\n  let url = path;\r\n  if (!url.endsWith('/') && url.indexOf('?') === -1 && url.indexOf('groups') === -1) {\r\n    url += '/';\r\n  }\r\n\r\n  if (url.startsWith('http://') || url.startsWith('https://')) {\r\n    return url;\r\n  }\r\n\r\n  // Set url for netlify deployments\r\n  // if (process.env.NODE_ENV === \"preview\") {\r\n  // url = \"/.netlify/functions/\" + url;\r\n  // }\r\n\r\n  const result = `${getBaseURL() + url}`;\r\n  return result;\r\n};\r\n\r\nexport const showHelpArticle = (link: string) => {\r\n  window.open(link, 'floweditor_help');\r\n};\r\n","import { Contact, Endpoints, Group, RecipientsAction, FlowIssue, FlowIssueType } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { Asset, AssetType } from 'store/flowContext';\r\nimport { FormEntry, NodeEditorSettings, ValidationFailure } from 'store/nodeEditor';\r\nimport { createUUID } from 'utils';\r\nimport { Trans } from 'react-i18next';\r\nimport shared from 'components/shared.module.scss';\r\nimport { showHelpArticle } from 'external';\r\nimport { IssueProps } from '../props';\r\n\r\nexport const renderIssues = (issueProps: IssueProps): JSX.Element => {\r\n  const { issues, helpArticles } = issueProps;\r\n  if (!issues || issues.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '10px 0px' }}>\r\n      {issues.map((issue: FlowIssue, num: Number) => {\r\n        const key = issue.node_uuid + issue.action_uuid + num;\r\n        return (\r\n          <div\r\n            style={{ margin: '6px 0px', display: 'flex', fontSize: '14px', color: 'tomato' }}\r\n            key={key}\r\n          >\r\n            <div\r\n              style={{ marginRight: '8px', marginTop: '-2px', fontSize: '18px' }}\r\n              className={`fe-warning`}\r\n            />\r\n            <div>{renderIssue(issue, helpArticles)}</div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderIssue = (\r\n  issue: FlowIssue,\r\n  helpArticles: { [key: string]: string } = {}\r\n): JSX.Element => {\r\n  // worst case, defer to the default description\r\n  let message: JSX.Element = <>{issue.description}</>;\r\n\r\n  if (issue.type === FlowIssueType.MISSING_DEPENDENCY) {\r\n    message = (\r\n      <Trans\r\n        i18nKey=\"issues.missing_dependency\"\r\n        values={{\r\n          name: issue.dependency.name || issue.dependency.key,\r\n          type: issue.dependency.type\r\n        }}\r\n      >\r\n        Cannot find a [[type]] for <span className=\"emphasize\">[[name]]</span>\r\n      </Trans>\r\n    );\r\n  }\r\n\r\n  if (issue.type === FlowIssueType.INVALID_REGEX) {\r\n    message = (\r\n      <Trans i18nKey=\"issues.legacy_extra\" values={{ regex: issue.regex }}>\r\n        Invalid regular expression found: [[regex]]\r\n      </Trans>\r\n    );\r\n  }\r\n\r\n  if (issue.type === FlowIssueType.LEGACY_EXTRA) {\r\n    message = (\r\n      <Trans i18nKey=\"issues.legacy_extra\">Expressions should not reference @legacy_extra</Trans>\r\n    );\r\n  }\r\n\r\n  const article = helpArticles[issue.type];\r\n  if (article) {\r\n    return (\r\n      <div\r\n        className={shared.issue_help}\r\n        onClick={() => {\r\n          showHelpArticle(article);\r\n        }}\r\n      >\r\n        {message}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return message;\r\n};\r\n\r\nexport const getActionUUID = (nodeSettings: NodeEditorSettings, currentType: string): string => {\r\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type === currentType) {\r\n    return nodeSettings.originalAction.uuid;\r\n  }\r\n  return createUUID();\r\n};\r\n\r\nexport const getRecipients = (action: RecipientsAction): Asset[] => {\r\n  let selected: any[] = (action.groups || []).map((group: Group) => {\r\n    return {\r\n      id: group.uuid,\r\n      name: group.name,\r\n      type: AssetType.Group\r\n    };\r\n  });\r\n\r\n  selected = selected.concat(\r\n    (action.contacts || []).map((contact: Contact) => {\r\n      return { id: contact.uuid, name: contact.name, type: AssetType.Contact, missing: false };\r\n    })\r\n  );\r\n\r\n  selected = selected.concat(\r\n    (action.legacy_vars || []).map((expression: string) => {\r\n      return { id: expression, name: expression, type: AssetType.Expression, missing: false };\r\n    })\r\n  );\r\n\r\n  return selected;\r\n};\r\n\r\nexport const renderAssetList = (\r\n  assets: Asset[],\r\n  max: number = 10,\r\n  endpoints: Endpoints\r\n): JSX.Element[] => {\r\n  // show our missing ones first\r\n  return assets.reduce((elements, asset, idx) => {\r\n    if (idx <= max - 2 || assets.length === max) {\r\n      elements.push(renderAsset(asset, endpoints));\r\n    } else if (idx === max - 1) {\r\n      elements.push(<div key=\"ellipses\">+{assets.length - max + 1} more</div>);\r\n    }\r\n    return elements;\r\n  }, []);\r\n};\r\n\r\nexport const renderAsset = (asset: Asset, endpoints: Endpoints) => {\r\n  let assetBody = null;\r\n\r\n  switch (asset.type) {\r\n    case AssetType.Classifier:\r\n      assetBody = (\r\n        <Trans i18nKey=\"assets.classifier\" values={{ name: asset.name }}>\r\n          Call [[name]] classifier\r\n        </Trans>\r\n      );\r\n      break;\r\n    case AssetType.Group:\r\n      assetBody = (\r\n        <>\r\n          <span className={`${shared.node_group} fe-group`} />\r\n          {asset.name}\r\n        </>\r\n      );\r\n      break;\r\n    case AssetType.Label:\r\n      assetBody = (\r\n        <>\r\n          <span className={`${shared.node_label} fe-label`} />\r\n          {asset.name}\r\n        </>\r\n      );\r\n      break;\r\n    case AssetType.Flow:\r\n      assetBody = (\r\n        <>\r\n          <span className={`${shared.node_label} fe-split`} />\r\n          <a\r\n            onMouseDown={(e: any) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n            }}\r\n            onMouseUp={(e: any) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n            }}\r\n            href={`${endpoints.editor}/${asset.id}`}\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            {asset.name}\r\n          </a>\r\n        </>\r\n      );\r\n      break;\r\n    case AssetType.Ticketer:\r\n      assetBody = (\r\n        <Trans i18nKey=\"assets.ticketer\" values={{ name: asset.name }}>\r\n          Using [[name]] service\r\n        </Trans>\r\n      );\r\n      break;\r\n  }\r\n\r\n  if (!assetBody) {\r\n    assetBody = asset.name;\r\n  }\r\n\r\n  return (\r\n    <div className={`${shared.node_asset}`} key={asset.id}>\r\n      {assetBody}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getAllErrors = (entry: FormEntry): ValidationFailure[] => {\r\n  return entry ? entry.validationFailures || [] : [];\r\n};\r\n\r\nexport const hasErrors = (entry: FormEntry): boolean => {\r\n  return getAllErrors(entry).length > 0;\r\n};\r\n\r\nexport const getExpressions = (assets: Asset[]): any[] => {\r\n  return assets\r\n    .filter((asset: Asset) => asset.type === AssetType.Expression)\r\n    .map((asset: Asset) => {\r\n      return asset.id;\r\n    });\r\n};\r\n\r\nexport const getRecipientsByAsset = (assets: Asset[], type: AssetType): any[] => {\r\n  return assets\r\n    .filter((asset: Asset) => asset.type === type)\r\n    .map((asset: Asset) => {\r\n      return { uuid: asset.id, name: asset.name };\r\n    });\r\n};\r\n","import { Type } from 'config/interfaces';\r\nimport { AnyAction, ContactProperties, FlowIssue } from 'flowTypes';\r\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\nimport { DispatchWithState, GetState } from 'store/thunks';\r\nimport { titleCase } from 'utils';\r\nimport { CompletionSchema } from 'utils/completion';\r\n\r\nexport interface IssueProps {\r\n  helpArticles: { [key: string]: string };\r\n  issues: FlowIssue[];\r\n}\r\n\r\nexport interface ActionFormProps extends IssueProps {\r\n  // action details\r\n  nodeSettings: NodeEditorSettings;\r\n  typeConfig: Type;\r\n  assetStore: AssetStore;\r\n  completionSchema: CompletionSchema;\r\n\r\n  addAsset(assetType: string, asset: Asset): void;\r\n\r\n  // update handlers\r\n  updateAction(\r\n    action: AnyAction,\r\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\r\n  ): void;\r\n\r\n  // modal notifiers\r\n  onTypeChange(config: Type): void;\r\n  onClose(canceled: boolean): void;\r\n}\r\n\r\nexport interface RouterFormProps extends IssueProps {\r\n  nodeSettings: NodeEditorSettings;\r\n  typeConfig: Type;\r\n\r\n  assetStore: AssetStore;\r\n\r\n  // update handlers\r\n  updateRouter(renderNode: RenderNode): void;\r\n\r\n  // modal notifiers\r\n  onTypeChange(config: Type): void;\r\n  onClose(canceled: boolean): void;\r\n}\r\n\r\nexport interface LocalizationFormProps extends IssueProps {\r\n  language: Asset;\r\n  nodeSettings: NodeEditorSettings;\r\n  updateLocalizations(languageCode: string, localizations: any[]): void;\r\n  onClose(canceled: boolean): void;\r\n  helpArticles: { [key: string]: string };\r\n}\r\n\r\nexport const NAME_PROPERTY: Asset = {\r\n  name: titleCase(ContactProperties.Name),\r\n  id: ContactProperties.Name,\r\n  type: AssetType.ContactProperty\r\n};\r\n\r\nexport const CHANNEL_PROPERTY: Asset = {\r\n  name: titleCase(ContactProperties.Channel),\r\n  id: ContactProperties.Channel,\r\n  type: AssetType.ContactProperty\r\n};\r\n\r\nexport const LANGUAGE_PROPERTY: Asset = {\r\n  name: titleCase(ContactProperties.Language),\r\n  id: ContactProperties.Language,\r\n  type: AssetType.ContactProperty\r\n};\r\n\r\nexport const STATUS_PROPERTY: Asset = {\r\n  name: titleCase(ContactProperties.Status),\r\n  id: ContactProperties.Status,\r\n  type: AssetType.ContactProperty\r\n};\r\n","import { FlowEditorConfig } from 'flowTypes';\r\nimport * as React from 'react';\r\n\r\nexport const fakePropType: any = (): any => null;\r\nfakePropType.isRequired = (): any => null;\r\n\r\ninterface ConfigProviderProps {\r\n  config: FlowEditorConfig;\r\n  children: any;\r\n}\r\n\r\nexport interface ConfigProviderContext {\r\n  config: FlowEditorConfig;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------\r\n\r\nexport const SINGLE_CHILD_ERROR = 'ConfigProvider expects only one child component.';\r\nexport const VALID_CHILD_ERROR =\r\n  'ConfigProvider expects a valid React element: https://reactjs.org/docs/react-api.html#isvalidelement';\r\n\r\nexport default class ConfigProvider extends React.Component<ConfigProviderProps> {\r\n  public static childContextTypes = {\r\n    config: fakePropType,\r\n    assetService: fakePropType\r\n  };\r\n\r\n  constructor(props: ConfigProviderProps) {\r\n    super(props);\r\n\r\n    if (React.Children.count(props.children) > 1) {\r\n      throw new Error(SINGLE_CHILD_ERROR);\r\n    } else if (!React.isValidElement(props.children)) {\r\n      throw new Error(VALID_CHILD_ERROR);\r\n    }\r\n  }\r\n\r\n  public getChildContext(): ConfigProviderContext {\r\n    return {\r\n      config: this.props.config\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return React.Children.only(this.props.children);\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { renderAssetList } from 'components/flow/actions/helpers';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { AddLabels } from 'flowTypes';\r\nimport { AssetType } from 'store/flowContext';\r\n\r\nexport const MAX_TO_SHOW = 5;\r\n\r\nconst AddLabelsComp: React.SFC<AddLabels> = ({ labels }, context: any): JSX.Element => {\r\n  return (\r\n    <>\r\n      {renderAssetList(\r\n        labels.map(label => {\r\n          return {\r\n            id: label.uuid,\r\n            name: label.name,\r\n            type: AssetType.Label\r\n          };\r\n        }),\r\n        MAX_TO_SHOW,\r\n        context.config.endpoints\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAddLabelsComp.contextTypes = {\r\n  config: fakePropType\r\n};\r\n\r\nexport default AddLabelsComp;\r\n","import { Template } from 'flowTypes';\r\nimport { Asset } from 'store/flowContext';\r\n\r\n/**\r\n * Sorts all search results by name\r\n */\r\nexport const sortByName = (a: Asset, b: Asset): number => {\r\n  if (a.type !== b.type) {\r\n    return b.type.localeCompare(a.type);\r\n  }\r\n\r\n  return a.name.localeCompare(b.name);\r\n};\r\n\r\nexport const hasPendingTranslation = (template: Template) => {\r\n  return !!template.translations.find(translation => translation.status === 'pending');\r\n};\r\n\r\nexport const hasUseableTranslation = (template: Template) => {\r\n  return !!template.translations.find(\r\n    translation => translation.status === 'pending' || translation.status === 'approved'\r\n  );\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport classNames from 'classnames/bind';\r\nimport * as React from 'react';\r\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\r\nimport { renderIf } from 'utils';\r\n\r\nimport styles from './FormElement.module.scss';\r\nimport { hasErrors } from 'components/flow/actions/helpers';\r\n\r\nconst cx: any = classNames.bind(styles);\r\n\r\nexport interface FormElementProps {\r\n  name: string;\r\n  helpText?: string | JSX.Element;\r\n  entry?: FormEntry;\r\n  showLabel?: boolean;\r\n  __className?: string;\r\n  border?: boolean;\r\n  sendMsgError?: boolean;\r\n  kaseError?: boolean;\r\n  attribError?: boolean;\r\n  hideError?: boolean;\r\n}\r\n\r\nexport default class FormElement extends React.PureComponent<FormElementProps> {\r\n  constructor(props: FormElementProps) {\r\n    super(props);\r\n    bindCallbacks(this, {\r\n      include: [/^get/, /^has/]\r\n    });\r\n  }\r\n  private getName(): JSX.Element {\r\n    return renderIf(\r\n      this.props.showLabel &&\r\n        this.props.name !== undefined &&\r\n        this.props.name !== null &&\r\n        this.props.name.length > 0\r\n    )(<div className={styles.label}>{this.props.name}</div>);\r\n  }\r\n\r\n  private getHelpText(): JSX.Element {\r\n    return renderIf(this.props.helpText != null)(\r\n      <div className={styles.help_text}>{this.props.helpText} </div>\r\n    );\r\n  }\r\n\r\n  private hasErrors(): boolean {\r\n    return hasErrors(this.props.entry);\r\n  }\r\n\r\n  private getValidationErrors(): ValidationFailure[] {\r\n    if (this.props.entry) {\r\n      return this.props.entry.validationFailures || [];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private getErrors(): JSX.Element {\r\n    if (this.hasErrors() && !this.props.hideError) {\r\n      const errors = this.getValidationErrors().map((failure, idx) => {\r\n        const className = cx({\r\n          [styles.error]: true,\r\n          [styles.send_msg_error]: this.props.sendMsgError === true\r\n        });\r\n        return (\r\n          <div key={idx} className={className}>\r\n            <div className={styles.arrow_up} />\r\n            <div>{failure.message}</div>\r\n          </div>\r\n        );\r\n      });\r\n      return <div className={styles.error_list}>{errors}</div>;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const name: JSX.Element = this.getName();\r\n    const helpText: JSX.Element = this.getHelpText();\r\n    const errorsToDisplay: JSX.Element = this.getErrors();\r\n\r\n    const className = cx({\r\n      [styles.ele]: true,\r\n      [styles.border]: this.props.border,\r\n      [styles.invalid]: this.hasErrors(),\r\n      [this.props.__className]: this.props.__className !== undefined\r\n    });\r\n\r\n    return (\r\n      <div className={className}>\r\n        {name}\r\n        {this.props.children}\r\n        {helpText}\r\n        {errorsToDisplay}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { StylesConfig } from 'react-select';\r\n\r\nexport const large = {\r\n  placeholder: (styles: StylesConfig, state: any) => {\r\n    return { ...styles, color: '#ddd', marginLeft: '3px' };\r\n  },\r\n  singleValue: (styles: StylesConfig, state: any) => {\r\n    return { ...styles, marginLeft: '3px' };\r\n  },\r\n  multiValue: (styles: StylesConfig, state: any) => {\r\n    return { ...styles, marginLeft: '0px' };\r\n  },\r\n  input: (styles: StylesConfig, state: any) => {\r\n    return {\r\n      ...styles,\r\n      marginLeft: '0px',\r\n      caretColor: '#999',\r\n      marginBottom: '0px',\r\n      boxShadow: 'none',\r\n      border: 'none',\r\n      fontSize: '13px'\r\n    };\r\n  },\r\n  control: (styles: StylesConfig, state: any) => {\r\n    return {\r\n      ...styles,\r\n      borderColor: '#e6e6e6',\r\n      boxShadow: 'none',\r\n      fontSize: '13px',\r\n      transition: 'all 0.3s ease-in-out',\r\n      '&:hover': {\r\n        borderColor: '#e6e6e6'\r\n      },\r\n      '&:focus-within': {\r\n        boxShadow: 'var(--widget-box-shadow-focused) !important',\r\n        border: '1px solid #a4cafe !important'\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport const messageStyle = {\r\n  control: (styles: StylesConfig, state: any) => {\r\n    return {\r\n      ...styles,\r\n      borderColor: '#e6e6e6',\r\n      boxShadow: 'none',\r\n      borderBottom: 'none',\r\n      borderBottomRightRadius: '0px',\r\n      borderBottomLeftRadius: '0px',\r\n      '&:hover': {\r\n        borderColor: '#e6e6e6'\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport const getErroredSelect = (baseControl: any): any => {\r\n  return {\r\n    control: (styles: StylesConfig) => ({\r\n      ...styles,\r\n      ...baseControl,\r\n      borderColor: 'tomato',\r\n      boxShadow: '0 0 0 3px rgba(255,196,186,0.5) !important;',\r\n      '&:hover': {\r\n        borderColor: 'tomato'\r\n      }\r\n    })\r\n  };\r\n};\r\n\r\nexport const small = {\r\n  control: (styles: StylesConfig) => ({\r\n    ...styles,\r\n    borderColor: '#e6e6e6',\r\n    boxShadow: 'none',\r\n    '&:hover': {\r\n      borderColor: '#e6e6e6'\r\n    },\r\n    maxHeight: '28px',\r\n    minHeight: '28px',\r\n    fontSize: '12px',\r\n    lineHeight: '12px',\r\n    marginBottom: '-10px',\r\n    '&:focus-within': {\r\n      boxShadow: 'var(--widget-box-shadow-focused) !important',\r\n      border: '1px solid #a4cafe !important'\r\n    }\r\n  }),\r\n  menuList: (styles: StylesConfig) => ({\r\n    ...styles,\r\n    maxHeight: 200\r\n  }),\r\n  option: (styles: StylesConfig) => ({\r\n    ...styles,\r\n    fontSize: 12\r\n  }),\r\n  singleValue: (styles: StylesConfig) => ({\r\n    ...styles,\r\n    maxHeight: 28,\r\n    lineHeight: '13px'\r\n  }),\r\n  indicatorsContainer: (styles: StylesConfig) => ({\r\n    ...styles,\r\n    height: 28,\r\n    maxHeight: 28\r\n  }),\r\n  valueContainer: (styles: StylesConfig) => ({\r\n    ...styles,\r\n    height: 28,\r\n    maxHeight: 28\r\n  }),\r\n  input: (styles: StylesConfig) => ({\r\n    ...styles,\r\n    marginLeft: '-2px',\r\n    marginTop: '0px',\r\n    caretColor: '#999',\r\n    boxShadow: 'none',\r\n    border: 'none',\r\n    maxHeight: '20px',\r\n    minHeight: '20px',\r\n    lineHeight: '12px'\r\n  })\r\n};\r\n\r\nexport const tagging = {\r\n  control: (styles: StylesConfig, state: any) => {\r\n    return {\r\n      ...styles,\r\n      borderColor: '#e6e6e6',\r\n      boxShadow: 'none',\r\n      transition: 'all 0.3s ease-in-out',\r\n      '&:hover': {\r\n        borderColor: '#e6e6e6'\r\n      },\r\n      '&:focus-within': {\r\n        boxShadow: 'var(--widget-box-shadow-focused) !important',\r\n        border: '1px solid #a4cafe !important'\r\n      }\r\n    };\r\n  },\r\n  input: (styles: StylesConfig, state: any) => {\r\n    return {\r\n      ...styles,\r\n      marginLeft: '0px',\r\n      caretColor: '#999',\r\n      marginBottom: '0px',\r\n      boxShadow: 'none',\r\n      border: 'none'\r\n    };\r\n  },\r\n  multiValue: (styles: StylesConfig) => {\r\n    return {\r\n      ...styles,\r\n      maxHeight: 24,\r\n      minHeight: 24,\r\n      lineHeight: '17px',\r\n      backgroundColor: 'hsl(0, 0%, 94%)',\r\n      border: '1px solid hsl(0, 0%, 85%)'\r\n    };\r\n  }\r\n};\r\n","import { AssetStore, CompletionOption } from 'store/flowContext';\r\n\r\nexport interface CompletionAssets {\r\n  assetStore: AssetStore;\r\n  schema: CompletionSchema;\r\n}\r\n\r\nexport interface CompletionProperty {\r\n  key: string;\r\n  help: string;\r\n  type: string;\r\n}\r\n\r\nexport interface CompletionType {\r\n  name: string;\r\n\r\n  key_source?: string;\r\n  property_template?: CompletionProperty;\r\n  properties?: CompletionProperty[];\r\n}\r\n\r\nexport interface CompletionSchema {\r\n  types: CompletionType[];\r\n  root: CompletionProperty[];\r\n}\r\n\r\nexport const getFunctions = (functions: CompletionOption[], query: string): CompletionOption[] => {\r\n  return functions.filter((option: CompletionOption) => {\r\n    if (option.signature) {\r\n      return option.signature.indexOf((query || '').toLowerCase()) === 0;\r\n    }\r\n    return false;\r\n  });\r\n};\r\n\r\n/**\r\n * Takes a dot query and returns the completions options at the current level\r\n * @param dotQuery query such as \"results.field_name.ca\"\r\n */\r\nexport const getCompletions = (\r\n  completion: CompletionAssets,\r\n  dotQuery: string\r\n): CompletionOption[] => {\r\n  const parts = (dotQuery || '').split('.');\r\n  let currentProps: CompletionProperty[] = completion.schema.root;\r\n\r\n  let prefix = '';\r\n  let part = '';\r\n  while (parts.length > 0) {\r\n    part = parts.shift();\r\n    if (part) {\r\n      // eslint-disable-next-line\r\n      const nextProp = currentProps.find((prop: CompletionProperty) => prop.key === part);\r\n      if (nextProp) {\r\n        // eslint-disable-next-line\r\n        const nextType = completion.schema.types.find(\r\n          (type: CompletionType) => type.name === nextProp.type\r\n        );\r\n        if (nextType && nextType.properties) {\r\n          currentProps = nextType.properties;\r\n          prefix += part + '.';\r\n        } else if (nextType && nextType.property_template) {\r\n          prefix += part + '.';\r\n          const template = nextType.property_template;\r\n\r\n          const assetStore = completion.assetStore[nextType.name];\r\n          currentProps = assetStore\r\n            ? Object.keys(assetStore.items).map((key: string) => ({\r\n                key: template.key.replace('{key}', key),\r\n                help: template.help.replace('{key}', key),\r\n                type: template.type\r\n              }))\r\n            : [];\r\n        } else {\r\n          // if not type found, hide completion\r\n          currentProps = [];\r\n          break;\r\n        }\r\n      } else {\r\n        // eslint-disable-next-line\r\n        currentProps = currentProps.filter((prop: CompletionProperty) =>\r\n          prop.key.startsWith(part.toLowerCase())\r\n        );\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return currentProps.map((prop: CompletionProperty) => {\r\n    const name =\r\n      prop.key === '__default__' ? prefix.substr(0, prefix.length - 1) : prefix + prop.key;\r\n    return { name, summary: prop.help };\r\n  });\r\n};\r\n\r\nexport const getCompletionName = (option: CompletionOption): string => {\r\n  return option.name || option.signature.substr(0, option.signature.indexOf('('));\r\n};\r\n\r\nexport const getCompletionSignature = (option: CompletionOption): string => {\r\n  return option.signature.substr(option.signature.indexOf('('));\r\n};\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\n// TODO: consider chunking out translation files\r\n// and using something like XHR backend to lazily\r\n// load only the required language.\r\n// See https://www.i18next.com/how-to/add-or-load-translations\r\n\r\nimport defaults from './defaults.json';\r\nimport en from './en/resource.json';\r\nimport es from './es/resource.json';\r\nimport pt from './pt-br/resource.json';\r\n\r\nconst resources = {\r\n  defaults: { translation: defaults },\r\n  en: { translation: en },\r\n  es: { translation: es },\r\n  pt: { translation: pt }\r\n};\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources,\r\n\r\n    // do not load a fallback\r\n    fallbackLng: ['en', 'defaults'],\r\n\r\n    interpolation: {\r\n      prefix: '[[',\r\n      suffix: ']]'\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\nimport { bool, snakify } from 'utils';\r\nimport styles from './TembaSelect.module.scss';\r\n\r\nexport enum TembaSelectStyle {\r\n  small = 'small',\r\n  normal = 'normal'\r\n}\r\n\r\nexport interface TembaSelectProps {\r\n  name: string;\r\n  options: any[];\r\n  value: any;\r\n  onChange: (option: any) => void;\r\n\r\n  error?: boolean;\r\n  style?: TembaSelectStyle;\r\n\r\n  placeholder?: string;\r\n  searchable?: boolean;\r\n  multi?: boolean;\r\n\r\n  nameKey?: string;\r\n  valueKey?: string;\r\n}\r\n\r\ninterface TembaSelectState {}\r\n\r\nexport default class TembaSelect extends React.Component<TembaSelectProps, TembaSelectState> {\r\n  private selectbox: HTMLElement;\r\n\r\n  constructor(props: TembaSelectProps) {\r\n    super(props);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public getName(option: any): string {\r\n    if (this.props.nameKey in option) {\r\n      return option[this.props.nameKey];\r\n    }\r\n\r\n    if ('label' in option) {\r\n      return option['label'];\r\n    }\r\n\r\n    return option['name'];\r\n  }\r\n\r\n  public getValue(option: any): string {\r\n    return option[this.props.valueKey || 'value'];\r\n  }\r\n\r\n  public isMatch(a: any, b: any): boolean {\r\n    if (a && b) {\r\n      if (Array.isArray(a)) {\r\n        return a.find((option: any) => this.getValue(option) === this.getValue(b));\r\n      } else {\r\n        return this.getValue(a) === this.getValue(b);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.selectbox.addEventListener('change', (event: any) => {\r\n      const values = event.target.values || [event.target.value];\r\n      const resolved = values.map((op: any) => {\r\n        return this.props.options.find((option: any) => this.getValue(option) === op.value);\r\n      });\r\n\r\n      resolved.forEach((option: any) => {\r\n        if (!option) {\r\n          throw new Error('No option found for selection');\r\n        }\r\n      });\r\n\r\n      if (this.props.multi) {\r\n        this.props.onChange(resolved);\r\n      } else {\r\n        this.props.onChange(resolved[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getOption(item: any): any {\r\n    const value = this.getValue(item);\r\n    const name = this.getName(item);\r\n    return { name, value };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const options = JSON.stringify(\r\n      this.props.options.map((option: any) => {\r\n        return this.getOption(option);\r\n      })\r\n    );\r\n\r\n    const values = this.props.value ? JSON.stringify([this.getOption(this.props.value)]) : '[]';\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          styles[this.props.style || TembaSelectStyle.normal] +\r\n          ' ' +\r\n          (this.props.error ? styles.error : '')\r\n        }\r\n      >\r\n        <temba-select\r\n          name={this.props.name}\r\n          data-testid={`temba_select_${snakify(this.props.name)}`}\r\n          ref={(ele: any) => {\r\n            this.selectbox = ele;\r\n          }}\r\n          options={options}\r\n          values={values}\r\n          placeholder={this.props.placeholder}\r\n          searchable={bool(this.props.searchable)}\r\n          multi={bool(this.props.multi)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport { hasErrors } from 'components/flow/actions/helpers';\r\nimport { sortByName } from 'components/form/assetselector/helpers';\r\nimport { getIconForAssetType } from 'components/form/assetselector/widgets';\r\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\r\nimport { getAssets, isMatch, postNewAsset, searchAssetMap } from 'external';\r\nimport * as React from 'react';\r\nimport { Asset, Assets, AssetType, CompletionOption, REMOVE_VALUE_ASSET } from 'store/flowContext';\r\nimport { AssetEntry } from 'store/nodeEditor';\r\nimport { uniqueBy } from 'utils';\r\nimport { getErroredSelect as getErroredControl, large, messageStyle } from 'utils/reactselect';\r\n\r\nimport styles from './AssetSelector.module.scss';\r\nimport { getCompletions, CompletionAssets } from 'utils/completion';\r\nimport i18n from 'config/i18n';\r\nimport { OptionProps, OptionsType, ValueType, StylesConfig, components } from 'react-select';\r\nimport Creatable from 'react-select/creatable';\r\nimport AsyncSelect from 'react-select/async';\r\n\r\ntype CallbackFunction = (options: OptionsType<Asset>) => void;\r\n\r\nconst AssetOption = (props: OptionProps<Asset>) => {\r\n  const asset = (props as any).data as Asset;\r\n\r\n  const prefix = '';\r\n  let suffix = '';\r\n  if (asset.type === AssetType.Currency) {\r\n    suffix = ` (${asset.id})`;\r\n  }\r\n\r\n  // TODO: add styling for different asset types\r\n  return !props.isDisabled && components ? (\r\n    <div ref={props.innerRef} {...props.innerProps}>\r\n      <components.Option {...props}>\r\n        {prefix}\r\n        {getIconForAssetType(asset)} {asset.name}\r\n        {suffix}\r\n      </components.Option>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport interface AssetSelectorProps extends FormElementProps {\r\n  assets: Assets;\r\n  onChange: (selected: Asset[]) => void;\r\n\r\n  // a function to exclude assets when matching\r\n  shouldExclude?: (asset: Asset) => boolean;\r\n\r\n  // more options to consider when searching\r\n  additionalOptions?: Asset[];\r\n\r\n  // add custom styling\r\n  styles?: StylesConfig;\r\n\r\n  placeholder?: string;\r\n  searchable?: boolean;\r\n\r\n  // do we give the clearing option (trash)\r\n  valueClearable?: boolean;\r\n\r\n  // do we present an x to clear the form\r\n  formClearable?: boolean;\r\n\r\n  onFilter?: (asset: Asset) => boolean;\r\n\r\n  // creation options\r\n  createPrefix?: string;\r\n  onAssetCreated?: (asset: Asset) => void;\r\n  createAssetFromInput?: (input: string) => Asset;\r\n\r\n  // supports multiple selection\r\n  multi?: boolean;\r\n\r\n  // overrids default message when no options to show\r\n  noOptionsMessage?: string;\r\n\r\n  // override default sorting function\r\n  sortFunction?(a: Asset, b: Asset): number;\r\n\r\n  // completion options\r\n  completion?: CompletionAssets;\r\n}\r\n\r\ninterface AssetSelectorState {\r\n  defaultOptions: Asset[];\r\n  entry: AssetEntry;\r\n  isLoading: boolean;\r\n  menuOpen: boolean;\r\n  message?: string;\r\n}\r\n\r\nexport default class AssetSelector extends React.Component<AssetSelectorProps, AssetSelectorState> {\r\n  private lastCreation: number = 0;\r\n\r\n  constructor(props: AssetSelectorProps) {\r\n    super(props);\r\n    bindCallbacks(this, {\r\n      include: [/^is/, /^handle/, /^get/]\r\n    });\r\n\r\n    let defaultOptions: Asset[] = [];\r\n\r\n    // or it should be a list of local assets from an empty search\r\n    if (!props.assets.endpoint) {\r\n      defaultOptions = searchAssetMap('', props.assets.items);\r\n    }\r\n\r\n    this.state = {\r\n      menuOpen: false,\r\n      defaultOptions,\r\n      entry: this.props.entry,\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  public static getDerivedStateFromProps(\r\n    nextProps: AssetSelectorProps,\r\n    prevState: AssetSelectorState\r\n  ): Partial<AssetSelectorState> {\r\n    // the default options should be true if there is an endpoint\r\n    let entry = nextProps.entry;\r\n\r\n    // if we don't know our entry name, look for it\r\n    if (prevState.defaultOptions && entry.value && !entry.value.name) {\r\n      const existing = prevState.defaultOptions.find((asset: Asset) => asset.id === entry.value.id);\r\n      if (existing) {\r\n        entry = { value: existing };\r\n      }\r\n    }\r\n\r\n    return { entry };\r\n  }\r\n\r\n  private handleChanged(selected: any): void {\r\n    this.setState({ message: null });\r\n    if (Array.isArray(selected) || !selected) {\r\n      this.props.onChange(selected);\r\n    } else if (this.props.onChange) {\r\n      /* istanbul ignore else */\r\n      this.props.onChange([selected]);\r\n    }\r\n  }\r\n\r\n  public handleLoadOptions(input: string, callback: CallbackFunction): void {\r\n    let options = this.props.additionalOptions || [];\r\n\r\n    if (this.props.completion && input.startsWith('@')) {\r\n      const completions = getCompletions(this.props.completion, input.substr(1));\r\n\r\n      callback(\r\n        completions.map((option: CompletionOption) => {\r\n          return {\r\n            id: '@' + option.name,\r\n            name: '@' + option.name,\r\n            type: AssetType.Expression\r\n          };\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    let localMatches = searchAssetMap(\r\n      input,\r\n      this.props.assets.items,\r\n      options,\r\n      this.props.shouldExclude\r\n    );\r\n\r\n    const assets = this.props.assets;\r\n\r\n    // then query against our endpoint to add to that list if we weren't prefetched\r\n    if (!assets.prefetched) {\r\n      let url = assets.endpoint;\r\n      if (url && input) {\r\n        url += url.indexOf('?') < 0 ? '?' : '&';\r\n        url += 'search=' + encodeURIComponent(input);\r\n      }\r\n\r\n      getAssets(url, assets.type, assets.id || 'uuid').then((remoteAssets: Asset[]) => {\r\n        const remoteMatches = remoteAssets.filter((asset: Asset) =>\r\n          isMatch(input, asset, this.props.shouldExclude)\r\n        );\r\n\r\n        const removalAsset: Asset[] = this.props.valueClearable ? [REMOVE_VALUE_ASSET] : [];\r\n\r\n        // concat them all together and uniquify them\r\n        let matches = uniqueBy(localMatches.concat(remoteMatches).concat(removalAsset), 'id');\r\n\r\n        // if we don't know our initial name, look for it\r\n        if (this.props.entry.value && !this.props.entry.value.name) {\r\n          const existing = matches.find((asset: Asset) => asset.id === this.props.entry.value.id);\r\n          if (existing) {\r\n            this.props.onChange([existing]);\r\n          }\r\n        }\r\n\r\n        if (this.props.onFilter) {\r\n          matches = matches.filter(this.props.onFilter);\r\n        }\r\n\r\n        // sort our results and callback\r\n        callback(matches.sort(this.props.sortFunction || sortByName));\r\n      });\r\n    } else {\r\n      if (this.props.onFilter) {\r\n        localMatches = localMatches.filter(this.props.onFilter);\r\n      }\r\n      // only local matches\r\n      callback(localMatches.sort(this.props.sortFunction || sortByName));\r\n    }\r\n  }\r\n\r\n  public handleCheckValid(\r\n    input: string,\r\n    value: ValueType<Asset>,\r\n    options: OptionsType<Asset>\r\n  ): boolean {\r\n    if (!this.props.createAssetFromInput) {\r\n      return false;\r\n    }\r\n\r\n    if (input.length > 0) {\r\n      return (\r\n        searchAssetMap(\r\n          input,\r\n          this.props.assets.items,\r\n          this.props.additionalOptions,\r\n          this.props.shouldExclude\r\n        ).filter((asset: Asset) => asset.name.toLowerCase() === input.toLowerCase()).length === 0\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public handleCreatePrompt(input: string): any {\r\n    return (this.props.createPrefix || `New ${this.props.name}: `) + input;\r\n  }\r\n\r\n  public handleGetNewOptionData(inputValue: string, label: any): Asset {\r\n    return { id: '_', name: label, type: null };\r\n  }\r\n\r\n  public handleLoadingComplete(): void {\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  public handleMenuOpen(): void {\r\n    this.setState({\r\n      menuOpen: true,\r\n      message: null\r\n    });\r\n  }\r\n\r\n  public handleMenuClose(): void {\r\n    this.setState({\r\n      menuOpen: false\r\n    });\r\n  }\r\n\r\n  public handleClearMessage(): void {\r\n    if (this.state.message) {\r\n      this.setState({ message: null });\r\n    }\r\n  }\r\n\r\n  public handleCreateOption(input: string): void {\r\n    // this is a hack due to react-select triggering two creates in a race\r\n    const now = new Date().getTime();\r\n    if (now - this.lastCreation < 1000) {\r\n      return;\r\n    }\r\n\r\n    this.lastCreation = now;\r\n    // mark us as loading\r\n    const asset: Asset = this.props.createAssetFromInput(input);\r\n\r\n    if (this.props.assets.endpoint) {\r\n      this.setState({ isLoading: true, message: null });\r\n      postNewAsset(this.props.assets, asset)\r\n        .then((result: Asset) => {\r\n          this.setState({ isLoading: false });\r\n          this.props.onAssetCreated(result);\r\n          // this.props.onChange([...(this.state.entry.value as any)]);\r\n        })\r\n        .catch(error => {\r\n          let suffix = '';\r\n          if (error.response && error.response.data && error.response.data.non_field_errors) {\r\n            suffix = ' ' + error.response.data.non_field_errors.join(', ');\r\n          }\r\n          this.setState({\r\n            message: `Couldn't create new ${this.props.assets.type} \"${input}\".${suffix}`,\r\n            isLoading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.props.onChange([asset]);\r\n    }\r\n  }\r\n\r\n  private getStyle(): any {\r\n    if (this.state.message) {\r\n      return messageStyle;\r\n    }\r\n\r\n    let style = this.props.styles || large;\r\n    if (hasErrors(this.props.entry)) {\r\n      const erroredControl = getErroredControl(style.control({}, {}));\r\n      style = { ...style, ...erroredControl };\r\n    }\r\n    return style;\r\n  }\r\n\r\n  public getOptionValue(option: any) {\r\n    return option.value || option.id;\r\n  }\r\n\r\n  public getOptionLabel(option: any) {\r\n    return option.label || option.name;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const fallbackPlaceholder = i18n.t(\r\n      'asset_selector.placeholder',\r\n      'Select existing [[name]] or enter a new one',\r\n      { name: this.props.name.toLocaleLowerCase(), count: this.props.multi ? 1000 : 1 }\r\n    );\r\n\r\n    const commonAttributes = {\r\n      className: 'react-select ' + styles.selection,\r\n      captureMenuScroll: false,\r\n      value: this.state.entry.value,\r\n      components: { Option: AssetOption },\r\n      styles: this.getStyle(),\r\n      onChange: this.handleChanged,\r\n      onMenuOpen: this.handleMenuOpen,\r\n      onMenuClose: this.handleMenuClose,\r\n      onBlur: this.handleClearMessage,\r\n      menuShouldBlockScroll: true,\r\n      isMulti: this.props.multi,\r\n      isDisabled: this.state.isLoading,\r\n      isLoading: this.state.isLoading,\r\n      isClearable: this.props.formClearable,\r\n      isSearchable: this.props.searchable,\r\n      getOptionValue: this.getOptionValue,\r\n      getOptionLabel: this.getOptionLabel,\r\n      placeholder: this.props.placeholder || fallbackPlaceholder\r\n    };\r\n\r\n    if (this.props.createAssetFromInput) {\r\n      // Perform this in lieu of AsyncCreatable loadOptions\r\n      const localMatches = searchAssetMap(\r\n        '',\r\n        this.props.assets.items,\r\n        this.props.additionalOptions,\r\n        this.props.shouldExclude\r\n      );\r\n\r\n      return (\r\n        <FormElement\r\n          name={this.props.name}\r\n          entry={this.props.entry}\r\n          showLabel={this.props.showLabel}\r\n          helpText={this.props.helpText}\r\n          hideError={this.state.menuOpen}\r\n          __className={styles.ele}\r\n        >\r\n          <Creatable\r\n            {...commonAttributes}\r\n            options={localMatches.sort(this.props.sortFunction || sortByName)}\r\n            isValidNewOption={this.handleCheckValid}\r\n            formatCreateLabel={this.handleCreatePrompt}\r\n            getNewOptionData={this.handleGetNewOptionData}\r\n            onCreateOption={this.handleCreateOption}\r\n\r\n            // We are currently using Creatable since our assets are currently\r\n            // being preloaded on page load and because of isLoaded not being\r\n            // honored when set manually (this is needed to perform onCreateOption\r\n            // via call to asset endpoint with feedback). Once that fix is merged,\r\n            // we can consider using AsyncCreateable\r\n            //\r\n            // See: https://github.com/JedWatson/react-select/issues/2986\r\n            //      https://github.com/JedWatson/react-select/pull/3319\r\n            //\r\n          />\r\n          {this.state.message ? <div className={styles.message}>{this.state.message}</div> : null}\r\n        </FormElement>\r\n      );\r\n    } else {\r\n      // the default options should be true if there is an endpoint\r\n      let defaultOptions: any = this.props.assets.endpoint !== undefined;\r\n\r\n      // or it should be a list of local assets from an empty search\r\n      if (!defaultOptions) {\r\n        defaultOptions = this.state.defaultOptions;\r\n\r\n        if (this.props.shouldExclude) {\r\n          defaultOptions = searchAssetMap(\r\n            '',\r\n            this.props.assets.items,\r\n            this.props.additionalOptions,\r\n            this.props.shouldExclude\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <FormElement\r\n          name={this.props.name}\r\n          entry={this.props.entry}\r\n          showLabel={this.props.showLabel}\r\n          helpText={this.props.helpText}\r\n          hideError={this.state.menuOpen}\r\n          __className={styles.ele}\r\n        >\r\n          <AsyncSelect\r\n            {...commonAttributes}\r\n            defaultOptions={defaultOptions}\r\n            cacheOptions={true}\r\n            loadOptions={this.handleLoadOptions}\r\n            noOptionsMessage={(obj: { inputValue: string }) =>\r\n              this.props.noOptionsMessage || `No ${this.props.name} Found`\r\n            }\r\n          />\r\n          {this.state.message ? <div className={styles.message}>{this.state.message}</div> : null}\r\n        </FormElement>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { hasPendingTranslation } from 'components/form/assetselector/helpers';\r\nimport { Template } from 'flowTypes';\r\nimport { Asset, AssetType } from 'store/flowContext';\r\n\r\nexport const getIconForAssetType = (asset: Asset): JSX.Element => {\r\n  switch (asset.type) {\r\n    case AssetType.Group:\r\n      return <span className=\"fe-group\" />;\r\n    case AssetType.Label:\r\n      return <span className=\"fe-label\" />;\r\n    case AssetType.Flow:\r\n      return <span className=\"fe-split\" />;\r\n    case AssetType.Scheme:\r\n      return <span className=\"fe-connection\" />;\r\n    case AssetType.Template:\r\n      if (hasPendingTranslation(asset.content as Template)) {\r\n        return <span className=\"fe-hourglass\" />;\r\n      } else {\r\n        return <span className=\"fe-check\" />;\r\n      }\r\n    case AssetType.Remove:\r\n      return (\r\n        <>\r\n          <span className=\"fe-trash\" />\r\n          &nbsp;\r\n        </>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","import { FlowTypes, FlowTypeVisibility, ONLINE, Operator, Type } from 'config/interfaces';\r\nimport { FlowEditorConfig } from 'flowTypes';\r\n\r\nexport const isOnlineFlowType = (flowType: FlowTypes) => {\r\n  return !!ONLINE.find((type: FlowTypes) => type === flowType);\r\n};\r\n\r\nexport const filterOperators = (operators: Operator[], config: FlowEditorConfig): Operator[] => {\r\n  return filterVisibility(operators, config);\r\n};\r\n\r\nexport const filterTypeConfigs = (typeConfigs: Type[], config: FlowEditorConfig): Type[] => {\r\n  return filterVisibility(typeConfigs, config);\r\n};\r\n\r\nconst filterVisibility = (items: FlowTypeVisibility[], config: FlowEditorConfig): any[] => {\r\n  return items.filter((item: FlowTypeVisibility) => {\r\n    // if we have a filter on our type, don't return it unless its present in our config\r\n    if (item.filter) {\r\n      if (!(config.filters || []).find((name: string) => name === item.filter)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (item.visibility === undefined) {\r\n      return true;\r\n    }\r\n\r\n    return item.visibility.findIndex((ft: FlowTypes) => ft === config.flowType) > -1;\r\n  });\r\n};\r\n","import { fakePropType } from 'config/ConfigProvider';\r\nimport { filterTypeConfigs } from 'config/helpers';\r\nimport { Type } from 'config/interfaces';\r\nimport { configsToDisplay } from 'config/typeConfigs';\r\nimport * as React from 'react';\r\nimport i18n from 'config/i18n';\r\nimport styles from './TypeList.module.scss';\r\nimport TembaSelect from 'temba/TembaSelect';\r\n\r\nexport interface TypeListProps {\r\n  __className: string;\r\n  initialType: Type;\r\n  onChange(config: Type): void;\r\n}\r\n\r\nexport interface TypeListState {\r\n  config: Type;\r\n}\r\n\r\nexport default class TypeList extends React.PureComponent<TypeListProps, TypeListState> {\r\n  private typeConfigs: Type[];\r\n\r\n  constructor(props: TypeListProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      config: this.props.initialType\r\n    };\r\n\r\n    this.handleChangeType = this.handleChangeType.bind(this);\r\n  }\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  private handleChangeType(config: Type): void {\r\n    this.setState({ config }, () => this.props.onChange(config));\r\n  }\r\n\r\n  private getTypeConfigs(): Type[] {\r\n    if (this.typeConfigs === undefined) {\r\n      this.typeConfigs = filterTypeConfigs(configsToDisplay, this.context.config);\r\n    }\r\n    return this.typeConfigs;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className={`${this.props.__className} ${styles.type_list}`}>\r\n        <p>{i18n.t('forms.type_label', 'When a contact arrives at this point in your flow...')}</p>\r\n        <div>\r\n          <TembaSelect\r\n            key=\"type_select\"\r\n            name=\"type\"\r\n            onChange={this.handleChangeType}\r\n            nameKey=\"description\"\r\n            valueKey=\"type\"\r\n            value={this.state.config}\r\n            options={this.getTypeConfigs()}\r\n            searchable={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as headerUtils from 'http-headers-validation';\r\nimport { Asset } from 'store/flowContext';\r\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\r\nimport { SelectOption } from 'components/form/select/SelectElement';\r\nimport i18n from 'config/i18n';\r\n\r\nexport type FormInput =\r\n  | string\r\n  | string[]\r\n  | number\r\n  | Asset\r\n  | Asset[]\r\n  | SelectOption\r\n  | SelectOption[];\r\nexport type ValidatorFunc = (\r\n  name: string,\r\n  input: FormInput\r\n) => { failures: ValidationFailure[]; value: FormInput };\r\n\r\n// Courtesy of @diegoperini: https://gist.github.com/dperini/729294\r\n// Expected behavior: https://mathiasbynens.be/demo/url-regex\r\nconst REGEX_URL = new RegExp(\r\n  '^' +\r\n    // protocol identifier\r\n    '(?:(?:https?|ftp)://)' +\r\n    // user:pass authentication\r\n    '(?:\\\\S+(?:u:\\\\S*)?@)?' +\r\n    '(?:' +\r\n    // IP address exclusion\r\n    // private & local networks\r\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\r\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\r\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\r\n    // IP address dotted notation octets\r\n    // excludes loopback network 0.0.0.0\r\n    // excludes reserved space >= 224.0.0.0\r\n    // excludes network & broacast addresses\r\n    // (first & last IP address of each class)\r\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\r\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\r\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\r\n    '|' +\r\n    // host name\r\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\r\n    // domain name\r\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\r\n    // TLD identifier\r\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\r\n    // TLD may end with dot\r\n    '\\\\.?' +\r\n    ')' +\r\n    // port number\r\n    '(?::\\\\d{2,5})?' +\r\n    // resource path\r\n    '(?:[/?#]\\\\S*)?' +\r\n    '$',\r\n  'i'\r\n);\r\n\r\nconst inputAsString = (input: FormInput): string => {\r\n  let value = input;\r\n  if (typeof input === 'string') {\r\n    return value + '';\r\n  }\r\n\r\n  // if we are an object consider the name to match assets\r\n  if (input && typeof input === 'object') {\r\n    value = (input as any).name || undefined;\r\n  }\r\n\r\n  return value ? value + '' : null;\r\n};\r\n\r\nconst fromMaxItems = (max: number): ValidatorFunc => (name: string, input: FormInput) => {\r\n  if (Array.isArray(input)) {\r\n    const items = input as string[];\r\n    if (items.length > max) {\r\n      return {\r\n        value: input,\r\n        failures: [{ message: `${name} cannot have more than ${max} entries` }]\r\n      };\r\n    }\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nconst fromRegex = (regex: RegExp, message: string): ValidatorFunc => (\r\n  name: string,\r\n  input: FormInput\r\n) => {\r\n  const value = inputAsString(input);\r\n  if (value) {\r\n    if (!regex.test(value)) {\r\n      return {\r\n        value: input,\r\n        failures: [{ message: `${name} ${message}` }]\r\n      };\r\n    }\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const validate = (\r\n  name: string,\r\n  input: FormInput,\r\n  validators: ValidatorFunc[]\r\n): FormEntry => {\r\n  let allFailures: ValidationFailure[] = [];\r\n  let value = input;\r\n  validators.forEach(validateFunc => {\r\n    const validation = validateFunc(name, input);\r\n    value = validation.value;\r\n    allFailures = allFailures.concat(validation.failures);\r\n  });\r\n\r\n  return { value, validationFailures: allFailures };\r\n};\r\n\r\nexport const Empty: ValidatorFunc = (name: string, input: FormInput) => {\r\n  const isNotFinished = i18n.t('forms.is_not_finished', 'is not finished');\r\n\r\n  if (input) {\r\n    return { value: input, failures: [{ message: `${name} ${isNotFinished}` }] };\r\n  }\r\n\r\n  if (typeof input === 'string') {\r\n    if ((input as string).trim().length !== 0) {\r\n      return {\r\n        value: input,\r\n        failures: [{ message: `${name} ${isNotFinished}` }]\r\n      };\r\n    }\r\n  } else if (Array.isArray(input)) {\r\n    if (input.length !== 0) {\r\n      return {\r\n        value: input,\r\n        failures: [{ message: `${name} ${isNotFinished}` }]\r\n      };\r\n    }\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const Required: ValidatorFunc = (name: string, input: FormInput) => {\r\n  const isRequired = i18n.t('forms.is_required', 'is required');\r\n\r\n  if (!input) {\r\n    return { value: input, failures: [{ message: `${name} ${isRequired}` }] };\r\n  }\r\n\r\n  if (typeof input === 'string') {\r\n    if ((input as string).trim().length === 0) {\r\n      return { value: input, failures: [{ message: `${name} ${isRequired}` }] };\r\n    }\r\n  } else if (Array.isArray(input)) {\r\n    if (input.length === 0) {\r\n      return {\r\n        value: input,\r\n        failures: [{ message: `${name} ${i18n.t('forms.are_required', 'are required')}` }]\r\n      };\r\n    }\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const Regex: ValidatorFunc = (name: string, input: FormInput) => {\r\n  if (typeof input === 'string') {\r\n    const inputString = input as string;\r\n\r\n    if (inputString.trim().startsWith('@')) {\r\n      return { failures: [], value: input };\r\n    }\r\n\r\n    try {\r\n      // tslint:disable-next-line:no-unused-expression\r\n      new RegExp(inputString);\r\n    } catch (e) {\r\n      return {\r\n        value: input,\r\n        failures: [\r\n          {\r\n            message: `${name} ${i18n.t('forms.is_not_a_valid_regex', 'is not a valid regex')}`\r\n          }\r\n        ]\r\n      };\r\n    }\r\n  }\r\n\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const LessThan = (amount: number, checkName: string): ValidatorFunc => (\r\n  name: string,\r\n  input: FormInput\r\n) => {\r\n  if (typeof input === 'string') {\r\n    if (parseFloat(input as string) >= amount) {\r\n      return {\r\n        value: input,\r\n        failures: [\r\n          {\r\n            message: `${name} ${i18n.t(\r\n              'forms.must_be_less_than',\r\n              'must be less than'\r\n            )} ${checkName}`\r\n          }\r\n        ]\r\n      };\r\n    }\r\n\r\n    return { failures: [], value: input };\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const MoreThan = (amount: number, checkName: string): ValidatorFunc => (\r\n  name: string,\r\n  input: FormInput\r\n) => {\r\n  if (typeof input === 'string') {\r\n    if (parseFloat(input as string) <= amount) {\r\n      return {\r\n        value: input,\r\n        failures: [{ message: `${name} must be a more than ${checkName}` }]\r\n      };\r\n    }\r\n\r\n    return { failures: [], value: input };\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const shouldRequireIf = (required: boolean): ValidatorFunc => (\r\n  name: string,\r\n  input: FormInput\r\n) => {\r\n  if (required) {\r\n    return Required(name, input);\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const validateIf = (func: ValidatorFunc, predicate: boolean): ValidatorFunc => (\r\n  name: string,\r\n  input: FormInput\r\n) => {\r\n  if (predicate) {\r\n    return func(name, input);\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const HeaderName: ValidatorFunc = (name: string, input: FormInput) => {\r\n  if (typeof input === 'string') {\r\n    if (input.trim().length > 0 && !headerUtils.validateHeaderName(input)) {\r\n      return { failures: [{ message: 'Invalid header name' }], value: input };\r\n    }\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const IsValidIntent = (classifier: Asset): ValidatorFunc => (\r\n  name: string,\r\n  input: FormInput\r\n) => {\r\n  if (typeof input === 'object') {\r\n    const option = input as SelectOption;\r\n\r\n    if (option && classifier && classifier.content) {\r\n      const exists = !!classifier.content.intents.find((intent: string) => intent === option.value);\r\n      if (!exists) {\r\n        return {\r\n          value: input,\r\n          failures: [{ message: `${option.value} is not a valid intent for ${classifier.name}` }]\r\n        };\r\n      }\r\n    }\r\n    return { failures: [], value: input };\r\n  }\r\n  return { failures: [], value: input };\r\n};\r\n\r\nexport const MaxOfTenItems = fromMaxItems(10);\r\nexport const StartIsNonNumeric = fromRegex(/^(?!\\d)/, \"can't start with a number\");\r\nexport const ValidURL = fromRegex(REGEX_URL, 'is not a valid URL');\r\nexport const Numeric = fromRegex(/^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\r\nexport const Alphanumeric = fromRegex(/^[a-z\\d\\-_\\s]+$/i, 'can only have letters and numbers');\r\nexport const NumOrExp = fromRegex(/^@.*$|^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\r\n","import { hasErrors } from 'components/flow/actions/helpers';\r\nimport { SelectOption } from 'components/form/select/SelectElement';\r\nimport { Type } from 'config/interfaces';\r\nimport { Scheme } from 'config/typeConfigs';\r\nimport { AnyAction } from 'flowTypes';\r\nimport mutate from 'immutability-helper';\r\nimport { combineReducers } from 'redux';\r\nimport { LocalizedObject } from 'services/Localization';\r\nimport ActionTypes, {\r\n  UpdateNodeEditorSettings,\r\n  UpdateTypeConfigAction,\r\n  UpdateUserAddingActionAction\r\n} from 'store/actionTypes';\r\nimport Constants from 'store/constants';\r\nimport { Asset, RenderNode } from 'store/flowContext';\r\n\r\n// tslint:disable:no-shadowed-variable\r\nexport interface ValidationFailure {\r\n  message: string;\r\n}\r\n\r\nexport interface FormEntry {\r\n  value: any;\r\n  validationFailures?: ValidationFailure[];\r\n}\r\n\r\nexport interface SelectOptionEntry extends FormEntry {\r\n  value: SelectOption;\r\n}\r\n\r\nexport interface NumberEntry extends FormEntry {\r\n  value: number;\r\n}\r\n\r\nexport interface StringEntry extends FormEntry {\r\n  value: string;\r\n}\r\n\r\nexport interface SchemeEntry extends FormEntry {\r\n  value: Scheme;\r\n}\r\n\r\nexport interface StringArrayEntry extends FormEntry {\r\n  value: string[];\r\n}\r\n\r\nexport interface AssetEntry extends FormEntry {\r\n  value: Asset;\r\n}\r\n\r\nexport interface AssetArrayEntry extends FormEntry {\r\n  value: Asset[] | null;\r\n}\r\n\r\nexport interface SelectOptionArrayEntry extends FormEntry {\r\n  value: SelectOption[] | null;\r\n}\r\n\r\nexport const mergeForm = (\r\n  form: FormState,\r\n  toMerge: Partial<FormState>,\r\n  toRemove: any[] = []\r\n): FormState => {\r\n  // TODO: deal with explicit array setting\r\n  let updated = form || {};\r\n  // we auto update array items with uuids\r\n  for (const key of Object.keys(toMerge)) {\r\n    const entry: any = (toMerge as any)[key];\r\n    if (Array.isArray(entry)) {\r\n      for (const item of entry) {\r\n        // we support objects with uuids or FormEntry's with uuids\r\n        const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\r\n\r\n        if ((isEntry && item.value.uuid) || item.uuid) {\r\n          const existingIdx = (form as any)[key].findIndex((existing: any) => {\r\n            if (isEntry) {\r\n              return existing.value.uuid === item.value.uuid;\r\n            } else {\r\n              return existing.uuid === item.uuid;\r\n            }\r\n          });\r\n\r\n          if (existingIdx > -1) {\r\n            // we found a match, merge us in\r\n            updated = mutate(updated, {\r\n              [key]: { $merge: { [existingIdx]: item } }\r\n            }) as FormState;\r\n          } else {\r\n            // couldn't find it, lets push it on\r\n            updated = mutate(updated, {\r\n              [key]: { $push: [item] }\r\n            }) as FormState;\r\n          }\r\n        }\r\n      }\r\n\r\n      // remove it from our merge\r\n      delete (toMerge as any)[key];\r\n    }\r\n  }\r\n\r\n  // removals can be items in an array\r\n  for (const remove of toRemove.filter((item: any) => typeof item === 'object')) {\r\n    for (const key of Object.keys(remove)) {\r\n      const entry: any = remove[key];\r\n      if (Array.isArray(entry)) {\r\n        for (const item of entry) {\r\n          // we support objects with uuids or FormEntry's with uuids\r\n          const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\r\n          if ((isEntry && item.value.uuid) || item.uuid) {\r\n            updated = mutate(updated, {\r\n              [key]: (items: any) =>\r\n                items.filter((existing: any) => {\r\n                  if (isEntry) {\r\n                    return existing.value.uuid !== item.value.uuid;\r\n                  } else {\r\n                    return existing.uuid !== item.uuid;\r\n                  }\r\n                })\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeKeys = toRemove.filter((item: any) => typeof item === 'string');\r\n  updated = mutate(updated, {\r\n    $merge: toMerge,\r\n    $unset: removeKeys\r\n  }) as FormState;\r\n\r\n  let valid = true;\r\n  for (const key of Object.keys(form)) {\r\n    const entry: any = (updated as any)[key];\r\n    if (Array.isArray(entry)) {\r\n      for (const item of entry) {\r\n        if (hasErrors(item)) {\r\n          valid = false;\r\n          break;\r\n        }\r\n      }\r\n    } else if (entry && typeof entry === 'object') {\r\n      if (hasErrors(entry)) {\r\n        valid = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return mutate(updated, { $merge: { valid } }) as FormState;\r\n};\r\n\r\nexport interface FormState {\r\n  validationFailures?: ValidationFailure[];\r\n  valid: boolean;\r\n}\r\n\r\nexport interface NodeEditorSettings {\r\n  originalNode: RenderNode;\r\n  showAdvanced?: boolean;\r\n  originalAction?: AnyAction;\r\n  localizations?: LocalizedObject[];\r\n}\r\n\r\nexport interface NodeEditor {\r\n  typeConfig: Type | null;\r\n  userAddingAction: boolean;\r\n  settings: NodeEditorSettings | null;\r\n}\r\n\r\n// Initial state\r\nexport const initialState: NodeEditor = {\r\n  typeConfig: null,\r\n  userAddingAction: false,\r\n  settings: null\r\n};\r\n\r\n// Action Creators\r\nexport const updateTypeConfig = (typeConfig: Type): UpdateTypeConfigAction => ({\r\n  type: Constants.UPDATE_TYPE_CONFIG,\r\n  payload: {\r\n    typeConfig\r\n  }\r\n});\r\n\r\nexport const updateNodeEditorSettings = (\r\n  settings: NodeEditorSettings\r\n): UpdateNodeEditorSettings => ({\r\n  type: Constants.UPDATE_NODE_EDITOR_SETTINGS,\r\n  payload: {\r\n    settings\r\n  }\r\n});\r\n\r\nexport const updateUserAddingAction = (\r\n  userAddingAction: boolean\r\n): UpdateUserAddingActionAction => ({\r\n  type: Constants.UPDATE_USER_ADDING_ACTION,\r\n  payload: {\r\n    userAddingAction\r\n  }\r\n});\r\n\r\n// Reducers\r\nexport const typeConfig = (state: Type | null = initialState.typeConfig, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_TYPE_CONFIG:\r\n      return action.payload!.typeConfig;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userAddingAction = (\r\n  state: boolean = initialState.userAddingAction,\r\n  action: ActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_USER_ADDING_ACTION:\r\n      return action.payload!.userAddingAction;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const settings = (\r\n  state: NodeEditorSettings | null = initialState.settings,\r\n  action: ActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_NODE_EDITOR_SETTINGS:\r\n      return action.payload!.settings;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Root reducer\r\nexport default combineReducers({\r\n  typeConfig,\r\n  userAddingAction,\r\n  settings\r\n});\r\n","import { AddLabelsFormState } from 'components/flow/actions/addlabels/AddLabelsForm';\r\nimport { getActionUUID } from 'components/flow/actions/helpers';\r\nimport { Types } from 'config/interfaces';\r\nimport { AddLabels } from 'flowTypes';\r\nimport { Asset, AssetType } from 'store/flowContext';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): AddLabelsFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.add_input_labels) {\r\n    const action = settings.originalAction as AddLabels;\r\n    return {\r\n      labels: {\r\n        value: action.labels.map(label => {\r\n          return { id: label.uuid, name: label.name, type: AssetType.Label };\r\n        })\r\n      },\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    labels: { value: [] },\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (\r\n  settings: NodeEditorSettings,\r\n  formState: AddLabelsFormState\r\n): AddLabels => {\r\n  return {\r\n    type: Types.add_input_labels,\r\n    labels: getAsset(formState.labels.value!, AssetType.Label),\r\n    uuid: getActionUUID(settings, Types.add_input_labels)\r\n  };\r\n};\r\n\r\nexport const getAsset = (assets: Asset[], type: AssetType): any[] => {\r\n  return assets\r\n    .filter((asset: Asset) => asset.type === type)\r\n    .map((asset: Asset) => {\r\n      return { uuid: asset.id, name: asset.name };\r\n    });\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport { AssetArrayEntry, FormState, mergeForm } from 'store/nodeEditor';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\n\r\nimport { initializeForm, stateToAction } from './helpers';\r\nimport i18n from 'config/i18n';\r\nimport { Trans } from 'react-i18next';\r\nimport { renderIssues } from '../helpers';\r\n\r\nexport interface AddLabelsFormState extends FormState {\r\n  labels: AssetArrayEntry;\r\n}\r\n\r\nexport const controlLabelSpecId = 'label';\r\n\r\nexport default class AddLabelsForm extends React.PureComponent<\r\n  ActionFormProps,\r\n  AddLabelsFormState\r\n> {\r\n  public static contextTypes = {\r\n    assetService: fakePropType\r\n  };\r\n\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n\r\n    this.state = initializeForm(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public handleSave(): void {\r\n    const valid = this.handleLabelsChanged(this.state.labels.value!, true);\r\n\r\n    if (valid) {\r\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\r\n      this.props.updateAction(newAction);\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  public handleLabelsChanged(selected: Asset[], submitting: boolean = false): boolean {\r\n    const updates: Partial<AddLabelsFormState> = {\r\n      labels: validate(i18n.t('forms.labels', 'Labels'), selected, [shouldRequireIf(submitting)])\r\n    };\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public handleCreateAssetFromInput(input: string): any {\r\n    return { name: input };\r\n  }\r\n\r\n  public handleLabelCreated(label: Asset): void {\r\n    // update our store with our new group\r\n    this.props.addAsset('labels', label);\r\n\r\n    this.handleLabelsChanged(this.state.labels.value!.concat(label));\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p data-spec={controlLabelSpecId}>\r\n          <Trans i18nKey=\"forms.add_labels_summary\">\r\n            Select the labels to apply to the incoming message.\r\n          </Trans>\r\n        </p>\r\n\r\n        <AssetSelector\r\n          name={i18n.t('forms.labels', 'Labels')}\r\n          placeholder={i18n.t(\r\n            'enter_to_create_label',\r\n            'Enter the name of an existing label or create a new one'\r\n          )}\r\n          assets={this.props.assetStore.labels}\r\n          entry={this.state.labels}\r\n          searchable={true}\r\n          multi={true}\r\n          onChange={this.handleLabelsChanged}\r\n          createPrefix={i18n.t('create_label', 'Create Label') + ': '}\r\n          createAssetFromInput={this.handleCreateAssetFromInput}\r\n          onAssetCreated={this.handleLabelCreated}\r\n        />\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { AddURNFormState } from 'components/flow/actions/addurn/AddURNForm';\r\nimport { getActionUUID } from 'components/flow/actions/helpers';\r\nimport { SelectOption } from 'components/form/select/SelectElement';\r\nimport { Types } from 'config/interfaces';\r\nimport { Scheme, SCHEMES } from 'config/typeConfigs';\r\nimport { AddURN } from 'flowTypes';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport const getSchemeOptions = (): SelectOption[] => {\r\n  return SCHEMES.map((scheme: Scheme) => {\r\n    return schemeToSelectOption(scheme);\r\n  });\r\n};\r\n\r\nexport const getSchemeObject = (scheme: string): Scheme => {\r\n  return SCHEMES.find((item: Scheme) => item.scheme === scheme)!;\r\n};\r\n\r\nexport const getSchemeSelectOption = (scheme: string): SelectOption =>\r\n  schemeToSelectOption(getSchemeObject(scheme));\r\n\r\nexport const schemeToSelectOption = (scheme: Scheme): SelectOption => {\r\n  return { value: scheme.scheme, label: scheme.path };\r\n};\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): AddURNFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_urn) {\r\n    const { scheme, path } = settings.originalAction as AddURN;\r\n\r\n    return {\r\n      scheme: { value: getSchemeSelectOption(scheme) },\r\n      path: { value: path },\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    scheme: { value: getSchemeSelectOption('tel') },\r\n    path: { value: '' },\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (settings: NodeEditorSettings, formState: AddURNFormState): AddURN => {\r\n  return {\r\n    type: Types.add_contact_urn,\r\n    uuid: getActionUUID(settings, Types.add_input_labels),\r\n    scheme: formState.scheme.value.value,\r\n    path: formState.path.value\r\n  };\r\n};\r\n","// https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\r\nexport enum KeyValues {\r\n  KEY_AT = '@',\r\n  KEY_SPACE = ' ',\r\n  KEY_ENTER = 'Enter',\r\n  KEY_UP = 'ArrowUp',\r\n  KEY_DOWN = 'ArrowDown',\r\n  KEY_RIGHT = 'ArrowRight',\r\n  KEY_LEFT = 'ArrowLeft',\r\n  KEY_TAB = 'Tab',\r\n  KEY_ESC = 'Escape',\r\n  KEY_BACKSPACE = 'Backspace',\r\n  KEY_N = 'n',\r\n  KEY_P = 'p',\r\n  KEY_F = 'f',\r\n  KEY_B = 'b'\r\n}\r\n\r\nexport const MAX_GSM_SINGLE = 160;\r\nexport const MAX_GSM_MULTI = 153;\r\nexport const MAX_UNICODE_SINGLE = 70;\r\nexport const MAX_UNICODE_MULTI = 67;\r\n\r\nexport const COMPLETION_HELP = 'Tab to complete, enter to select';\r\n\r\nexport const GSM: { [key: string]: number } = {\r\n  // char: charCode\r\n  0: 48,\r\n  1: 49,\r\n  2: 50,\r\n  3: 51,\r\n  4: 52,\r\n  5: 53,\r\n  6: 54,\r\n  7: 55,\r\n  8: 56,\r\n  9: 57,\r\n  '\\n': 10,\r\n  '\\f': 12,\r\n  '\\r': 13,\r\n  ' ': 32,\r\n  '!': 33,\r\n  '\"': 34,\r\n  '#': 35,\r\n  $: 36,\r\n  '%': 37,\r\n  '&': 38,\r\n  \"'\": 39,\r\n  '(': 40,\r\n  ')': 41,\r\n  '*': 42,\r\n  '+': 43,\r\n  ',': 44,\r\n  '-': 45,\r\n  '.': 46,\r\n  '/': 47,\r\n  ':': 58,\r\n  ';': 59,\r\n  '<': 60,\r\n  '=': 61,\r\n  '>': 62,\r\n  '?': 63,\r\n  '@': 64,\r\n  A: 65,\r\n  B: 66,\r\n  C: 67,\r\n  D: 68,\r\n  E: 69,\r\n  F: 70,\r\n  G: 71,\r\n  H: 72,\r\n  I: 73,\r\n  J: 74,\r\n  K: 75,\r\n  L: 76,\r\n  M: 77,\r\n  N: 78,\r\n  O: 79,\r\n  P: 80,\r\n  Q: 81,\r\n  R: 82,\r\n  S: 83,\r\n  T: 84,\r\n  U: 85,\r\n  V: 86,\r\n  W: 87,\r\n  X: 88,\r\n  Y: 89,\r\n  Z: 90,\r\n  '[': 91,\r\n  '\\\\': 92,\r\n  ']': 93,\r\n  '^': 94,\r\n  _: 95,\r\n  a: 97,\r\n  b: 98,\r\n  c: 99,\r\n  d: 100,\r\n  e: 101,\r\n  f: 102,\r\n  g: 103,\r\n  h: 104,\r\n  i: 105,\r\n  j: 106,\r\n  k: 107,\r\n  l: 108,\r\n  m: 109,\r\n  n: 110,\r\n  o: 111,\r\n  p: 112,\r\n  q: 113,\r\n  r: 114,\r\n  s: 115,\r\n  t: 116,\r\n  u: 117,\r\n  v: 118,\r\n  w: 119,\r\n  x: 120,\r\n  y: 121,\r\n  z: 122,\r\n  '{': 123,\r\n  '|': 124,\r\n  '}': 125,\r\n  '~': 126,\r\n  '¡': 161,\r\n  '£': 163,\r\n  '¤': 164,\r\n  '¥': 165,\r\n  '§': 167,\r\n  '¿': 191,\r\n  Ä: 196,\r\n  Å: 197,\r\n  Æ: 198,\r\n  Ç: 199,\r\n  É: 201,\r\n  Ñ: 209,\r\n  Ö: 214,\r\n  Ø: 216,\r\n  Ü: 220,\r\n  ß: 223,\r\n  à: 224,\r\n  ä: 228,\r\n  å: 229,\r\n  æ: 230,\r\n  è: 232,\r\n  é: 233,\r\n  ì: 236,\r\n  ñ: 241,\r\n  ò: 242,\r\n  ö: 246,\r\n  ø: 248,\r\n  ù: 249,\r\n  ü: 252,\r\n  Γ: 915,\r\n  Δ: 916,\r\n  Θ: 920,\r\n  Λ: 923,\r\n  Ξ: 926,\r\n  Π: 928,\r\n  Σ: 931,\r\n  Φ: 934,\r\n  Ψ: 936,\r\n  Ω: 937,\r\n  '€': 8364\r\n};\r\n","import * as React from 'react';\r\nimport { AddURN } from 'flowTypes';\r\n\r\nimport { getSchemeObject } from './helpers';\r\nimport i18n from 'config/i18n';\r\nimport { emphasize } from 'utils';\r\n\r\nexport const MAX_TO_SHOW = 5;\r\n\r\nconst AddURNComp: React.SFC<AddURN> = ({ scheme, path }): JSX.Element => {\r\n  const schemeObject = getSchemeObject(scheme);\r\n  const schemeName = schemeObject ? schemeObject.path : scheme;\r\n  return (\r\n    <>\r\n      {i18n.t('add', 'Add')} {schemeName} {emphasize(path)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddURNComp;\r\n","import FormElement, { FormElementProps } from 'components/form/FormElement';\r\nimport * as React from 'react';\r\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\r\nimport { hasErrors } from 'components/flow/actions/helpers';\r\n\r\ninterface SelectElementProps extends FormElementProps {\r\n  onChange?(value: any, action?: any): void;\r\n  onMenuOpen?: () => void;\r\n  onMenuClose?: () => void;\r\n  options: any;\r\n\r\n  style?: TembaSelectStyle;\r\n  placeholder?: string;\r\n  clearable?: boolean;\r\n\r\n  multi?: boolean;\r\n  styles?: any;\r\n}\r\n\r\nexport interface SelectOption {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nexport default class SelectElement extends React.Component<SelectElementProps> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <FormElement name={this.props.name} entry={this.props.entry}>\r\n        <TembaSelect\r\n          key={this.props.name + '_select'}\r\n          name={this.props.name}\r\n          placeholder={this.props.placeholder}\r\n          onChange={this.props.onChange}\r\n          value={this.props.entry.value}\r\n          options={this.props.options}\r\n          searchable={false}\r\n          error={hasErrors(this.props.entry)}\r\n          style={this.props.style}\r\n          multi={this.props.multi}\r\n        ></TembaSelect>\r\n      </FormElement>\r\n    );\r\n  }\r\n}\r\n","import { UnicodeCharMap } from 'components/form/textinput/helpers';\r\nimport * as React from 'react';\r\nimport { pluralize, renderIf } from 'utils';\r\n\r\nimport styles from './UnicodeList.module.scss';\r\n\r\nexport interface UnicodeListProps {\r\n  unicodeChars: UnicodeCharMap;\r\n}\r\n\r\nexport const utfWarning = (num: number) =>\r\n  ` Note that your message may require more segments to send because it contains the following ${pluralize(\r\n    num,\r\n    'character'\r\n  )}:`;\r\n\r\nexport const unicodeListContainerSpecId = 'unicode-list-container';\r\nexport const unicodeListSpecId = 'unicode-list';\r\n\r\nconst UnicodeList: React.SFC<UnicodeListProps> = ({ unicodeChars }) => {\r\n  const chars = Object.keys(unicodeChars);\r\n  return renderIf(chars.length > 0)(\r\n    <span data-testid={unicodeListContainerSpecId}>\r\n      {utfWarning(chars.length)}\r\n      <div className={styles.unicode_list} data-testid={unicodeListSpecId}>\r\n        {chars.map((char, idx) => (\r\n          <span key={char} className={styles.unicode_char}>\r\n            {char}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default UnicodeList;\r\n","import classNames from 'classnames/bind';\r\nimport { UnicodeCharMap } from 'components/form/textinput/helpers';\r\nimport UnicodeList from 'components/form/textinput/UnicodeList';\r\nimport React from 'react';\r\nimport { pluralize } from 'utils';\r\n\r\nimport styles from './CharCount.module.scss';\r\n\r\ninterface CharCountProps {\r\n  count: number;\r\n  parts: number;\r\n  unicodeChars: UnicodeCharMap;\r\n}\r\n\r\nconst cx: any = classNames.bind(styles);\r\n\r\nconst CharCount: React.SFC<CharCountProps> = ({ count, parts, unicodeChars }) => {\r\n  const hasUnicode = Object.keys(unicodeChars).length > 0;\r\n  const toolTipTextClasses = cx({\r\n    [styles.tooltip_text]: true,\r\n    [styles.unicode]: hasUnicode\r\n  });\r\n  return (\r\n    <div className={styles.count}>\r\n      <div className={styles.tooltip}>\r\n        {count}\r\n        <span className={styles.divider}>/</span>\r\n        {parts}\r\n        <span className={toolTipTextClasses}>\r\n          This message will be about <b>{count}</b> {pluralize(count, 'character')} long. We\r\n          estimate it will take <b>{parts}</b> {pluralize(parts, 'message')} to send over SMS.\r\n          {hasUnicode && <UnicodeList unicodeChars={unicodeChars} />}\r\n          <div className={styles.fine_print}>\r\n            Using variables may result in longer messages that require more messages to send over\r\n            SMS.\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharCount;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport classNames from 'classnames/bind';\r\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\r\nimport shared from 'components/form/FormElement.module.scss';\r\nimport CharCount from 'components/form/textinput/CharCount';\r\nimport { COMPLETION_HELP, KeyValues } from 'components/form/textinput/constants';\r\nimport ExcellentParser, { isWordChar } from 'components/form/textinput/ExcellentParser';\r\nimport { getMsgStats, UnicodeCharMap } from 'components/form/textinput/helpers';\r\nimport { Type, Types } from 'config/interfaces';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AssetStore, CompletionOption, FunctionExample } from 'store/flowContext';\r\nimport { StringEntry } from 'store/nodeEditor';\r\nimport AppState from 'store/state';\r\nimport getCaretCoordinates from 'textarea-caret';\r\nimport {\r\n  CompletionSchema,\r\n  getCompletions,\r\n  getFunctions,\r\n  getCompletionName,\r\n  getCompletionSignature,\r\n  CompletionAssets\r\n} from 'utils/completion';\r\n\r\nimport styles from './TextInputElement.module.scss';\r\nimport { hasErrors } from 'components/flow/actions/helpers';\r\n\r\nconst ReactMarkdown = require('react-markdown');\r\n\r\n// import setCaretPosition from 'get-input-selection';\r\nexport enum Count {\r\n  SMS = 'SMS'\r\n}\r\n\r\nexport interface Coordinates {\r\n  left: number;\r\n  top: number;\r\n}\r\n\r\nexport type HTMLTextElement = HTMLTextAreaElement | HTMLInputElement;\r\n\r\nexport interface TextInputStoreProps {\r\n  typeConfig: Type;\r\n  assetStore: AssetStore;\r\n  completionSchema: CompletionSchema;\r\n  functions: CompletionOption[];\r\n}\r\n\r\nexport interface TextInputPassedProps extends FormElementProps {\r\n  entry?: StringEntry;\r\n  __className?: string;\r\n  count?: Count;\r\n  textarea?: boolean;\r\n  placeholder?: string;\r\n  autocomplete?: boolean;\r\n  focus?: boolean;\r\n  showInvalid?: boolean;\r\n  maxLength?: number;\r\n  onChange?: (value: string, name?: string) => void;\r\n  onBlur?: (event: React.ChangeEvent<HTMLTextElement>) => void;\r\n  onEnter?: (event: React.KeyboardEvent<HTMLTextElement>) => boolean;\r\n}\r\n\r\nexport type TextInputProps = TextInputStoreProps & TextInputPassedProps;\r\n\r\nexport interface TextInputState {\r\n  value: string;\r\n  caretCoordinates: Coordinates;\r\n  completionVisible: boolean;\r\n  selectedOptionIndex: number;\r\n  matches: CompletionOption[];\r\n  query: string;\r\n  parts?: string[];\r\n  characterCount?: number;\r\n  unicodeChars?: UnicodeCharMap;\r\n  fn?: CompletionOption;\r\n}\r\n\r\ntype InitialState = Pick<\r\n  TextInputState,\r\n  'caretCoordinates' | 'completionVisible' | 'selectedOptionIndex' | 'matches' | 'query'\r\n>;\r\n\r\nconst initialState: InitialState = {\r\n  caretCoordinates: { left: 0, top: 0 },\r\n  completionVisible: false,\r\n  selectedOptionIndex: 0,\r\n  matches: [],\r\n  query: ''\r\n};\r\n\r\nconst cx: any = classNames.bind({ ...styles, ...shared });\r\n\r\nexport class TextInputElement extends React.Component<TextInputProps, TextInputState> {\r\n  private selectedEl: HTMLLIElement;\r\n  private textEl: HTMLTextElement;\r\n  private parser: ExcellentParser;\r\n  private nextCaret = -1;\r\n  private completion: CompletionAssets;\r\n\r\n  constructor(props: TextInputProps) {\r\n    super(props);\r\n\r\n    this.completion = {\r\n      schema: this.props.completionSchema,\r\n      assetStore: this.props.assetStore\r\n    };\r\n\r\n    let initial = '';\r\n    if (this.props.entry && this.props.entry.value) {\r\n      initial = this.props.entry.value;\r\n    }\r\n\r\n    this.state = {\r\n      value: initial,\r\n      ...initialState,\r\n      ...(this.props.count && this.props.count === Count.SMS ? getMsgStats(initial) : {})\r\n    };\r\n\r\n    this.parser = new ExcellentParser('@', [\r\n      'contact',\r\n      'child',\r\n      'fields',\r\n      'globals',\r\n      'input',\r\n      'parent',\r\n      'results',\r\n      'run',\r\n      'trigger',\r\n      'urns',\r\n      'webhook'\r\n    ]);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /Ref$/, 'setSelection', 'validate', /^has/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private selectedElRef(ref: HTMLLIElement): HTMLLIElement {\r\n    return (this.selectedEl = ref);\r\n  }\r\n\r\n  private textElRef(ref: HTMLTextElement): HTMLTextElement {\r\n    return (this.textEl = ref);\r\n  }\r\n\r\n  public UNSAFE_componentWillReceiveProps(nextProps: TextInputProps): void {\r\n    if (nextProps.entry.value !== this.props.entry.value || this.nextCaret > -1) {\r\n      this.setState({ value: nextProps.entry.value }, () => {\r\n        if (this.nextCaret > -1) {\r\n          this.textEl.selectionStart = this.nextCaret;\r\n          this.textEl.selectionEnd = this.nextCaret;\r\n          this.nextCaret = -1;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    return this.props.focus && this.focusInput();\r\n  }\r\n\r\n  public componentDidUpdate(previous: TextInputProps): void {\r\n    if (this.selectedEl) {\r\n      if (this.selectedEl.scrollIntoView) {\r\n        this.selectedEl.scrollIntoView(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleKeyDown(event: React.KeyboardEvent<HTMLTextElement>): void {\r\n    if (!this.props.autocomplete) {\r\n      return;\r\n    }\r\n\r\n    // if our parent cares about enter, give them a go at it\r\n    if (event.key === KeyValues.KEY_ENTER && this.props.onEnter) {\r\n      if (this.props.onEnter(event)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    switch (event.key) {\r\n      case KeyValues.KEY_SPACE:\r\n        if (event.ctrlKey) {\r\n          this.reevaluate(event.currentTarget.value, event.currentTarget.selectionStart, true);\r\n        }\r\n        break;\r\n      case KeyValues.KEY_P:\r\n        if (event.ctrlKey) {\r\n          if (this.state.completionVisible) {\r\n            this.setSelection(this.state.selectedOptionIndex - 1);\r\n            event.preventDefault();\r\n          }\r\n        }\r\n        break;\r\n      case KeyValues.KEY_UP:\r\n        if (this.state.completionVisible) {\r\n          this.setSelection(this.state.selectedOptionIndex - 1);\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n      case KeyValues.KEY_N:\r\n        if (event.ctrlKey) {\r\n          if (this.state.completionVisible) {\r\n            this.setSelection(this.state.selectedOptionIndex + 1);\r\n            event.preventDefault();\r\n          }\r\n        }\r\n        break;\r\n      case KeyValues.KEY_DOWN:\r\n        if (this.state.completionVisible) {\r\n          this.setSelection(this.state.selectedOptionIndex + 1);\r\n          event.preventDefault();\r\n        }\r\n        return;\r\n      case KeyValues.KEY_AT:\r\n        this.setState({\r\n          completionVisible: true,\r\n          caretCoordinates: getCaretCoordinates(this.textEl, this.textEl.selectionEnd)\r\n        });\r\n        return;\r\n      case KeyValues.KEY_ESC:\r\n        if (this.state.completionVisible) {\r\n          this.setState({\r\n            completionVisible: false\r\n          });\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n        return;\r\n      case KeyValues.KEY_TAB:\r\n      case KeyValues.KEY_ENTER:\r\n        let caret = event.currentTarget.selectionStart;\r\n        if (this.state.completionVisible && this.state.matches.length > 0) {\r\n          const option = this.state.matches[this.state.selectedOptionIndex];\r\n          let newValue = this.state.value.substr(0, caret - this.state.query.length);\r\n\r\n          if (option.signature) {\r\n            let parens = 1;\r\n            if (option.signature.indexOf('()') > -1) {\r\n              parens++;\r\n            }\r\n\r\n            newValue += option.signature.substring(0, option.signature.indexOf('(') + parens);\r\n          } else {\r\n            newValue += option.name;\r\n          }\r\n\r\n          const newCaret = newValue.length;\r\n\r\n          // skip over adjacent text including dot completions\r\n          for (const ch of this.state.value.substr(caret)) {\r\n            if (isWordChar(ch) || ch === '.') {\r\n              caret++;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n\r\n          newValue += this.state.value.substr(caret);\r\n\r\n          let fn: CompletionOption = null;\r\n          let query = '';\r\n          let completionVisible = false;\r\n          const matches: CompletionOption[] = [];\r\n          if (event.key === KeyValues.KEY_TAB || option.signature) {\r\n            query = option.name;\r\n            matches.push(\r\n              ...getCompletions(this.completion, query),\r\n              ...getFunctions(this.props.functions, query)\r\n            );\r\n            completionVisible = matches.length > 0;\r\n            if (option.signature && option.signature.indexOf('()') === -1) {\r\n              fn = option;\r\n            }\r\n          }\r\n\r\n          this.setState(\r\n            {\r\n              fn,\r\n              query,\r\n              value: newValue,\r\n              matches,\r\n              completionVisible,\r\n              selectedOptionIndex: 0\r\n            },\r\n            () => {\r\n              if (this.props.onChange) {\r\n                this.props.onChange(this.state.value, this.props.name);\r\n              }\r\n              this.nextCaret = newCaret;\r\n            }\r\n          );\r\n\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          return;\r\n        } else {\r\n          if (this.props.onEnter) {\r\n            this.props.onEnter(event);\r\n          }\r\n        }\r\n        return;\r\n      case KeyValues.KEY_BACKSPACE:\r\n        // go backwards on our value until we reach either a space or @\r\n        this.executeQuery(event.currentTarget.value, event.currentTarget.selectionStart - 1);\r\n        return;\r\n    }\r\n  }\r\n\r\n  private reevaluate(value: string, selectionStart: number, force: boolean = false): void {\r\n    if (this.state.completionVisible || force) {\r\n      this.setState(this.executeQuery(value, selectionStart) as TextInputState);\r\n    }\r\n  }\r\n\r\n  private handleKeyUp(event: React.KeyboardEvent<HTMLTextElement>): void {\r\n    if (event.currentTarget) {\r\n      const {\r\n        currentTarget: { value, selectionStart }\r\n      } = event;\r\n\r\n      switch (event.key) {\r\n        case KeyValues.KEY_P:\r\n        case KeyValues.KEY_N:\r\n          if (this.state.completionVisible && event.ctrlKey) {\r\n            return;\r\n          }\r\n          this.reevaluate(value, selectionStart);\r\n          return;\r\n\r\n        case KeyValues.KEY_F:\r\n        case KeyValues.KEY_B:\r\n          this.reevaluate(value, selectionStart);\r\n          return;\r\n\r\n        case KeyValues.KEY_RIGHT:\r\n        case KeyValues.KEY_LEFT:\r\n          this.reevaluate(value, selectionStart);\r\n          return;\r\n\r\n        case KeyValues.KEY_UP:\r\n        case KeyValues.KEY_DOWN:\r\n          if (this.state.completionVisible) {\r\n            return;\r\n          }\r\n          this.reevaluate(value, selectionStart);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleClick(event: React.MouseEvent<HTMLTextElement>): void {\r\n    if (event.currentTarget) {\r\n      const {\r\n        currentTarget: { value, selectionStart }\r\n      } = event;\r\n\r\n      this.reevaluate(value, selectionStart);\r\n    }\r\n  }\r\n\r\n  private handleBlur(event: React.ChangeEvent<HTMLTextElement>): void {\r\n    this.setState(\r\n      {\r\n        query: '',\r\n        matches: [],\r\n        selectedOptionIndex: 0,\r\n        completionVisible: false\r\n      },\r\n      () => this.props.onBlur && this.props.onBlur(event)\r\n    );\r\n  }\r\n\r\n  private executeQuery(value: string, position: number): Partial<TextInputState> {\r\n    // go backwards until we have a query\r\n    const expression = this.parser.expressionContext(value.substr(0, position));\r\n\r\n    let fn: CompletionOption = null;\r\n    if (expression !== null) {\r\n      const includeFunctions = expression.startsWith('(');\r\n\r\n      if (includeFunctions) {\r\n        const functionQuery = this.parser.functionContext(expression);\r\n        if (functionQuery) {\r\n          const fns = getFunctions(this.props.functions, functionQuery);\r\n          if (fns.length > 0) {\r\n            fn = fns[0];\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = expression.length; i >= 0; i--) {\r\n        const curr = expression[i];\r\n        if (curr === '@' || curr === '(' || curr === ' ' || i === 0) {\r\n          // don't include open parens or spaces\r\n          if (curr === '(' || curr === ' ') {\r\n            i++;\r\n\r\n            if (!includeFunctions) {\r\n              return {\r\n                completionVisible: false\r\n              };\r\n            }\r\n          }\r\n\r\n          const query = expression.substr(i, expression.length - i);\r\n          const matches = getCompletions(this.completion, query);\r\n\r\n          if (includeFunctions) {\r\n            matches.push(...getFunctions(this.props.functions, query));\r\n          }\r\n\r\n          const completionVisible = matches.length > 0;\r\n          return {\r\n            query,\r\n            matches,\r\n            completionVisible,\r\n            selectedOptionIndex: 0,\r\n            caretCoordinates: getCaretCoordinates(this.textEl, position - query.length),\r\n            fn,\r\n            value\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      // keep our text field state\r\n      value,\r\n\r\n      // reset the others\r\n      query: null,\r\n      completionVisible: false,\r\n      matches: [],\r\n      selectedOptionIndex: 0\r\n    };\r\n  }\r\n\r\n  private handleChange({\r\n    currentTarget: { value, selectionStart }\r\n  }: React.ChangeEvent<HTMLTextElement>): void {\r\n    const updates: Partial<TextInputState> = this.executeQuery(value, selectionStart);\r\n\r\n    if (this.props.autocomplete) {\r\n      if (this.props.count === Count.SMS) {\r\n        const { parts, characterCount, unicodeChars } = getMsgStats(value, true);\r\n        updates.parts = parts;\r\n        updates.characterCount = characterCount;\r\n        updates.unicodeChars = unicodeChars;\r\n      }\r\n\r\n      updates.selectedOptionIndex = 0;\r\n      this.setState(updates as TextInputState);\r\n    }\r\n\r\n    if (this.props.onChange) {\r\n      this.props.onChange(value, this.props.name);\r\n    }\r\n  }\r\n\r\n  private setSelection(selectedIdx: number): void {\r\n    let selectedOptionIndex: number = selectedIdx;\r\n\r\n    // Can't exceed the last option\r\n    if (selectedIdx >= this.state.matches.length) {\r\n      selectedOptionIndex = this.state.matches.length - 1;\r\n    }\r\n\r\n    // Can't go beyond the first option\r\n    if (selectedIdx < 0) {\r\n      selectedOptionIndex = 0;\r\n    }\r\n\r\n    if (selectedOptionIndex !== this.state.selectedOptionIndex) {\r\n      this.setState({ selectedOptionIndex });\r\n    }\r\n  }\r\n\r\n  private focusInput(): void {\r\n    const {\r\n      value: { length }\r\n    } = this.textEl;\r\n    this.textEl.focus();\r\n    this.textEl.selectionStart = length;\r\n  }\r\n\r\n  private getOption(\r\n    option: CompletionOption,\r\n    showSummary: boolean = false,\r\n    numExamples: number = 0\r\n  ): JSX.Element {\r\n    const name = getCompletionName(option);\r\n\r\n    let summary = null;\r\n    let examples = null;\r\n\r\n    if (showSummary) {\r\n      summary = (\r\n        <div data-spec=\"option-summary\" className={styles.option_summary}>\r\n          <ReactMarkdown source={option.summary} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (option.examples && numExamples > 0) {\r\n      examples = (\r\n        <div data-spec=\"option-example\" className={styles.option_examples}>\r\n          <div className={styles.example_header}>\r\n            EXAMPLE\r\n            {numExamples !== 1 ? 'S' : ''}\r\n          </div>\r\n\r\n          <div className={styles.example}>\r\n            {option.examples.slice(0, numExamples).map((example: FunctionExample, idx: number) => (\r\n              <div key={option.name + '_example_' + idx}> {example.template}</div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div data-spec=\"option-name\" className={styles.option_name}>\r\n          {option.signature ? <div className={styles.fn_marker}>ƒ</div> : null}\r\n          {name}\r\n\r\n          {showSummary && option.signature ? (\r\n            <div className={styles.option_signature}>{getCompletionSignature(option)}</div>\r\n          ) : null}\r\n        </div>\r\n        {summary}\r\n        {examples}\r\n      </>\r\n    );\r\n  }\r\n\r\n  private getOptions(): JSX.Element[] {\r\n    return this.state.matches.map((option: CompletionOption, idx: number) => {\r\n      const optionClasses = [styles.option];\r\n\r\n      if (idx === this.state.selectedOptionIndex) {\r\n        optionClasses.push(styles.selected);\r\n\r\n        if (idx === 0) {\r\n          optionClasses.push(styles.first_option);\r\n        }\r\n\r\n        return (\r\n          <li\r\n            ref={this.selectedElRef}\r\n            className={optionClasses.join(' ')}\r\n            key={option.signature || option.name}\r\n          >\r\n            {this.getOption(option, true, 1)}\r\n          </li>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <li className={optionClasses.join(' ')} key={option.signature || option.name}>\r\n          {this.getOption(option, false)}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  private getScroll(): number {\r\n    if (this.textEl) {\r\n      return this.textEl.scrollTop;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private getError(): string {\r\n    return this.props.entry.validationFailures && this.props.entry.validationFailures.length > 0\r\n      ? this.props.entry.validationFailures[0].message\r\n      : null;\r\n  }\r\n\r\n  private getTextElement(): JSX.Element {\r\n    const textElClasses = cx({\r\n      [styles.textinput]: true,\r\n      [shared.invalid]: hasErrors(this.props.entry) || this.props.showInvalid === true\r\n    });\r\n\r\n    let text = this.state.value;\r\n    if (this.props.entry) {\r\n      text = this.props.entry.value;\r\n    }\r\n\r\n    if (this.props.textarea) {\r\n      return (\r\n        <textarea\r\n          name={this.props.name}\r\n          data-spec=\"input\"\r\n          data-testid=\"input\"\r\n          ref={this.textElRef}\r\n          className={textElClasses}\r\n          value={text}\r\n          onClick={this.handleClick}\r\n          onChange={this.handleChange}\r\n          onBlur={this.handleBlur}\r\n          onKeyDown={this.handleKeyDown}\r\n          onKeyUp={this.handleKeyUp}\r\n          placeholder={this.props.placeholder}\r\n          maxLength={this.props.maxLength || -1}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <input\r\n          name={this.props.name}\r\n          data-spec=\"input\"\r\n          data-testid=\"input\"\r\n          ref={this.textElRef}\r\n          type=\"text\"\r\n          className={textElClasses}\r\n          value={text}\r\n          onClick={this.handleClick}\r\n          onChange={this.handleChange}\r\n          onBlur={this.handleBlur}\r\n          onKeyDown={this.handleKeyDown}\r\n          onKeyUp={this.handleKeyUp}\r\n          placeholder={this.props.placeholder}\r\n          maxLength={this.props.maxLength || -1}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const completionClasses = cx({\r\n      [styles.completion_container]: true,\r\n      [styles.hidden]: !this.state.completionVisible || this.state.matches.length === 0\r\n    });\r\n\r\n    const fnClasses = cx({\r\n      [styles.fn_container]: true,\r\n      [styles.hidden]: !this.state.completionVisible || this.state.matches.length === 0\r\n    });\r\n    const options: JSX.Element[] = this.getOptions();\r\n    const charCount: JSX.Element =\r\n      this.props.count && this.props.count === Count.SMS ? (\r\n        <CharCount\r\n          count={this.state.characterCount}\r\n          parts={this.state.parts.length}\r\n          unicodeChars={this.state.unicodeChars}\r\n        />\r\n      ) : null;\r\n\r\n    const sendMsgError =\r\n      hasErrors(this.props.entry) &&\r\n      this.props.name === 'Message' &&\r\n      (this.props.typeConfig.type === Types.send_msg ||\r\n        this.props.typeConfig.type === Types.send_broadcast);\r\n\r\n    const showFn = this.state.fn && !this.state.query;\r\n\r\n    return (\r\n      <FormElement\r\n        __className={this.props.__className}\r\n        name={this.props.name}\r\n        helpText={this.props.helpText}\r\n        showLabel={this.props.showLabel}\r\n        // errors={this.state.errors}\r\n        entry={this.props.entry}\r\n        sendMsgError={sendMsgError}\r\n      >\r\n        <div className={styles.wrapper}>\r\n          {this.getTextElement()}\r\n          <div\r\n            className={completionClasses}\r\n            style={{\r\n              top: this.state.caretCoordinates.top - this.getScroll(),\r\n              left: this.state.caretCoordinates.left\r\n            }}\r\n            data-spec=\"completion-options\"\r\n          >\r\n            <div className={styles.options_wrapper}>\r\n              <ul className={styles.option_list} data-spec=\"completion-list\">\r\n                {options}\r\n              </ul>\r\n              <div className={styles.help} data-spec=\"completion-help\">\r\n                {COMPLETION_HELP}\r\n              </div>\r\n            </div>\r\n\r\n            {showFn ? (\r\n              <div className={fnClasses}>{this.getOption(this.state.fn, true, 3)}</div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        {charCount}\r\n      </FormElement>\r\n    );\r\n  }\r\n}\r\n\r\n/* istanbul ignore next */\r\nconst mapStateToProps = ({\r\n  flowContext: { assetStore },\r\n  editorState: { completionSchema, functions },\r\n  nodeEditor: { typeConfig }\r\n}: AppState) => ({\r\n  typeConfig,\r\n  assetStore,\r\n  completionSchema,\r\n  functions\r\n});\r\n\r\nconst ConnectedTextInputElement = connect(\r\n  mapStateToProps,\r\n  null,\r\n  null,\r\n  { forwardRef: true }\r\n)(TextInputElement);\r\n\r\nexport default ConnectedTextInputElement;\r\n","const STATE_BODY = 0; // not in a expression\r\nconst STATE_PREFIX = 1; // '@' prefix that denotes the start of an expression\r\nconst STATE_IDENTIFIER = 2; // the identifier part, e.g. 'contact.age' in '@contact.age'\r\nconst STATE_BALANCED = 3; // the balanced parentheses delimited part, e.g. '(1 + 2)' in '@(1 + 2)'\r\nconst STATE_STRING_LITERAL = 4; // a string literal which could contain )\r\nconst STATE_ESCAPED_PREFIX = 5; // a '@' prefix preceded by another '@'\r\nconst STATE_IGNORE = 6;\r\n\r\ninterface Expression {\r\n  start: number;\r\n  end: number;\r\n  text: string;\r\n  closed: boolean;\r\n}\r\n\r\n/**\r\n * Determines whether the given string starts with the given text\r\n */\r\nconst startsWith = (str: string, start: string): boolean => {\r\n  return str.indexOf(start, 0) === 0;\r\n};\r\n\r\n/**\r\n * Checks the parsed (possibly partial) expression to determine if it's valid based on how it starts\r\n */\r\nconst isValidStart = (\r\n  partialExpression: string,\r\n  allowedTopLevels: string[],\r\n  allowIncomplete: boolean\r\n): boolean => {\r\n  const body = partialExpression.substring(1); // strip prefix\r\n\r\n  if (body[0] === '(') {\r\n    return true;\r\n  } else {\r\n    // if expression doesn't start with ( then check it's an allowed top level context reference\r\n    const topLevel = body.split('.')[0].toLowerCase();\r\n\r\n    if (allowIncomplete) {\r\n      for (const allowed of allowedTopLevels) {\r\n        if (startsWith(allowed, topLevel)) {\r\n          return true;\r\n        }\r\n      }\r\n    } else {\r\n      return allowedTopLevels.indexOf(topLevel) >= 0;\r\n    }\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Determines whether the given character is a word character, i.e. \\w in a regex\r\n */\r\nexport const isWordChar = (ch: string | 0): boolean => {\r\n  return (\r\n    (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9') || ch === '_'\r\n  );\r\n};\r\n\r\n/**\r\n * Determines whether we are in a string literal\r\n */\r\nconst isInStringLiteral = (partialExpression: string): boolean => {\r\n  // count number quotation marks\r\n  let numQuotes = 0;\r\n  for (const pos of partialExpression) {\r\n    if (pos === '\"') {\r\n      numQuotes++;\r\n    }\r\n  }\r\n  return numQuotes % 2 !== 0; // odd means last string literal is open\r\n};\r\n\r\nexport default class ExcellentParser {\r\n  private expressionPrefix: string;\r\n  private allowedTopLevels: string[];\r\n\r\n  /**\r\n   * Creates a new parser\r\n   * @param expressionPrefix the prefix for expressions, e.g. '@'\r\n   * @param allowedTopLevels the context names that are allowed without parentheses, e.g. [\"contact\", \"flow\", ...]\r\n   */\r\n  constructor(expressionPrefix: string, allowedTopLevels: string[]) {\r\n    this.expressionPrefix = expressionPrefix;\r\n    this.allowedTopLevels = allowedTopLevels;\r\n  }\r\n\r\n  /**\r\n   * Given the text up to the caret position, returns the expression currently being edited, without its prefix\r\n   */\r\n  public expressionContext(textToCaret: string): string {\r\n    const expressions = this.findExpressions(textToCaret);\r\n    if (expressions.length === 0) {\r\n      // no expressions found\r\n      return null;\r\n    }\r\n\r\n    const lastExpression = expressions[expressions.length - 1];\r\n\r\n    // has last expression already ended or is it closed (i.e. has balanced parentheses)\r\n    if (lastExpression.end < textToCaret.length || lastExpression.closed) {\r\n      return null;\r\n    }\r\n\r\n    return lastExpression.text.substring(1); // return without prefix\r\n  }\r\n\r\n  /**\r\n   * Given the partial expression currently being edited, returns the current auto-completable identifier\r\n   * which may be a function name or a context reference.\r\n   */\r\n  public autoCompleteContext(partialExpression: string): string {\r\n    if (isInStringLiteral(partialExpression)) {\r\n      return null;\r\n    }\r\n\r\n    const neededParentheses = [];\r\n    let fragment = '';\r\n    let skipChar = false;\r\n    let inQuotes = false;\r\n    let prependFlag = '';\r\n\r\n    for (let pos = partialExpression.length - 1; pos >= 0; pos--) {\r\n      const ch = partialExpression[pos];\r\n\r\n      if (ch === ' ') {\r\n        skipChar = true;\r\n      }\r\n\r\n      if (ch === ',') {\r\n        skipChar = true;\r\n        if (neededParentheses[neededParentheses.length - 1] !== '(') {\r\n          neededParentheses.push('(');\r\n        }\r\n      }\r\n\r\n      if (ch === ')' && !inQuotes) {\r\n        skipChar = true;\r\n        neededParentheses.push('(');\r\n        neededParentheses.push('(');\r\n      }\r\n\r\n      if (ch === '\"') {\r\n        inQuotes = !inQuotes;\r\n      }\r\n\r\n      if (skipChar) {\r\n        if (ch === '(' && !inQuotes) {\r\n          if (neededParentheses[neededParentheses.length - 1] === '(') {\r\n            neededParentheses.pop();\r\n          }\r\n\r\n          if (neededParentheses.length === 0) {\r\n            skipChar = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (ch === '(' && fragment === '') {\r\n        prependFlag = '#';\r\n      }\r\n\r\n      if (skipChar || inQuotes || (ch === '(' && fragment === '')) {\r\n        continue;\r\n      }\r\n\r\n      if (isWordChar(ch) || ch === '.') {\r\n        fragment = ch + fragment;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.match(/[A-Za-z][\\w]*(\\.[\\w]+)*/)) {\r\n      return prependFlag + fragment;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO find the function context\r\n   */\r\n  public functionContext(partialExpression: string): string {\r\n    const inString = isInStringLiteral(partialExpression);\r\n\r\n    // initial state is string literal if number of quotes is odd\r\n    let state = inString ? STATE_STRING_LITERAL : STATE_IGNORE;\r\n    let identifier = '';\r\n    let parenthesesLevel = partialExpression[-1] === '(' ? 0 : 1;\r\n\r\n    for (let pos = partialExpression.length - 1; pos >= 0; pos--) {\r\n      const ch = partialExpression[pos];\r\n\r\n      if (ch === '@') {\r\n        return '';\r\n      }\r\n\r\n      if (state === STATE_IGNORE) {\r\n        if (parenthesesLevel === 0 && (isWordChar(ch) || ch === '.')) {\r\n          state = STATE_IDENTIFIER;\r\n          identifier = ch + identifier;\r\n        } else if (ch === '\"') {\r\n          state = STATE_STRING_LITERAL;\r\n        } else if (ch === '(') {\r\n          parenthesesLevel--;\r\n        } else if (ch === ')') {\r\n          parenthesesLevel++;\r\n        }\r\n      } else if (state === STATE_IDENTIFIER) {\r\n        if (isWordChar(ch) || ch === '.') {\r\n          identifier = ch + identifier;\r\n        } else {\r\n          return identifier;\r\n        }\r\n      } else if (state === STATE_STRING_LITERAL) {\r\n        if (ch === '\"') {\r\n          state = STATE_IGNORE;\r\n        }\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public getContactFields(text: string): string[] {\r\n    const fields = {};\r\n    const re = /((parent|child\\.)*contact\\.)*fields\\.([a-z0-9_]+)/g;\r\n    const expressions = this.findExpressions(text);\r\n    for (const expression of expressions) {\r\n      if (expression.text.indexOf('webhook') > -1) {\r\n        continue;\r\n      }\r\n\r\n      let match;\r\n      // tslint:disable-next-line:no-conditional-assignment\r\n\r\n      while ((match = re.exec(expression.text))) {\r\n        (fields as any)[match[3]] = true;\r\n      }\r\n    }\r\n    return Object.keys(fields);\r\n  }\r\n\r\n  /**\r\n   * Finds all expressions in the given text, including any partially complete expression at the end of the input\r\n   */\r\n  public findExpressions(text: string): Expression[] {\r\n    const expressions: Expression[] = [];\r\n    let state = STATE_BODY;\r\n    let currentExpression: Expression = null;\r\n    let parenthesesLevel = 0;\r\n\r\n    for (let pos = 0; pos < text.length; pos++) {\r\n      const ch = text[pos];\r\n\r\n      // in order to determine if the b in a.b terminates an identifier, we have to peek two characters ahead as\r\n      // it could be a.b. (b terminates) or a.b.c (b doesn't terminate)\r\n      const nextCh = pos < text.length - 1 ? text[pos + 1] : 0;\r\n      const nextNextCh = pos < text.length - 2 ? text[pos + 2] : 0;\r\n\r\n      if (state === STATE_BODY) {\r\n        if (ch === this.expressionPrefix && (isWordChar(nextCh) || nextCh === '(')) {\r\n          state = STATE_PREFIX;\r\n          currentExpression = {\r\n            start: pos,\r\n            end: null,\r\n            text: ch,\r\n            closed: false\r\n          };\r\n        } else if (ch === this.expressionPrefix && nextCh === this.expressionPrefix) {\r\n          state = STATE_ESCAPED_PREFIX;\r\n        }\r\n      } else if (state === STATE_PREFIX) {\r\n        if (isWordChar(ch)) {\r\n          state = STATE_IDENTIFIER; // we're parsing an expression like @XXX\r\n        } else if (ch === '(') {\r\n          // we're parsing an expression like @(1 + 2)\r\n          state = STATE_BALANCED;\r\n          parenthesesLevel += 1;\r\n        }\r\n        currentExpression.text += ch;\r\n      } else if (state === STATE_IDENTIFIER) {\r\n        currentExpression.text += ch;\r\n      } else if (state === STATE_BALANCED) {\r\n        if (ch === '(') {\r\n          parenthesesLevel += 1;\r\n        } else if (ch === ')') {\r\n          parenthesesLevel -= 1;\r\n        } else if (ch === '\"') {\r\n          state = STATE_STRING_LITERAL;\r\n        }\r\n\r\n        currentExpression.text += ch;\r\n\r\n        // expression terminates if parentheses balance\r\n        if (parenthesesLevel === 0) {\r\n          currentExpression.end = pos + 1;\r\n        }\r\n      } else if (state === STATE_STRING_LITERAL) {\r\n        if (ch === '\"') {\r\n          state = STATE_BALANCED;\r\n        }\r\n        currentExpression.text += ch;\r\n      } else if (state === STATE_ESCAPED_PREFIX) {\r\n        state = STATE_BODY;\r\n      }\r\n\r\n      // identifier can terminate expression in 3 ways:\r\n      //  1. next char is null (i.e. end of the input)\r\n      //  2. next char is not a word character or period\r\n      //  3. next char is a period, but it's not followed by a word character\r\n      if (state === STATE_IDENTIFIER) {\r\n        if (\r\n          (!isWordChar(nextCh) && nextCh !== '.') ||\r\n          (nextCh === '.' && !isWordChar(nextNextCh))\r\n        ) {\r\n          currentExpression.end = pos + 1;\r\n        }\r\n      }\r\n\r\n      if (currentExpression != null && (currentExpression.end != null || nextCh === 0)) {\r\n        const allowIncomplete = nextCh === 0; // if we're at the end of the input, allow incomplete expressions\r\n        if (isValidStart(currentExpression.text, this.allowedTopLevels, allowIncomplete)) {\r\n          currentExpression.closed = currentExpression.text[1] === '(' && parenthesesLevel === 0;\r\n          currentExpression.end = pos + 1;\r\n          expressions.push(currentExpression);\r\n        }\r\n\r\n        currentExpression = null;\r\n        state = STATE_BODY;\r\n      }\r\n    }\r\n\r\n    return expressions;\r\n  }\r\n}\r\n","import { GSM } from 'components/form/textinput/constants';\r\nimport { split } from 'split-sms';\r\n\r\nexport interface UnicodeCharMap {\r\n  [char: string]: boolean;\r\n}\r\n\r\ninterface MsgStats {\r\n  value: string;\r\n  parts: string[];\r\n  characterCount: number;\r\n  unicodeChars: UnicodeCharMap;\r\n}\r\n\r\nexport const isUnicode = (char: string): boolean => {\r\n  if (GSM.hasOwnProperty(char)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getUnicodeChars = (msg: string): UnicodeCharMap => {\r\n  const chars = {};\r\n\r\n  for (const char of msg) {\r\n    if (isUnicode(char)) {\r\n      (chars as any)[char] = true;\r\n    }\r\n  }\r\n\r\n  return chars;\r\n};\r\n\r\n/**\r\n * Replaces unicode characters commonly inserted by text editors like MSWord with their GSM equivalents\r\n * @param {string} msg - msg to be cleaned\r\n * @returns {string} Cleaned msg\r\n */\r\nexport const cleanMsg = (msg: string): string =>\r\n  msg\r\n    .replace(/[\\u2018\\u2019]/g, \"'\") // Smart single quotes\r\n    .replace(/[\\u201C\\u201D]/g, '\"') // Smart double quotes\r\n    .replace(/[\\u2013\\u2014]/g, '-') // En/em dash\r\n    .replace(/\\u2026/g, '...') // Horizontal ellipsis\r\n    .replace(/\\u2002/g, ' '); // En space\r\n\r\n/**\r\n * First pass at providing the user with an accurate character count for their SMS messages.\r\n * Determines encoding, segments, max character limit per message and calculates character count.\r\n * Optionally replaces common unicode 'gotcha characters' with their GSM counterparts.\r\n * @param value\r\n * @param replace\r\n */\r\nexport const getMsgStats = (value: string | string[], replace?: boolean): MsgStats => {\r\n  let newVal = value as string;\r\n\r\n  // Localized values are stored as string arrays\r\n  if (newVal.constructor === Array) {\r\n    newVal = newVal[0];\r\n  }\r\n\r\n  if (replace) {\r\n    newVal = cleanMsg(newVal);\r\n  }\r\n\r\n  const stats = split(newVal);\r\n\r\n  return {\r\n    value: newVal,\r\n    parts: stats.parts,\r\n    characterCount: stats.length,\r\n    unicodeChars: getUnicodeChars(newVal)\r\n  };\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\n\r\nimport styles from './AddURNForm.module.scss';\r\nimport { getSchemeOptions, initializeForm, stateToAction } from './helpers';\r\nimport i18n from 'config/i18n';\r\nimport { Trans } from 'react-i18next';\r\nimport { renderIssues } from '../helpers';\r\n\r\nexport interface AddURNFormState extends FormState {\r\n  scheme: SelectOptionEntry;\r\n  path: StringEntry;\r\n}\r\n\r\nexport const controlLabelSpecId = 'label';\r\n\r\nexport default class AddURNForm extends React.PureComponent<ActionFormProps, AddURNFormState> {\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n    this.state = initializeForm(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public handleSave(): void {\r\n    const valid = this.handlePathChanged(this.state.path.value, null, true);\r\n    if (valid) {\r\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\r\n      this.props.updateAction(newAction);\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  public handleSchemeChanged(selected: SelectOption): boolean {\r\n    const updates: Partial<AddURNFormState> = {\r\n      scheme: { value: selected }\r\n    };\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  public handlePathChanged(value: string, name: string, submitting: boolean = false): boolean {\r\n    const updates: Partial<AddURNFormState> = {\r\n      path: validate(i18n.t('forms.urn', 'URN'), value, [shouldRequireIf(submitting)])\r\n    };\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p data-spec={controlLabelSpecId}>\r\n          <Trans i18nKey=\"forms.add_urn_summary\">\r\n            Add a new URN to reach the contact such as a phone number.\r\n          </Trans>\r\n        </p>\r\n        <div style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n          <div className={styles.scheme_selection}>\r\n            <SelectElement\r\n              key={'urn_type_select'}\r\n              name={i18n.t('forms.urn_type', 'URN Type')}\r\n              entry={this.state.scheme}\r\n              onChange={this.handleSchemeChanged}\r\n              options={getSchemeOptions()}\r\n            />\r\n          </div>\r\n          <div className={styles.path}>\r\n            <TextInputElement\r\n              name={i18n.t('forms.urn', 'URN')}\r\n              placeholder=\"Enter the URN value\"\r\n              entry={this.state.path}\r\n              onChange={this.handlePathChanged}\r\n              autocomplete={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { CallResthook } from 'flowTypes';\r\n\r\nconst CallResthookComp: React.SFC<CallResthook> = ({ resthook }): JSX.Element => (\r\n  <div>{resthook}</div>\r\n);\r\n\r\nexport default CallResthookComp;\r\n","import * as React from 'react';\r\nimport { CallWebhook } from 'flowTypes';\r\n\r\nconst CallWebhookComp: React.SFC<CallWebhook> = ({ url }): JSX.Element => <div>{url}</div>;\r\n\r\nexport default CallWebhookComp;\r\n","import { Group } from 'flowTypes';\r\nimport { Asset, AssetType } from 'store/flowContext';\r\nimport { AssetArrayEntry, FormState } from 'store/nodeEditor';\r\n\r\nexport const labelSpecId = 'label';\r\n\r\nexport interface ChangeGroupsFormState extends FormState {\r\n  groups: AssetArrayEntry;\r\n  removeAll?: boolean;\r\n}\r\n\r\nexport const excludeDynamicGroups = (asset: Asset): boolean => {\r\n  return asset.content && asset.content.query;\r\n};\r\n\r\nexport const mapGroupsToAssets = (groups: Group[]): Asset[] =>\r\n  groups.map(({ name, uuid }) => ({ name, id: uuid, type: AssetType.Group }));\r\n\r\nexport const mapAssetsToGroups = (searchResults: Asset[] | null): Group[] => {\r\n  if (!searchResults) {\r\n    return [];\r\n  }\r\n\r\n  return searchResults.map(result => ({\r\n    uuid: result.id,\r\n    name: result.name\r\n  }));\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { ChangeGroups } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport { mergeForm } from 'store/nodeEditor';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\n\r\nimport { ChangeGroupsFormState, excludeDynamicGroups, labelSpecId } from '../helpers';\r\nimport { initializeForm, stateToAction } from './helpers';\r\nimport i18n from 'config/i18n';\r\nimport { Trans } from 'react-i18next';\r\nimport { renderIssues } from '../../helpers';\r\n\r\nexport default class AddGroupsForm extends React.Component<ActionFormProps, ChangeGroupsFormState> {\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public handleSave(): void {\r\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\r\n    if (valid) {\r\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\r\n      this.props.updateAction(newAction as ChangeGroups);\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\r\n    const updates: Partial<ChangeGroupsFormState> = {\r\n      groups: validate(i18n.t('forms.groups', 'Groups'), groups, [shouldRequireIf(submitting)])\r\n    };\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  public handleGroupAdded(group: Asset): void {\r\n    // update our store with our new group\r\n    this.props.addAsset('groups', group);\r\n\r\n    // try to add the group\r\n    this.handleGroupsChanged((this.state.groups.value || []).concat(group), false);\r\n  }\r\n\r\n  public handleCreateAssetFromInput(input: string): any {\r\n    return { name: input };\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p data-spec={labelSpecId}>\r\n          <Trans i18nKey=\"forms.add_groups_summary\">Select the groups to add the contact to.</Trans>\r\n        </p>\r\n\r\n        <AssetSelector\r\n          name={i18n.t('forms.groups', 'Groups')}\r\n          multi={true}\r\n          noOptionsMessage={i18n.t('enter_to_create_group', 'Enter a name to create a new group')}\r\n          assets={this.props.assetStore.groups}\r\n          entry={this.state.groups}\r\n          onChange={this.handleGroupsChanged}\r\n          searchable={true}\r\n          shouldExclude={excludeDynamicGroups}\r\n          // Groups can be created on the fly\r\n          createPrefix={i18n.t('create_group', 'Create Group') + ': '}\r\n          createAssetFromInput={this.handleCreateAssetFromInput}\r\n          onAssetCreated={this.handleGroupAdded}\r\n        />\r\n\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeGroupsFormState,\r\n  mapAssetsToGroups,\r\n  mapGroupsToAssets\r\n} from 'components/flow/actions/changegroups/helpers';\r\nimport { getActionUUID } from 'components/flow/actions/helpers';\r\nimport { Types } from 'config/interfaces';\r\nimport { ChangeGroups } from 'flowTypes';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_groups) {\r\n    const action = settings.originalAction as ChangeGroups;\r\n    return {\r\n      groups: { value: mapGroupsToAssets(action.groups) },\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    groups: { value: null },\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (\r\n  nodeSettings: NodeEditorSettings,\r\n  state: ChangeGroupsFormState\r\n): ChangeGroups => {\r\n  return {\r\n    type: Types.add_contact_groups,\r\n    groups: mapAssetsToGroups(state.groups.value),\r\n    uuid: getActionUUID(nodeSettings, Types.add_contact_groups)\r\n  };\r\n};\r\n","import { renderAssetList } from 'components/flow/actions/helpers';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { Types } from 'config/interfaces';\r\nimport { ChangeGroups, Endpoints } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { AssetType } from 'store/flowContext';\r\n\r\nexport const removeAllSpecId = 'remove_from_all';\r\nexport const contentSpecId = 'content';\r\nexport const removeAllText = 'Remove from all groups';\r\n\r\nexport const MAX_TO_SHOW = 5;\r\nexport const getRemoveAllMarkup = (\r\n  key = removeAllSpecId,\r\n  specId = removeAllSpecId,\r\n  text = removeAllText\r\n) => (\r\n  <div key={key} data-spec={specId}>\r\n    {text}\r\n  </div>\r\n);\r\n\r\nexport const getContentMarkup = (\r\n  { type, groups }: ChangeGroups,\r\n  endpoints?: Endpoints\r\n): JSX.Element[] => {\r\n  const content = [];\r\n\r\n  if (type === Types.remove_contact_groups && (!groups || !groups.length)) {\r\n    content.push(getRemoveAllMarkup());\r\n  } else {\r\n    return renderAssetList(\r\n      groups.map(group => {\r\n        return {\r\n          id: group.uuid,\r\n          name: group.name,\r\n          type: AssetType.Group\r\n        };\r\n      }),\r\n      MAX_TO_SHOW,\r\n      endpoints!\r\n    );\r\n  }\r\n\r\n  return content;\r\n};\r\n\r\nexport const getChangeGroupsMarkup = (\r\n  action: ChangeGroups,\r\n  endpoints?: Endpoints,\r\n  specId = contentSpecId\r\n) => <div data-spec={specId}>{getContentMarkup(action, endpoints)}</div>;\r\n\r\nconst ChangeGroupsComp: React.SFC<ChangeGroups> = (props: any, context: any): JSX.Element => {\r\n  return getChangeGroupsMarkup(props, context.config.endpoints);\r\n};\r\n\r\nChangeGroupsComp.contextTypes = {\r\n  config: fakePropType\r\n};\r\n\r\nexport default ChangeGroupsComp;\r\n","import classNames from 'classnames/bind';\r\nimport { FormElementProps } from 'components/form/FormElement';\r\nimport * as React from 'react';\r\nimport { isRealValue, renderIf } from 'utils';\r\n\r\nimport styles from './CheckboxElement.module.scss';\r\n\r\nexport interface CheckboxElementProps extends FormElementProps {\r\n  checked: boolean;\r\n  title?: string;\r\n  description?: string;\r\n  labelClassName?: string;\r\n  checkboxClassName?: string;\r\n  onChange?(checked: boolean): void;\r\n}\r\n\r\ninterface CheckboxState {\r\n  checked: boolean;\r\n}\r\n\r\nexport const boxIco = 'fe-square';\r\nexport const checkedBoxIco = 'fe-check-square';\r\n\r\nexport const checkboxSpecId = 'checkbox';\r\nexport const titleSpecId = 'title';\r\nexport const descSpecId = 'description';\r\n\r\nconst cx: any = classNames.bind(styles);\r\n\r\nexport default class CheckboxElement extends React.Component<CheckboxElementProps, CheckboxState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      checked: this.props.checked\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  private handleChange(event: React.MouseEvent): void {\r\n    // this null check only for testing, remove after switching to RTL\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    this.setState({ checked: !this.state.checked }, () => {\r\n      if (this.props.onChange) {\r\n        this.props.onChange(this.state.checked);\r\n      }\r\n    });\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  public validate(): boolean {\r\n    return true;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const checkboxIcon = this.state.checked ? checkedBoxIco : boxIco;\r\n    return (\r\n      <label className={cx(styles.label, this.props.labelClassName)} onClick={this.handleChange}>\r\n        <span\r\n          data-spec={checkboxSpecId}\r\n          className={cx(checkboxIcon, this.props.checkboxClassName)}\r\n        />\r\n        {renderIf(isRealValue(this.props.title))(\r\n          <div data-spec={titleSpecId} className={styles.title}>\r\n            {this.props.title}\r\n          </div>\r\n        )}\r\n        {renderIf(isRealValue(this.props.description))(\r\n          <div\r\n            data-spec={descSpecId}\r\n            className={this.props.title ? styles.description : styles.description_solo}\r\n          >\r\n            {this.props.description}\r\n          </div>\r\n        )}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport {\r\n  ChangeGroupsFormState,\r\n  excludeDynamicGroups\r\n} from 'components/flow/actions/changegroups/helpers';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { ChangeGroups } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport { mergeForm } from 'store/nodeEditor';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\nimport { renderIf } from 'utils';\r\n\r\nimport { initializeForm, stateToAction } from './helpers';\r\nimport styles from './RemoveGroupsForm.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { renderIssues } from '../../helpers';\r\n\r\nexport const LABEL = i18n.t(\r\n  'forms.remove_groups_summary',\r\n  'Select the groups to remove the contact from.'\r\n);\r\nexport const NOT_FOUND = i18n.t('errors.group_not_found', 'Enter the name of an existing group');\r\nexport const PLACEHOLDER = i18n.t(\r\n  'forms.remove_groups_placeholder',\r\n  'Enter the name of an existing group'\r\n);\r\nexport const REMOVE_FROM_ALL = i18n.t('forms.remove_from_all_label', 'Remove from all');\r\nexport const REMOVE_FROM_ALL_DESC = i18n.t(\r\n  'forms.remove_from_all_summary',\r\n  \"Remove the active contact from all groups they're a member of.\"\r\n);\r\n\r\nexport const labelSpecId = 'label';\r\nexport const fieldContainerSpecId = 'field-container';\r\n\r\nexport default class RemoveGroupsForm extends React.Component<\r\n  ActionFormProps,\r\n  ChangeGroupsFormState\r\n> {\r\n  public static contextTypes = {\r\n    assetService: fakePropType\r\n  };\r\n\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public handleSave(): void {\r\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\r\n    if (valid) {\r\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\r\n      this.props.updateAction(newAction as ChangeGroups);\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private handleUpdate(\r\n    keys: { groups?: Asset[]; removeAll?: boolean },\r\n    submitting: boolean = false\r\n  ): boolean {\r\n    const updates: Partial<ChangeGroupsFormState> = {};\r\n\r\n    // we only require groups if removeAll isn't checked\r\n    let groupValidators = this.state.removeAll ? [] : [shouldRequireIf(submitting)];\r\n\r\n    if (keys.hasOwnProperty('removeAll')) {\r\n      updates.removeAll = keys.removeAll;\r\n      if (keys.removeAll) {\r\n        groupValidators = [];\r\n      }\r\n    }\r\n\r\n    if (keys.hasOwnProperty('groups')) {\r\n      updates.groups = validate(i18n.t('forms.groups', 'Groups'), keys.groups!, groupValidators);\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\r\n    return this.handleUpdate({ groups }, submitting);\r\n  }\r\n\r\n  public handleRemoveAllUpdate(removeAll: boolean): boolean {\r\n    return this.handleUpdate({ removeAll });\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n\r\n        {renderIf(!this.state.removeAll)(\r\n          <div>\r\n            <p data-spec={labelSpecId}>{LABEL}</p>\r\n            <AssetSelector\r\n              name={i18n.t('forms.groups', 'Groups')}\r\n              assets={this.props.assetStore.groups}\r\n              entry={this.state.groups}\r\n              shouldExclude={excludeDynamicGroups}\r\n              searchable={true}\r\n              onChange={this.handleGroupsChanged}\r\n              multi={true}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <CheckboxElement\r\n          name={REMOVE_FROM_ALL}\r\n          title={REMOVE_FROM_ALL}\r\n          labelClassName={this.state.removeAll ? '' : styles.checkbox}\r\n          checked={this.state.removeAll!}\r\n          description={REMOVE_FROM_ALL_DESC}\r\n          onChange={this.handleRemoveAllUpdate}\r\n        />\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeGroupsFormState,\r\n  mapAssetsToGroups,\r\n  mapGroupsToAssets\r\n} from 'components/flow/actions/changegroups/helpers';\r\nimport { getActionUUID } from 'components/flow/actions/helpers';\r\nimport { Types } from 'config/interfaces';\r\nimport { RemoveFromGroups } from 'flowTypes';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.remove_contact_groups) {\r\n    const action = settings.originalAction as RemoveFromGroups;\r\n\r\n    const groups = action.groups || [];\r\n    return {\r\n      groups: { value: mapGroupsToAssets(groups) },\r\n      removeAll: groups.length === 0 || action.all_groups,\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    groups: { value: null },\r\n    removeAll: false,\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (\r\n  settings: NodeEditorSettings,\r\n  state: ChangeGroupsFormState\r\n): RemoveFromGroups => {\r\n  return {\r\n    type: Types.remove_contact_groups,\r\n    groups: state.removeAll ? [] : mapAssetsToGroups(state.groups.value),\r\n    all_groups: !!state.removeAll,\r\n    uuid: getActionUUID(settings, Types.remove_contact_groups)\r\n  };\r\n};\r\n","import { Type, Types } from 'config/interfaces';\r\nimport { getType, getTypeConfig } from 'config/typeConfigs';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\nimport { Asset } from 'store/flowContext';\r\nimport { FlowIssue } from 'flowTypes';\r\n\r\nexport const determineTypeConfig = (nodeSettings: NodeEditorSettings): Type => {\r\n  const renderNode = nodeSettings.originalNode;\r\n  const node = renderNode && renderNode.node;\r\n\r\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type) {\r\n    return getTypeConfig(nodeSettings.originalAction.type);\r\n  } else if (node && node.actions && node.actions.length > 0) {\r\n    return getTypeConfig(node.actions[node.actions.length - 1].type);\r\n  } else {\r\n    try {\r\n      const type = getType(renderNode);\r\n      const config = getTypeConfig(type);\r\n      if (config.type !== Types.missing) {\r\n        return config;\r\n      }\r\n      // tslint:disable-next-line:no-empty\r\n    } catch (Error) {}\r\n  }\r\n\r\n  // Account for ghost nodes\r\n  if (node && node.router) {\r\n    return getTypeConfig(node.router.type);\r\n  }\r\n\r\n  throw new Error(`Couldn't determine type config for: ${node.uuid}`);\r\n};\r\n\r\nexport const hasIssues = (issues: FlowIssue[], translating: boolean, language: Asset): boolean => {\r\n  if (!issues || issues.length === 0) {\r\n    return false;\r\n  }\r\n\r\n  if (!translating) {\r\n    return !!issues.find((issue: FlowIssue) => !issue.language);\r\n  } else {\r\n    return !!issues.find((issue: FlowIssue) => issue.language === language.id);\r\n  }\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\r\nimport styles from 'components/flow/actions/action/Action.module.scss';\r\nimport { initializeLocalizedKeyForm } from 'components/flow/actions/localization/helpers';\r\nimport { determineTypeConfig } from 'components/flow/helpers';\r\nimport { LocalizationFormProps } from 'components/flow/props';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport * as React from 'react';\r\nimport { FormState, StringEntry } from 'store/nodeEditor';\r\nimport i18n from 'config/i18n';\r\nimport { renderIssues } from '../helpers';\r\n\r\nexport interface KeyLocalizationFormState extends FormState {\r\n  keyValues: { [key: string]: StringEntry };\r\n}\r\n\r\nexport default class KeyLocalizationForm extends React.Component<\r\n  LocalizationFormProps,\r\n  KeyLocalizationFormState\r\n> {\r\n  constructor(props: LocalizationFormProps) {\r\n    super(props);\r\n    this.state = initializeLocalizedKeyForm(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^on/]\r\n    });\r\n  }\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  public handleKeyUpdate(text: string, name: string): boolean {\r\n    const keyValues = { ...this.state.keyValues };\r\n    keyValues[name.toLowerCase()] = { value: text };\r\n    this.setState({ keyValues });\r\n    return true;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    const translations: { [key: string]: string } = {};\r\n\r\n    Object.keys(this.state.keyValues).forEach((key: string) => {\r\n      const value = this.state.keyValues[key].value;\r\n      if (value) {\r\n        translations[key] = value;\r\n      } else {\r\n        delete translations[key];\r\n      }\r\n    });\r\n\r\n    this.props.updateLocalizations(this.props.language.id, [\r\n      {\r\n        uuid: this.props.nodeSettings.originalAction!.uuid,\r\n        translations\r\n      }\r\n    ]);\r\n\r\n    // notify our modal we are done\r\n    this.props.onClose(false);\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\r\n    const tabs: Tab[] = [];\r\n\r\n    let base: JSX.Element;\r\n\r\n    const translation = i18n.t('forms.translation', 'Translation');\r\n\r\n    typeConfig.localizeableKeys.forEach((key: string) => {\r\n      const name = key[0].toUpperCase() + key.slice(1);\r\n\r\n      const form = (\r\n        <div key={`localize_form_${key}`}>\r\n          <div data-spec=\"translation-container\">\r\n            <div data-spec=\"text-to-translate\" className={styles.translate_from}>\r\n              {(this.props.nodeSettings.originalAction as any)[key]}\r\n            </div>\r\n          </div>\r\n          <TextInputElement\r\n            name={name}\r\n            showLabel={false}\r\n            onChange={this.handleKeyUpdate}\r\n            entry={this.state.keyValues[key]}\r\n            placeholder={`${this.props.language.name} ${translation}`}\r\n            autocomplete={true}\r\n            focus={true}\r\n            textarea={true}\r\n          />\r\n        </div>\r\n      );\r\n\r\n      if (!base) {\r\n        base = form;\r\n      } else {\r\n        const translation = i18n.t('forms.translation', 'Translation');\r\n        tabs.push({\r\n          name: name + ' ' + translation,\r\n          body: form,\r\n          checked: !!this.state.keyValues[key].value\r\n        });\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Dialog\r\n        title={typeConfig.name}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        tabs={tabs}\r\n      >\r\n        {base}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { KeyLocalizationFormState } from 'components/flow/actions/localization/KeyLocalizationForm';\r\nimport { MsgLocalizationFormState } from 'components/flow/actions/localization/MsgLocalizationForm';\r\nimport { Types } from 'config/interfaces';\r\nimport { getTypeConfig } from 'config/typeConfigs';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\nimport { SendMsg, MsgTemplating, SayMsg } from 'flowTypes';\r\n\r\nexport const initializeLocalizedKeyForm = (\r\n  settings: NodeEditorSettings\r\n): KeyLocalizationFormState => {\r\n  const keyValues: { [key: string]: StringEntry } = {};\r\n  const localized = settings.localizations[0];\r\n  const action = localized.getObject() as any;\r\n\r\n  const keys = settings.originalAction\r\n    ? getTypeConfig(settings.originalAction.type).localizeableKeys || []\r\n    : [];\r\n  keys.forEach((key: string) => {\r\n    keyValues[key] = { value: key in localized.localizedKeys ? action[key] : '' };\r\n  });\r\n\r\n  return {\r\n    keyValues,\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const initializeLocalizedForm = (settings: NodeEditorSettings): MsgLocalizationFormState => {\r\n  const state: MsgLocalizationFormState = {\r\n    message: { value: '' },\r\n    quickReplies: { value: [] },\r\n    templateVariables: [],\r\n    templating: null,\r\n    audio: { value: null },\r\n    valid: true\r\n  };\r\n\r\n  // check if our form should use a localized action\r\n  if (\r\n    settings.originalAction &&\r\n    (settings.originalAction.type === Types.send_msg ||\r\n      settings.originalAction.type === Types.say_msg) &&\r\n    settings.localizations &&\r\n    settings.localizations.length > 0\r\n  ) {\r\n    if (settings.originalAction && (settings.originalAction as any).templating) {\r\n      state.templating = (settings.originalAction as any).templating;\r\n      state.templateVariables = state.templating.variables.map((value: string) => {\r\n        return {\r\n          value: ''\r\n        };\r\n      });\r\n    }\r\n\r\n    for (const localized of settings.localizations) {\r\n      if (localized.isLocalized()) {\r\n        const localizedObject = localized.getObject() as any;\r\n\r\n        if (localizedObject.text) {\r\n          const action = localizedObject as (SendMsg & SayMsg);\r\n          state.message.value = 'text' in localized.localizedKeys ? action.text : '';\r\n          state.audio.value = 'audio_url' in localized.localizedKeys ? action.audio_url : null;\r\n          state.quickReplies.value =\r\n            'quick_replies' in localized.localizedKeys ? action.quick_replies || [] : [];\r\n          state.valid = true;\r\n        }\r\n\r\n        if (localizedObject.variables) {\r\n          const templating = localizedObject as MsgTemplating;\r\n          state.templateVariables = templating.variables.map((value: string) => {\r\n            return {\r\n              value: 'variables' in localized.localizedKeys ? value : ''\r\n            };\r\n          });\r\n          state.valid = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return state;\r\n};\r\n","import * as React from 'react';\r\n\r\nimport styles from './Pill.module.scss';\r\n\r\nexport interface PillProps {\r\n  advanced?: boolean;\r\n  onClick?(event: React.MouseEvent<HTMLDivElement>): void;\r\n  text: string;\r\n  maxLength?: number;\r\n  icon?: string;\r\n  large?: boolean;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst Pill: React.SFC<PillProps> = (props: PillProps): JSX.Element => {\r\n  let text = props.text;\r\n\r\n  if (props.text.startsWith('@')) {\r\n    text = '@(exp)';\r\n  } else if (props.maxLength && text.length > props.maxLength) {\r\n    text = props.text.substring(0, props.maxLength) + '...';\r\n  }\r\n\r\n  const pillStyles = [styles.pill];\r\n\r\n  if (props.large) {\r\n    pillStyles.push(styles.large);\r\n  }\r\n\r\n  if (props.onClick) {\r\n    pillStyles.push(styles.clickable);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={props.style}\r\n      data-advanced={props.advanced}\r\n      onClick={props.onClick}\r\n      className={pillStyles.join(' ')}\r\n    >\r\n      {text}\r\n      {props.icon ? (\r\n        <span data-advanced={props.advanced} className={styles.icon + ' ' + props.icon} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pill;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport TextInputElement, { HTMLTextElement } from 'components/form/textinput/TextInputElement';\r\nimport Pill from 'components/pill/Pill';\r\nimport * as React from 'react';\r\nimport { StringArrayEntry, StringEntry } from 'store/nodeEditor';\r\nimport { Empty, validate } from 'store/validators';\r\n\r\nimport styles from './MultiChoice.module.scss';\r\n\r\nexport interface MultiChoiceInputProps {\r\n  name: string;\r\n  items: StringArrayEntry;\r\n  entry?: StringEntry;\r\n  onRemoved: (item: string) => void;\r\n  onItemAdded: (item: string) => boolean;\r\n  onEntryChanged?: (entry: StringEntry) => void;\r\n  helpText?: JSX.Element;\r\n}\r\n\r\ninterface MultiChoiceInputState {\r\n  currentInput: StringEntry;\r\n}\r\n\r\nexport default class MultiChoiceInput extends React.Component<\r\n  MultiChoiceInputProps,\r\n  MultiChoiceInputState\r\n> {\r\n  constructor(props: MultiChoiceInputProps) {\r\n    super(props);\r\n\r\n    if (this.props.entry) {\r\n      this.state = {\r\n        currentInput: this.props.entry\r\n      };\r\n    } else {\r\n      this.state = {\r\n        currentInput: { value: '' }\r\n      };\r\n    }\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public handleInputChanged(value: string): void {\r\n    this.setState({ currentInput: { value } });\r\n    if (this.props.onEntryChanged) {\r\n      this.props.onEntryChanged({ value });\r\n    }\r\n  }\r\n\r\n  public handleAddItem(event: React.KeyboardEvent<HTMLTextElement>): boolean {\r\n    // hack: we want to evaluate after the state is updated for validation errors\r\n    window.setTimeout(() => {\r\n      if (this.state.currentInput.value.trim().length > 0) {\r\n        const newItem = this.state.currentInput.value.trim();\r\n\r\n        if (this.props.onItemAdded(newItem)) {\r\n          this.setState({ currentInput: { value: '' } });\r\n        }\r\n\r\n        if (this.props.onEntryChanged) {\r\n          this.props.onEntryChanged({ value: '' });\r\n        }\r\n      }\r\n    }, 0);\r\n    return true;\r\n  }\r\n\r\n  private handleValidateEmpty(): void {\r\n    const currentInput = validate(this.props.name, this.state.currentInput.value, [Empty]);\r\n    this.setState({ currentInput }, () => {\r\n      if (this.props.onEntryChanged) {\r\n        this.props.onEntryChanged(currentInput);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getChosenItems(): JSX.Element {\r\n    if (this.props.items.value.length > 0) {\r\n      return (\r\n        <div className={styles.chosen}>\r\n          {this.props.items.value.map((item: string) => (\r\n            <div key={`item_${item}`} className={styles.item}>\r\n              <Pill\r\n                icon=\"fe-x\"\r\n                text={' ' + item}\r\n                large={true}\r\n                onClick={() => {\r\n                  this.props.onRemoved(item);\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        {this.getChosenItems()}\r\n        {this.props.helpText ? <p>{this.props.helpText}</p> : <p />}\r\n        <TextInputElement\r\n          name={this.props.name}\r\n          placeholder={this.props.name}\r\n          showLabel={false}\r\n          onChange={this.handleInputChanged}\r\n          entry={this.state.currentInput}\r\n          autocomplete={true}\r\n          focus={true}\r\n          onBlur={this.handleValidateEmpty}\r\n          onEnter={this.handleAddItem}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport axios from 'axios';\r\nimport * as React from 'react';\r\nimport Button, { ButtonTypes } from 'components/button/Button';\r\nimport { getCookie } from 'external';\r\n\r\nexport interface UploadButtonState {}\r\n\r\nexport interface UploadButtonProps {\r\n  icon: string;\r\n  uploadText: string;\r\n  removeText: string;\r\n  url: string;\r\n  endpoint: string;\r\n  onUploadChanged: (url: string) => void;\r\n}\r\n\r\nexport default class UploadButton extends React.Component<UploadButtonProps, UploadButtonState> {\r\n  private filePicker: any;\r\n\r\n  constructor(props: UploadButtonProps) {\r\n    super(props);\r\n    this.state = {};\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private handleRemoveUpload(): void {\r\n    this.props.onUploadChanged(null);\r\n  }\r\n\r\n  private handleUploadFile(files: FileList): void {\r\n    const data = new FormData();\r\n    data.append('file', files[0]);\r\n\r\n    // if we have a csrf in our cookie, pass it along as a header\r\n    const csrf = getCookie('csrftoken');\r\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\r\n\r\n    axios\r\n      .post(this.props.endpoint, data, { headers })\r\n      .then(response => {\r\n        this.props.onUploadChanged(response.data.url);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <input\r\n          style={{\r\n            display: 'none'\r\n          }}\r\n          ref={ele => {\r\n            this.filePicker = ele;\r\n          }}\r\n          type=\"file\"\r\n          onChange={e => this.handleUploadFile(e.target.files)}\r\n        />\r\n        {this.props.url ? (\r\n          <Button\r\n            iconName=\"fe-trash\"\r\n            name={this.props.removeText}\r\n            topSpacing={true}\r\n            onClick={this.handleRemoveUpload}\r\n            type={ButtonTypes.tertiary}\r\n          />\r\n        ) : (\r\n          <Button\r\n            iconName={this.props.icon}\r\n            name={this.props.uploadText}\r\n            topSpacing={true}\r\n            onClick={() => {\r\n              this.filePicker.click();\r\n            }}\r\n            type={ButtonTypes.tertiary}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\r\nimport styles from 'components/flow/actions/action/Action.module.scss';\r\nimport { determineTypeConfig } from 'components/flow/helpers';\r\nimport { LocalizationFormProps } from 'components/flow/props';\r\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport UploadButton from 'components/uploadbutton/UploadButton';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { SendMsg, MsgTemplating } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport mutate from 'immutability-helper';\r\nimport { FormState, mergeForm, StringArrayEntry, StringEntry } from 'store/nodeEditor';\r\nimport { MaxOfTenItems, validate } from 'store/validators';\r\n\r\nimport { initializeLocalizedForm } from './helpers';\r\nimport i18n from 'config/i18n';\r\nimport { Trans } from 'react-i18next';\r\nimport { range } from 'utils';\r\nimport { renderIssues } from '../helpers';\r\n\r\nexport interface MsgLocalizationFormState extends FormState {\r\n  message: StringEntry;\r\n  quickReplies: StringArrayEntry;\r\n  audio: StringEntry;\r\n  templateVariables: StringEntry[];\r\n  templating: MsgTemplating;\r\n}\r\n\r\nexport default class MsgLocalizationForm extends React.Component<\r\n  LocalizationFormProps,\r\n  MsgLocalizationFormState\r\n> {\r\n  constructor(props: LocalizationFormProps) {\r\n    super(props);\r\n    this.state = initializeLocalizedForm(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^on/]\r\n    });\r\n  }\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  public handleMessageUpdate(text: string): boolean {\r\n    return this.handleUpdate({ text });\r\n  }\r\n\r\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\r\n    return this.handleUpdate({ quickReplies });\r\n  }\r\n\r\n  private handleAudioChanged(url: string): void {\r\n    this.handleUpdate({ audio: url });\r\n  }\r\n\r\n  private handleUpdate(keys: {\r\n    text?: string;\r\n    sendAll?: boolean;\r\n    quickReplies?: string[];\r\n    audio?: string;\r\n  }): boolean {\r\n    const updates: Partial<MsgLocalizationFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('text')) {\r\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, []);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('quickReplies')) {\r\n      updates.quickReplies = validate(\r\n        i18n.t('forms.quick_replies', 'Quick Replies'),\r\n        keys.quickReplies!,\r\n        [MaxOfTenItems]\r\n      );\r\n    }\r\n\r\n    if (keys.hasOwnProperty('audio')) {\r\n      updates.audio! = { value: keys.audio! };\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    const { message: text, quickReplies, audio, templateVariables } = this.state;\r\n\r\n    // make sure we are valid for saving, only quick replies can be invalid\r\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\r\n    const valid =\r\n      typeConfig.localizeableKeys!.indexOf('quick_replies') > -1\r\n        ? this.handleQuickRepliesUpdate(this.state.quickReplies.value)\r\n        : true;\r\n\r\n    if (valid) {\r\n      const translations: any = {};\r\n      if (text.value) {\r\n        translations.text = text.value;\r\n      }\r\n\r\n      if (quickReplies.value && quickReplies.value.length > 0) {\r\n        translations.quick_replies = quickReplies.value;\r\n      }\r\n\r\n      if (audio.value) {\r\n        translations.audio_url = audio.value;\r\n      }\r\n\r\n      const localizations = [\r\n        {\r\n          uuid: this.props.nodeSettings.originalAction!.uuid,\r\n          translations\r\n        }\r\n      ];\r\n\r\n      // if we have template variables, they show up on their own key\r\n      const hasTemplateVariables = templateVariables.find(\r\n        (entry: StringEntry) => entry.value.length > 0\r\n      );\r\n      if (hasTemplateVariables) {\r\n        localizations.push({\r\n          uuid: this.state.templating.uuid,\r\n          translations: { variables: templateVariables.map((entry: StringEntry) => entry.value) }\r\n        });\r\n      }\r\n\r\n      this.props.updateLocalizations(this.props.language.id, localizations);\r\n\r\n      // notify our modal we are done\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private handleAddQuickReply(newQuickReply: string): boolean {\r\n    const newReplies = [...this.state.quickReplies.value];\r\n    if (newReplies.length >= 10) {\r\n      return false;\r\n    }\r\n\r\n    // we don't allow two quick replies with the same name\r\n    const isNew = !newReplies.find(\r\n      (reply: string) => reply.toLowerCase() === newQuickReply.toLowerCase()\r\n    );\r\n\r\n    if (isNew) {\r\n      newReplies.push(newQuickReply);\r\n      this.setState({\r\n        quickReplies: { value: newReplies }\r\n      });\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private handleRemoveQuickReply(toRemove: string): void {\r\n    this.setState({\r\n      quickReplies: {\r\n        value: this.state.quickReplies.value.filter((reply: string) => reply !== toRemove)\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\r\n    const entry = validate(`Variable ${num + 1}`, updatedText, []);\r\n\r\n    const templateVariables = mutate(this.state.templateVariables, {\r\n      $merge: { [num]: entry }\r\n    }) as StringEntry[];\r\n\r\n    this.setState({ templateVariables });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\r\n    const tabs: Tab[] = [];\r\n\r\n    if (\r\n      this.state.templating &&\r\n      typeConfig.localizeableKeys!.indexOf('templating.variables') > -1\r\n    ) {\r\n      const hasLocalizedValue = !!this.state.templateVariables.find(\r\n        (entry: StringEntry) => entry.value.length > 0\r\n      );\r\n\r\n      const variable = i18n.t('forms.variable', 'Variable');\r\n\r\n      tabs.push({\r\n        name: 'WhatsApp',\r\n        body: (\r\n          <>\r\n            <p>\r\n              {i18n.t(\r\n                'forms.whatsapp_warning',\r\n                'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\r\n              )}\r\n            </p>\r\n            {this.state.templating && this.state.templating.variables.length > 0 ? (\r\n              <>\r\n                {range(0, this.state.templating.variables.length).map((num: number) => {\r\n                  const entry = this.state.templateVariables[num] || { value: '' };\r\n                  return (\r\n                    <div className={styles.variable} key={'tr_arg_' + num}>\r\n                      <TextInputElement\r\n                        name={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\r\n                        showLabel={false}\r\n                        placeholder={`${this.props.language.name} ${variable} ${num + 1}`}\r\n                        onChange={(updatedText: string) => {\r\n                          this.handleTemplateVariableChanged(updatedText, num);\r\n                        }}\r\n                        entry={entry}\r\n                        autocomplete={true}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </>\r\n            ) : null}\r\n          </>\r\n        ),\r\n        checked: hasLocalizedValue\r\n      });\r\n    }\r\n\r\n    if (typeConfig.localizeableKeys!.indexOf('quick_replies') > -1) {\r\n      tabs.push({\r\n        name: 'Quick Replies',\r\n        body: (\r\n          <>\r\n            <MultiChoiceInput\r\n              name={i18n.t('forms.quick_reply', 'Quick Reply')}\r\n              helpText={\r\n                <Trans\r\n                  i18nKey=\"forms.localized_quick_replies\"\r\n                  values={{ language: this.props.language.name }}\r\n                >\r\n                  Add a new [[language]] Quick Reply and press enter.\r\n                </Trans>\r\n              }\r\n              items={this.state.quickReplies}\r\n              onRemoved={this.handleRemoveQuickReply}\r\n              onItemAdded={this.handleAddQuickReply}\r\n            />\r\n          </>\r\n        ),\r\n        checked: this.state.quickReplies.value.length > 0\r\n      });\r\n    }\r\n\r\n    let audioButton: JSX.Element | null = null;\r\n    if (typeConfig.localizeableKeys!.indexOf('audio_url') > 0) {\r\n      audioButton = (\r\n        <UploadButton\r\n          icon=\"fe-mic\"\r\n          uploadText=\"Upload Recording\"\r\n          removeText=\"Remove Recording\"\r\n          url={this.state.audio.value}\r\n          endpoint={this.context.config.endpoints.attachments}\r\n          onUploadChanged={this.handleAudioChanged}\r\n        />\r\n      );\r\n    }\r\n\r\n    const translation = i18n.t('forms.translation', 'Translation');\r\n\r\n    return (\r\n      <Dialog\r\n        title={typeConfig.name}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        tabs={tabs}\r\n      >\r\n        <div data-spec=\"translation-container\">\r\n          <div data-spec=\"text-to-translate\" className={styles.translate_from}>\r\n            {(this.props.nodeSettings.originalAction as SendMsg).text}\r\n          </div>\r\n        </div>\r\n\r\n        <TextInputElement\r\n          name={i18n.t('forms.message', 'Message')}\r\n          showLabel={false}\r\n          onChange={this.handleMessageUpdate}\r\n          entry={this.state.message}\r\n          placeholder={`${this.props.language.name} ${translation}`}\r\n          autocomplete={true}\r\n          focus={true}\r\n          textarea={true}\r\n        />\r\n\r\n        {audioButton}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Action } from 'flowTypes';\r\n\r\n/* istanbul ignore next */\r\nconst MissingComp: React.SFC<Action> = ({ type }): JSX.Element => {\r\n  return <div className=\"placeholder\">No implementation yet for {type}</div>;\r\n};\r\n\r\nexport default MissingComp;\r\n","import * as React from 'react';\r\nimport { PlayAudio } from 'flowTypes';\r\n\r\nconst PlayAudioComp: React.SFC<PlayAudio> = (action: PlayAudio): JSX.Element => {\r\n  return <div>{action.audio_url}</div>;\r\n};\r\n\r\nexport default PlayAudioComp;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { FormState, mergeForm, StringEntry } from 'store/nodeEditor';\r\nimport { validate, Required } from 'store/validators';\r\n\r\nimport { initializeForm, stateToAction } from './helpers';\r\nimport i18n from 'config/i18n';\r\nimport { Trans } from 'react-i18next';\r\nimport { renderIssues } from '../helpers';\r\n\r\nexport interface PlayAudioFormState extends FormState {\r\n  audio: StringEntry;\r\n}\r\n\r\nexport default class PlayAudioForm extends React.Component<ActionFormProps, PlayAudioFormState> {\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n    this.state = initializeForm(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public handleAudioUpdate(text: string): boolean {\r\n    const updates: Partial<PlayAudioFormState> = {};\r\n    updates.audio = validate(i18n.t('forms.recording', 'Recording'), text, [Required]);\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // make sure we validate untouched text fields\r\n    const valid = this.handleAudioUpdate(this.state.audio.value);\r\n\r\n    if (valid) {\r\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\r\n\r\n      // notify our modal we are done\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p>{i18n.t('forms.recording_label', 'Previous Recording')}</p>\r\n        <TextInputElement\r\n          name={i18n.t('forms.message', 'Message')}\r\n          showLabel={false}\r\n          onChange={this.handleAudioUpdate}\r\n          entry={this.state.audio}\r\n          autocomplete={true}\r\n          focus={true}\r\n          helpText={\r\n            <Trans i18nKey=\"forms.play_audio_help_text\">\r\n              Enter a variable that contains a recording the contact has previously recorded. For\r\n              example, @results.voicemail or @fields.short_bio.\r\n            </Trans>\r\n          }\r\n        />\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { getActionUUID } from 'components/flow/actions/helpers';\r\nimport { PlayAudioFormState } from 'components/flow/actions/playaudio/PlayAudioForm';\r\nimport { Types } from 'config/interfaces';\r\nimport { PlayAudio } from 'flowTypes';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): PlayAudioFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.play_audio) {\r\n    const action = settings.originalAction as PlayAudio;\r\n    return {\r\n      audio: { value: action.audio_url },\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    audio: { value: '' },\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (\r\n  settings: NodeEditorSettings,\r\n  state: PlayAudioFormState\r\n): PlayAudio => ({\r\n  audio_url: state.audio.value,\r\n  type: Types.play_audio,\r\n  uuid: getActionUUID(settings, Types.say_msg)\r\n});\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\n\r\nimport styles from './MediaPlayer.module.scss';\r\n\r\nexport interface MediaPlayerProps {\r\n  url: string;\r\n  triggered?: boolean;\r\n}\r\n\r\ninterface MediaPlayerState {\r\n  durationSeconds: number;\r\n  currentSeconds: number;\r\n  progress: number;\r\n  playing: boolean;\r\n}\r\n\r\nexport class MediaPlayer extends React.Component<MediaPlayerProps, MediaPlayerState> {\r\n  private ele: HTMLAudioElement;\r\n\r\n  private stroke = 1;\r\n  private radius = 9;\r\n\r\n  private radiusNormalized = this.radius - this.stroke * 2;\r\n  private circumference = this.radiusNormalized * 2 * Math.PI;\r\n\r\n  constructor(props: MediaPlayerProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      durationSeconds: 0,\r\n      currentSeconds: 0,\r\n      playing: false,\r\n      progress: 0\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private handleTimeUpdate(e: React.SyntheticEvent<HTMLAudioElement>): void {\r\n    const currentTime = this.ele.currentTime || 0;\r\n    const duration = this.ele.duration || 0;\r\n\r\n    this.setState((prevState: MediaPlayerState) => {\r\n      if ((this.ele.ended || currentTime === 0) && prevState.playing) {\r\n        setTimeout(() => {\r\n          this.setState({ progress: 0, playing: false });\r\n        }, 500);\r\n      }\r\n\r\n      return {\r\n        currentSeconds: this.ele.ended ? 0 : currentTime,\r\n        durationSeconds: duration,\r\n        playing: currentTime > 0,\r\n        progress: duration > 0 ? Math.floor((currentTime / duration) * 100) : 0\r\n      };\r\n    });\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    if (this.props.triggered) {\r\n      this.handleTogglePlay(null);\r\n    }\r\n  }\r\n\r\n  private handleTogglePlay(e: React.MouseEvent<HTMLDivElement>): void {\r\n    if (this.state.playing) {\r\n      this.ele.pause();\r\n      this.ele.currentTime = 0;\r\n    } else {\r\n      this.ele.play();\r\n    }\r\n\r\n    if (e !== null) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private handleRef(ref: HTMLAudioElement): any {\r\n    return (this.ele = ref);\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: MediaPlayerProps): void {\r\n    if (this.props.url !== prevProps.url) {\r\n      this.setState({\r\n        durationSeconds: 0,\r\n        currentSeconds: 0,\r\n        playing: false,\r\n        progress: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const progress = this.state.progress || 0;\r\n    const strokeDashoffset = this.circumference - (progress / 100) * this.circumference;\r\n\r\n    return (\r\n      <div\r\n        className={styles.player + ' ' + (this.state.playing ? styles.playing : '')}\r\n        style={{ height: this.radius * 2, width: this.radius * 2 }}\r\n        onMouseDown={this.handleTogglePlay}\r\n      >\r\n        <audio ref={this.handleRef} onTimeUpdate={this.handleTimeUpdate} src={this.props.url} />\r\n\r\n        <div className={styles.circles}>\r\n          <svg height={this.radius * 2} width={this.radius * 2}>\r\n            <circle\r\n              className={styles.circle_background}\r\n              stroke=\"#fff\"\r\n              fill=\"#fff\"\r\n              strokeWidth={this.stroke}\r\n              r={this.radiusNormalized}\r\n              cx={this.radius}\r\n              cy={this.radius}\r\n            />\r\n            <circle\r\n              className={styles.circle_background}\r\n              stroke=\"#ddd\"\r\n              fill=\"transparent\"\r\n              strokeWidth={this.stroke}\r\n              r={this.radiusNormalized}\r\n              cx={this.radius}\r\n              cy={this.radius}\r\n            />\r\n            <circle\r\n              className={styles.circle_foreground}\r\n              stroke=\"cornflowerblue\"\r\n              fill=\"transparent\"\r\n              strokeWidth={this.stroke}\r\n              strokeDasharray={this.circumference + ' ' + this.circumference}\r\n              style={{ strokeDashoffset }}\r\n              r={this.radiusNormalized}\r\n              cx={this.radius}\r\n              cy={this.radius}\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div className={styles.button + ' ' + (this.state.playing ? 'fe-stop' : 'fe-play_arrow')} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\r\nimport { SayMsg } from 'flowTypes';\r\nimport * as React from 'react';\r\n\r\nimport styles from './SayMsg.module.scss';\r\nimport i18n from 'config/i18n';\r\n\r\nexport const PLACEHOLDER = i18n.t('actions.say_msg.placeholder', 'Send a message to the contact');\r\n\r\nconst SayMsgComp: React.SFC<SayMsg> = (action: SayMsg): JSX.Element => {\r\n  if (action.text) {\r\n    return (\r\n      <>\r\n        <div className={styles.text}>{action.text}</div>\r\n\r\n        {action.audio_url ? (\r\n          <div className={styles.recording}>\r\n            <MediaPlayer url={action.audio_url} />\r\n          </div>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\r\n};\r\n\r\nexport default SayMsgComp;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport UploadButton from 'components/uploadbutton/UploadButton';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport * as React from 'react';\r\nimport { FormState, mergeForm, StringEntry } from 'store/nodeEditor';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\n\r\nimport { initializeForm, stateToAction } from './helpers';\r\nimport i18n from 'config/i18n';\r\nimport { renderIssues } from '../helpers';\r\n\r\nexport interface SayMsgFormState extends FormState {\r\n  message: StringEntry;\r\n  audio: StringEntry;\r\n}\r\n\r\nexport default class SayMsgForm extends React.Component<ActionFormProps, SayMsgFormState> {\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n    this.state = initializeForm(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  private handleUpdate(keys: { text?: string }, submitting = false): boolean {\r\n    const updates: Partial<SayMsgFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('text')) {\r\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  public handleMessageUpdate(text: string, name: string, submitting = false): boolean {\r\n    return this.handleUpdate({ text }, submitting);\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // make sure we validate untouched text fields\r\n    const valid = this.handleUpdate({ text: this.state.message.value }, true);\r\n\r\n    if (valid) {\r\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\r\n\r\n      // notify our modal we are done\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private handleUploadChanged(url: string): void {\r\n    this.setState({ audio: { value: url } });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <TextInputElement\r\n          name={i18n.t('forms.message', 'Message')}\r\n          showLabel={false}\r\n          onChange={this.handleMessageUpdate}\r\n          entry={this.state.message}\r\n          autocomplete={true}\r\n          focus={true}\r\n          textarea={true}\r\n        />\r\n\r\n        <UploadButton\r\n          icon=\"fe-mic\"\r\n          uploadText=\"Upload Recording\"\r\n          removeText=\"Remove Recording\"\r\n          url={this.state.audio.value}\r\n          endpoint={this.context.config.endpoints.attachments}\r\n          onUploadChanged={this.handleUploadChanged}\r\n        />\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { getActionUUID } from 'components/flow/actions/helpers';\r\nimport { SayMsgFormState } from 'components/flow/actions/saymsg/SayMsgForm';\r\nimport { Types } from 'config/interfaces';\r\nimport { SayMsg } from 'flowTypes';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): SayMsgFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.say_msg) {\r\n    const action = settings.originalAction as SayMsg;\r\n    return {\r\n      message: { value: action.text },\r\n      audio: { value: action.audio_url },\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    message: { value: '' },\r\n    audio: { value: '' },\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (settings: NodeEditorSettings, state: SayMsgFormState): SayMsg => ({\r\n  text: state.message.value,\r\n  audio_url: state.audio.value,\r\n  type: Types.say_msg,\r\n  uuid: getActionUUID(settings, Types.say_msg)\r\n});\r\n","import { getRecipients, renderAssetList } from 'components/flow/actions/helpers';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { BroadcastMsg } from 'flowTypes';\r\nimport * as React from 'react';\r\n\r\nimport styles from './SendBroadcast.module.scss';\r\nimport i18n from 'config/i18n';\r\n\r\nexport const PLACEHOLDER = i18n.t(\r\n  'actions.send_broadcast.placeholder',\r\n  'Send a message to the contact'\r\n);\r\n\r\nconst MAX_TO_SHOW = 5;\r\n\r\nconst SendBroadcastComp: React.SFC<BroadcastMsg> = (\r\n  action: BroadcastMsg,\r\n  context: any\r\n): JSX.Element => {\r\n  const assets = getRecipients(action);\r\n  if (action.text) {\r\n    return (\r\n      <div className={styles.node}>\r\n        <div className={styles.to}>\r\n          {renderAssetList(assets, MAX_TO_SHOW, context.config.endpoints)}\r\n        </div>\r\n        <div className={styles.message}>\r\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\r\n            <div key={action.uuid + idx} className={styles.line}>\r\n              {line}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\r\n};\r\n\r\nSendBroadcastComp.contextTypes = {\r\n  config: fakePropType\r\n};\r\n\r\nexport default SendBroadcastComp;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { initializeForm, stateToAction } from 'components/flow/actions/sendbroadcast/helpers';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TextInputElement, { Count } from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport { AssetArrayEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\nimport i18n from 'config/i18n';\r\nimport { renderIssues } from '../helpers';\r\n\r\nexport interface SendBroadcastFormState extends FormState {\r\n  message: StringEntry;\r\n  recipients: AssetArrayEntry;\r\n}\r\n\r\n// Note: action prop is only used for its uuid (see onValid)\r\nexport default class SendBroadcastForm extends React.Component<\r\n  ActionFormProps,\r\n  SendBroadcastFormState\r\n> {\r\n  public static contextTypes = {\r\n    endpoints: fakePropType,\r\n    assetService: fakePropType\r\n  };\r\n\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n    this.state = initializeForm(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\r\n    return this.handleUpdate({ recipients });\r\n  }\r\n\r\n  public handleMessageUpdate(text: string): boolean {\r\n    return this.handleUpdate({ text });\r\n  }\r\n\r\n  private handleUpdate(keys: { text?: string; recipients?: Asset[] }, submitting = false): boolean {\r\n    const updates: Partial<SendBroadcastFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('recipients')) {\r\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients!, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('text')) {\r\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // validate in case they never updated an empty field\r\n    const valid = this.handleUpdate(\r\n      {\r\n        text: this.state.message.value,\r\n        recipients: this.state.recipients.value!\r\n      },\r\n      true\r\n    );\r\n\r\n    if (valid) {\r\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\r\n\r\n      // notify our modal we are done\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <AssetSelector\r\n          name={i18n.t('forms.recipients', 'Recipients')}\r\n          assets={this.props.assetStore.recipients}\r\n          entry={this.state.recipients}\r\n          completion={{ assetStore: this.props.assetStore, schema: this.props.completionSchema }}\r\n          searchable={true}\r\n          multi={true}\r\n          onChange={this.handleRecipientsChanged}\r\n        />\r\n        <p />\r\n        <TextInputElement\r\n          name={i18n.t('forms.message', 'Message')}\r\n          showLabel={false}\r\n          count={Count.SMS}\r\n          onChange={this.handleMessageUpdate}\r\n          entry={this.state.message}\r\n          autocomplete={true}\r\n          focus={true}\r\n          textarea={true}\r\n        />\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getActionUUID,\r\n  getExpressions,\r\n  getRecipients,\r\n  getRecipientsByAsset\r\n} from 'components/flow/actions/helpers';\r\nimport { SendBroadcastFormState } from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\r\nimport { Types } from 'config/interfaces';\r\nimport { BroadcastMsg } from 'flowTypes';\r\nimport { AssetType } from 'store/flowContext';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): SendBroadcastFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.send_broadcast) {\r\n    let action = settings.originalAction as BroadcastMsg;\r\n\r\n    // check if our form should use a localized action\r\n    if (settings.localizations && settings.localizations.length > 0) {\r\n      const localized = settings.localizations[0];\r\n      if (localized.isLocalized()) {\r\n        action = settings.localizations[0].getObject() as BroadcastMsg;\r\n      } else {\r\n        return {\r\n          message: { value: '' },\r\n          recipients: { value: [] },\r\n          valid: true\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      message: { value: action.text },\r\n      recipients: { value: getRecipients(action) },\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    message: { value: '' },\r\n    recipients: { value: [] },\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (\r\n  settings: NodeEditorSettings,\r\n  formState: SendBroadcastFormState\r\n): BroadcastMsg => {\r\n  return {\r\n    legacy_vars: getExpressions(formState.recipients.value),\r\n    contacts: getRecipientsByAsset(formState.recipients.value, AssetType.Contact),\r\n    groups: getRecipientsByAsset(formState.recipients.value, AssetType.Group),\r\n    text: formState.message.value,\r\n    type: Types.send_broadcast,\r\n    uuid: getActionUUID(settings, Types.send_broadcast)\r\n  };\r\n};\r\n","import * as React from 'react';\r\nimport { SendEmail } from 'flowTypes';\r\n\r\nconst SendEmailComp: React.SFC<SendEmail> = ({ subject }): JSX.Element => <div>{subject}</div>;\r\n\r\nexport default SendEmailComp;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\r\nimport React from 'react';\r\nimport { StringArrayEntry } from 'store/nodeEditor';\r\nimport { getSelectClass } from 'utils';\r\nimport { tagging } from 'utils/reactselect';\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nexport type TagList = Array<{ label: string; value: string }>;\r\n\r\nexport interface TaggingElementProps extends FormElementProps {\r\n  placeholder?: string;\r\n  prompt: string;\r\n  createPrompt?: string;\r\n  onChange?: (values: string[]) => void;\r\n  onCheckValid: (value: string) => boolean;\r\n}\r\n\r\nexport const tagsToOptions = (tags: StringArrayEntry): TagList => {\r\n  return tags.value.map(tag => ({ label: tag, value: tag }));\r\n};\r\n\r\nexport const optionsToTags = (tags: TagList): string[] =>\r\n  tags.map(tag => {\r\n    return tag.label;\r\n  });\r\n\r\nexport default class TaggingElement extends React.Component<TaggingElementProps> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public handleUpdateTags(tags: TagList): void {\r\n    if (this.props.onChange) {\r\n      this.props.onChange(optionsToTags(tags));\r\n    }\r\n  }\r\n\r\n  public handleCheckValid(label: string): boolean {\r\n    if (!label || label.trim().length === 0) {\r\n      return false;\r\n    }\r\n    return this.props.onCheckValid(label);\r\n  }\r\n\r\n  private arrowRenderer(): JSX.Element {\r\n    return <div />;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const className: string = getSelectClass((this.props.entry.validationFailures || []).length);\r\n\r\n    const tags = tagsToOptions(this.props.entry);\r\n    return (\r\n      <FormElement name={this.props.name} entry={this.props.entry}>\r\n        <CreatableSelect\r\n          styles={tagging as any}\r\n          className={className}\r\n          name={this.props.name}\r\n          placeholder={this.props.placeholder}\r\n          value={tags}\r\n          onChange={this.handleUpdateTags as any}\r\n          isMulti={true}\r\n          isSearchable={true}\r\n          isValidNewOption={this.handleCheckValid}\r\n          noOptionsMessage={() => this.props.prompt}\r\n          formatCreateLabel={(input: string) => {\r\n            return this.props.createPrompt !== undefined\r\n              ? this.props.createPrompt + input\r\n              : 'Create new ' + input;\r\n          }}\r\n          options={[]}\r\n        />\r\n      </FormElement>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport TaggingElement from 'components/form/select/tags/TaggingElement';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { FormState, mergeForm, StringArrayEntry, StringEntry } from 'store/nodeEditor';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\n\r\nimport { initializeForm, stateToAction } from './helpers';\r\nimport styles from './SendEmailForm.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { renderIssues } from '../helpers';\r\n\r\nconst EMAIL_PATTERN = /\\S+@\\S+\\.\\S+/;\r\n\r\nexport interface SendEmailFormState extends FormState {\r\n  recipients: StringArrayEntry;\r\n  subject: StringEntry;\r\n  body: StringEntry;\r\n}\r\n\r\nexport default class SendEmailForm extends React.Component<ActionFormProps, SendEmailFormState> {\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n\r\n    this.state = initializeForm(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public handleRecipientsChanged(recipients: string[]): boolean {\r\n    return this.handleUpdate({ recipients });\r\n  }\r\n\r\n  public handleSubjectChanged(subject: string): boolean {\r\n    return this.handleUpdate({ subject });\r\n  }\r\n\r\n  public handleBodyChanged(body: string): boolean {\r\n    return this.handleUpdate({ body });\r\n  }\r\n\r\n  private handleUpdate(\r\n    keys: { recipients?: string[]; subject?: string; body?: string },\r\n    submitting = false\r\n  ): boolean {\r\n    const updates: Partial<SendEmailFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('recipients')) {\r\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients!, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('subject')) {\r\n      updates.subject = validate(i18n.t('forms.subject', 'Subject'), keys.subject!, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('body')) {\r\n      updates.body = validate(i18n.t('forms.body', 'Body'), keys.body!, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  public handleSave(): void {\r\n    // validate in case they never updated an empty field\r\n    const valid = this.handleUpdate(\r\n      {\r\n        recipients: this.state.recipients.value,\r\n        subject: this.state.subject.value,\r\n        body: this.state.body.value\r\n      },\r\n      true\r\n    );\r\n\r\n    if (valid) {\r\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\r\n\r\n      // notify our modal we are done\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public handleCheckValid(value: string): boolean {\r\n    return EMAIL_PATTERN.test(value) || value.startsWith('@');\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <div className={styles.ele}>\r\n          <TaggingElement\r\n            name={i18n.t('forms.email_recipient_name', 'Recipient')}\r\n            placeholder={i18n.t('forms.email_recipient_placeholder', 'To')}\r\n            prompt={i18n.t('forms.email_recipient_prompt', 'Enter email address')}\r\n            onCheckValid={this.handleCheckValid}\r\n            entry={this.state.recipients}\r\n            onChange={this.handleRecipientsChanged}\r\n            createPrompt={''}\r\n          />\r\n          <TextInputElement\r\n            __className={styles.subject}\r\n            name={i18n.t('forms.subject', 'Subject')}\r\n            placeholder={i18n.t('forms.subject', 'Subject')}\r\n            onChange={this.handleSubjectChanged}\r\n            entry={this.state.subject}\r\n            autocomplete={true}\r\n          />\r\n          <TextInputElement\r\n            __className={styles.message}\r\n            name={i18n.t('forms.message', 'Message')}\r\n            showLabel={false}\r\n            onChange={this.handleBodyChanged}\r\n            entry={this.state.body}\r\n            autocomplete={true}\r\n            textarea={true}\r\n          />\r\n        </div>\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { getActionUUID } from 'components/flow/actions/helpers';\r\nimport { SendEmailFormState } from 'components/flow/actions/sendemail/SendEmailForm';\r\nimport { Types } from 'config/interfaces';\r\nimport { SendEmail } from 'flowTypes';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): SendEmailFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.send_email) {\r\n    const action = settings.originalAction as SendEmail;\r\n    return {\r\n      body: { value: action.body },\r\n      subject: { value: action.subject },\r\n      recipients: { value: action.addresses },\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    body: { value: '' },\r\n    subject: { value: '' },\r\n    recipients: { value: [] },\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const stateToAction = (\r\n  settings: NodeEditorSettings,\r\n  formState: SendEmailFormState\r\n): SendEmail => {\r\n  return {\r\n    addresses: formState.recipients.value,\r\n    subject: formState.subject.value,\r\n    body: formState.body.value,\r\n    type: Types.send_email,\r\n    uuid: getActionUUID(settings, Types.send_email)\r\n  };\r\n};\r\n","import Pill from 'components/pill/Pill';\r\nimport { SendMsg } from 'flowTypes';\r\nimport * as React from 'react';\r\n\r\nimport styles from './SendMsg.module.scss';\r\nimport i18n from 'config/i18n';\r\n\r\nexport const PLACEHOLDER = i18n.t('actions.send_msg.placeholder', 'Send a message to the contact');\r\n\r\nconst SendMsgComp: React.SFC<SendMsg> = (action: SendMsg): JSX.Element => {\r\n  if (action.text) {\r\n    let replies = null;\r\n\r\n    let quickReplies = action.quick_replies || [];\r\n    if (quickReplies.length > 0) {\r\n      replies = (\r\n        <div className={styles.quick_replies}>\r\n          {quickReplies.map(reply => (\r\n            <Pill\r\n              style={{ marginLeft: 4, marginTop: 4 }}\r\n              maxLength={20}\r\n              advanced={true}\r\n              key={action.uuid + reply}\r\n              text={reply}\r\n            />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\r\n            <div key={action.uuid + idx} className={styles.line}>\r\n              {line}\r\n            </div>\r\n          ))}\r\n          {action.attachments && action.attachments.length > 0 ? (\r\n            <div className={`${styles.attachment} fe-paperclip`} />\r\n          ) : null}\r\n          {action.templating && action.templating.template ? (\r\n            <div className={`${styles.whatsapp} fe-whatsapp`} />\r\n          ) : null}\r\n          {action.topic ? <div className={`${styles.facebook} fe-facebook`} /> : null}\r\n        </div>\r\n        <div className={styles.summary}>{replies}</div>\r\n      </>\r\n    );\r\n  }\r\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\r\n};\r\n\r\nexport default SendMsgComp;\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport { getActionUUID } from 'components/flow/actions/helpers';\r\nimport { Attachment, SendMsgFormState } from 'components/flow/actions/sendmsg/SendMsgForm';\r\nimport { Types } from 'config/interfaces';\r\nimport { MsgTemplating, SendMsg } from 'flowTypes';\r\nimport { AssetStore, AssetType } from 'store/flowContext';\r\nimport { AssetEntry, NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\nimport { SelectOption } from 'components/form/select/SelectElement';\r\nimport { createUUID } from 'utils';\r\n\r\nexport const TOPIC_OPTIONS: SelectOption[] = [\r\n  { value: 'event', label: 'Event' },\r\n  { value: 'account', label: 'Account' },\r\n  { value: 'purchase', label: 'Purchase' },\r\n  { value: 'agent', label: 'Agent' }\r\n];\r\n\r\nexport const initializeForm = (\r\n  settings: NodeEditorSettings,\r\n  assetStore: AssetStore\r\n): SendMsgFormState => {\r\n  let template: AssetEntry = { value: null };\r\n  let templateVariables: StringEntry[] = [];\r\n\r\n  if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\r\n    const action = settings.originalAction as SendMsg;\r\n    const attachments: Attachment[] = [];\r\n    (action.attachments || []).forEach((attachmentString: string) => {\r\n      const splitPoint = attachmentString.indexOf(':');\r\n\r\n      const type = attachmentString.substring(0, splitPoint);\r\n      const attachment = {\r\n        type,\r\n        url: attachmentString.substring(splitPoint + 1),\r\n        uploaded: type.indexOf('/') > -1\r\n      };\r\n\r\n      attachments.push(attachment);\r\n    });\r\n\r\n    if (action.templating) {\r\n      const msgTemplate = action.templating.template;\r\n      template = {\r\n        value: {\r\n          id: msgTemplate.uuid,\r\n          name: msgTemplate.name,\r\n          type: AssetType.Template\r\n        }\r\n      };\r\n      templateVariables = action.templating.variables.map((value: string) => {\r\n        return {\r\n          value\r\n        };\r\n      });\r\n    }\r\n\r\n    return {\r\n      topic: { value: TOPIC_OPTIONS.find(option => option.value === action.topic) },\r\n      template,\r\n      templateVariables,\r\n      attachments,\r\n      message: { value: action.text },\r\n      quickReplies: { value: action.quick_replies || [] },\r\n      quickReplyEntry: { value: '' },\r\n      sendAll: action.all_urns,\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    topic: { value: null },\r\n    template,\r\n    templateVariables: [],\r\n    attachments: [],\r\n    message: { value: '' },\r\n    quickReplies: { value: [] },\r\n    quickReplyEntry: { value: '' },\r\n    sendAll: false,\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (settings: NodeEditorSettings, state: SendMsgFormState): SendMsg => {\r\n  const attachments = state.attachments\r\n    .filter((attachment: Attachment) => attachment.url.trim().length > 0)\r\n    .map((attachment: Attachment) => `${attachment.type}:${attachment.url}`);\r\n\r\n  let templating: MsgTemplating = null;\r\n\r\n  if (state.template && state.template.value) {\r\n    let templatingUUID = createUUID();\r\n    if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\r\n      const action = settings.originalAction as SendMsg;\r\n      if (\r\n        action.templating &&\r\n        action.templating.template &&\r\n        action.templating.template.uuid === state.template.value.id\r\n      ) {\r\n        templatingUUID = action.templating.uuid;\r\n      }\r\n    }\r\n\r\n    templating = {\r\n      uuid: templatingUUID,\r\n      template: {\r\n        uuid: state.template.value.id,\r\n        name: state.template.value.name\r\n      },\r\n      variables: state.templateVariables.map((variable: StringEntry) => variable.value)\r\n    };\r\n  }\r\n\r\n  const result: SendMsg = {\r\n    attachments,\r\n    text: state.message.value,\r\n    type: Types.send_msg,\r\n    all_urns: state.sendAll,\r\n    quick_replies: state.quickReplies.value,\r\n    uuid: getActionUUID(settings, Types.send_msg)\r\n  };\r\n\r\n  if (templating) {\r\n    result.templating = templating;\r\n  }\r\n\r\n  if (state.topic.value) {\r\n    result.topic = state.topic.value.value;\r\n  }\r\n\r\n  return result;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-member-accessibility */\r\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport { react as bindCallbacks } from 'auto-bind';\r\nimport axios from 'axios';\r\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport {\r\n  initializeForm as stateToForm,\r\n  stateToAction,\r\n  TOPIC_OPTIONS\r\n} from 'components/flow/actions/sendmsg/helpers';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport { hasUseableTranslation } from 'components/form/assetselector/helpers';\r\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\r\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\r\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\r\nimport TextInputElement, { Count } from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport Pill from 'components/pill/Pill';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { fetchAsset, getCookie } from 'external';\r\nimport { Template, TemplateOptions, TemplateTranslation } from 'flowTypes';\r\nimport mutate from 'immutability-helper';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport {\r\n  AssetEntry,\r\n  FormState,\r\n  mergeForm,\r\n  StringArrayEntry,\r\n  StringEntry,\r\n  SelectOptionEntry\r\n} from 'store/nodeEditor';\r\nimport { MaxOfTenItems, Required, shouldRequireIf, validate } from 'store/validators';\r\nimport { createUUID, range } from 'utils';\r\n\r\nimport styles from './SendMsgForm.module.scss';\r\nimport { hasFeature } from 'config/typeConfigs';\r\nimport { FeatureFilter } from 'config/interfaces';\r\n\r\nimport i18n from 'config/i18n';\r\nimport { Trans } from 'react-i18next';\r\nimport { TembaSelectStyle } from 'temba/TembaSelect';\r\n\r\nconst MAX_ATTACHMENTS = 3;\r\n\r\nconst TYPE_OPTIONS: SelectOption[] = [\r\n  { value: 'image', label: i18n.t('forms.image_url', 'Image URL') },\r\n  { value: 'audio', label: i18n.t('forms.audio_url', 'Audio URL') },\r\n  { value: 'video', label: i18n.t('forms.video_url', 'Video URL') }\r\n];\r\n\r\nconst NEW_TYPE_OPTIONS = TYPE_OPTIONS.concat([{ value: 'upload', label: 'Upload Attachment' }]);\r\n\r\nconst getAttachmentTypeOption = (type: string): SelectOption => {\r\n  return TYPE_OPTIONS.find((option: SelectOption) => option.value === type);\r\n};\r\n\r\nexport interface Attachment {\r\n  type: string;\r\n  url: string;\r\n  uploaded?: boolean;\r\n}\r\n\r\nexport interface SendMsgFormState extends FormState {\r\n  message: StringEntry;\r\n  quickReplies: StringArrayEntry;\r\n  quickReplyEntry: StringEntry;\r\n  sendAll: boolean;\r\n  attachments: Attachment[];\r\n  template: AssetEntry;\r\n  topic: SelectOptionEntry;\r\n  templateVariables: StringEntry[];\r\n  templateTranslation?: TemplateTranslation;\r\n}\r\n\r\nexport default class SendMsgForm extends React.Component<ActionFormProps, SendMsgFormState> {\r\n  private filePicker: any;\r\n\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n    this.state = stateToForm(this.props.nodeSettings, this.props.assetStore);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^on/]\r\n    });\r\n\r\n    // intialize our templates if we have them\r\n    if (this.state.template.value !== null) {\r\n      fetchAsset(this.props.assetStore.templates, this.state.template.value.id).then(\r\n        (asset: Asset) => {\r\n          if (asset !== null) {\r\n            this.handleTemplateChanged([asset]);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  private handleUpdate(\r\n    keys: {\r\n      text?: string;\r\n      sendAll?: boolean;\r\n      quickReplies?: string[];\r\n    },\r\n    submitting = false\r\n  ): boolean {\r\n    const updates: Partial<SendMsgFormState> = {};\r\n    if (keys.hasOwnProperty('text')) {\r\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('sendAll')) {\r\n      updates.sendAll = keys.sendAll;\r\n    }\r\n\r\n    if (keys.hasOwnProperty('quickReplies')) {\r\n      updates.quickReplies = validate(\r\n        i18n.t('forms.quick_replies', 'Quick Replies'),\r\n        keys.quickReplies,\r\n        [MaxOfTenItems]\r\n      );\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates) as SendMsgFormState;\r\n\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  public handleMessageUpdate(message: string, name: string, submitting = false): boolean {\r\n    return this.handleUpdate({ text: message }, submitting);\r\n  }\r\n\r\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\r\n    return this.handleUpdate({ quickReplies });\r\n  }\r\n\r\n  public handleSendAllUpdate(sendAll: boolean): boolean {\r\n    return this.handleUpdate({ sendAll });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // don't continue if our message already has errors\r\n    if (hasErrors(this.state.message)) {\r\n      return;\r\n    }\r\n\r\n    // make sure we validate untouched text fields and contact fields\r\n    let valid = this.handleMessageUpdate(this.state.message.value, null, true);\r\n\r\n    let templateVariables = this.state.templateVariables;\r\n    // make sure we don't have untouched template variables\r\n    this.state.templateVariables.forEach((variable: StringEntry, num: number) => {\r\n      const updated = validate(`Variable ${num + 1}`, variable.value, [Required]);\r\n      templateVariables = mutate(templateVariables, {\r\n        [num]: { $merge: updated }\r\n      }) as StringEntry[];\r\n      valid = valid && !hasErrors(updated);\r\n    });\r\n\r\n    valid = valid && !hasErrors(this.state.quickReplyEntry);\r\n\r\n    if (valid) {\r\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\r\n      // notify our modal we are done\r\n      this.props.onClose(false);\r\n    } else {\r\n      this.setState({ templateVariables, valid });\r\n    }\r\n  }\r\n\r\n  public handleAttachmentRemoved(index: number): void {\r\n    // we found a match, merge us in\r\n    const updated: any = mutate(this.state.attachments, {\r\n      $splice: [[index, 1]]\r\n    });\r\n    this.setState({ attachments: updated });\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private renderUpload(index: number, attachment: Attachment): JSX.Element {\r\n    return (\r\n      <div\r\n        className={styles.url_attachment}\r\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\r\n      >\r\n        <div className={styles.type_choice}>\r\n          <SelectElement\r\n            key={'attachment_type_' + index}\r\n            name={i18n.t('forms.type', 'Type')}\r\n            style={TembaSelectStyle.small}\r\n            entry={{\r\n              value: { label: attachment.type }\r\n            }}\r\n            options={TYPE_OPTIONS}\r\n          />\r\n        </div>\r\n        <div className={styles.url}>\r\n          <span className={styles.upload}>\r\n            <Pill\r\n              icon=\"fe-download\"\r\n              text=\"Download\"\r\n              large={true}\r\n              onClick={() => {\r\n                window.open(attachment.url, '_blank');\r\n              }}\r\n            />\r\n            <div className={styles.remove_upload}>\r\n              <Pill\r\n                icon=\"fe-x\"\r\n                text=\"Remove\"\r\n                large={true}\r\n                onClick={() => {\r\n                  this.handleAttachmentRemoved(index);\r\n                }}\r\n              />\r\n            </div>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private handleUploadFile(files: FileList): void {\r\n    let attachments: any = this.state.attachments;\r\n\r\n    // if we have a csrf in our cookie, pass it along as a header\r\n    const csrf = getCookie('csrftoken');\r\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\r\n\r\n    const data = new FormData();\r\n    data.append('file', files[0]);\r\n    axios\r\n      .post(this.context.config.endpoints.attachments, data, { headers })\r\n      .then(response => {\r\n        attachments = mutate(attachments, {\r\n          $push: [{ type: response.data.type, url: response.data.url, uploaded: true }]\r\n        });\r\n        this.setState({ attachments });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  private renderAttachment(index: number, attachment: Attachment): JSX.Element {\r\n    let attachments: any = this.state.attachments;\r\n    return (\r\n      <div\r\n        className={styles.url_attachment}\r\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\r\n      >\r\n        <div className={styles.type_choice}>\r\n          <SelectElement\r\n            key={'attachment_type_' + index}\r\n            style={TembaSelectStyle.small}\r\n            name={i18n.t('forms.type_options', 'Type Options')}\r\n            placeholder=\"Add Attachment\"\r\n            entry={{\r\n              value: index > -1 ? getAttachmentTypeOption(attachment.type) : null\r\n            }}\r\n            onChange={(option: any) => {\r\n              if (option.value === 'upload') {\r\n                window.setTimeout(() => {\r\n                  this.filePicker.click();\r\n                }, 200);\r\n              } else {\r\n                if (index === -1) {\r\n                  attachments = mutate(attachments, {\r\n                    $push: [{ type: option.value, url: '' }]\r\n                  });\r\n                } else {\r\n                  attachments = mutate(attachments, {\r\n                    [index]: {\r\n                      $set: { type: option.value, url: attachment.url }\r\n                    }\r\n                  });\r\n                }\r\n                this.setState({ attachments });\r\n              }\r\n            }}\r\n            options={index > -1 ? TYPE_OPTIONS : NEW_TYPE_OPTIONS}\r\n          />\r\n        </div>\r\n        {index > -1 ? (\r\n          <>\r\n            <div className={styles.url}>\r\n              <TextInputElement\r\n                placeholder=\"URL\"\r\n                name={i18n.t('forms.url', 'URL')}\r\n                onChange={(value: string) => {\r\n                  attachments = mutate(attachments, {\r\n                    [index]: { $set: { type: attachment.type, url: value } }\r\n                  });\r\n                  this.setState({ attachments });\r\n                }}\r\n                entry={{ value: attachment.url }}\r\n                autocomplete={true}\r\n              />\r\n            </div>\r\n            <div className={styles.remove}>\r\n              <Pill\r\n                icon=\"fe-x\"\r\n                text=\" Remove\"\r\n                large={true}\r\n                onClick={() => {\r\n                  this.handleAttachmentRemoved(index);\r\n                }}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderAttachments(): JSX.Element {\r\n    const attachments = this.state.attachments.map((attachment, index: number) =>\r\n      attachment.uploaded\r\n        ? this.renderUpload(index, attachment)\r\n        : this.renderAttachment(index, attachment)\r\n    );\r\n\r\n    const emptyOption =\r\n      this.state.attachments.length < MAX_ATTACHMENTS\r\n        ? this.renderAttachment(-1, { url: '', type: '' })\r\n        : null;\r\n    return (\r\n      <>\r\n        <p>\r\n          {i18n.t(\r\n            'forms.send_msg_summary',\r\n            'Add an attachment to each message. The attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.',\r\n            { count: MAX_ATTACHMENTS }\r\n          )}\r\n        </p>\r\n        {attachments}\r\n        {emptyOption}\r\n        <input\r\n          style={{\r\n            display: 'none'\r\n          }}\r\n          ref={ele => {\r\n            this.filePicker = ele;\r\n          }}\r\n          type=\"file\"\r\n          onChange={e => this.handleUploadFile(e.target.files)}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  private handleTemplateChanged(selected: Asset[]): void {\r\n    const template = selected ? selected[0] : null;\r\n\r\n    if (!template) {\r\n      this.setState({\r\n        template: { value: null },\r\n        templateTranslation: null,\r\n        templateVariables: []\r\n      });\r\n    } else {\r\n      const templateOptions = template.content as TemplateOptions;\r\n      const templateTranslation = templateOptions.translations[0];\r\n\r\n      const templateVariables =\r\n        this.state.templateVariables.length === 0 ||\r\n        (this.state.template.value && this.state.template.value.id !== template.id)\r\n          ? range(0, templateTranslation.variable_count).map(() => {\r\n              return {\r\n                value: ''\r\n              };\r\n            })\r\n          : this.state.templateVariables;\r\n\r\n      this.setState({\r\n        template: { value: template },\r\n        templateTranslation,\r\n        templateVariables\r\n      });\r\n    }\r\n  }\r\n\r\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\r\n    const entry = validate(`Variable ${num + 1}`, updatedText, [Required]);\r\n    const templateVariables = mutate(this.state.templateVariables, {\r\n      $merge: { [num]: entry }\r\n    }) as StringEntry[];\r\n    this.setState({ templateVariables });\r\n  }\r\n\r\n  private handleShouldExcludeTemplate(asset: Asset): boolean {\r\n    return !hasUseableTranslation(asset.content as Template);\r\n  }\r\n\r\n  private renderTopicConfig(): JSX.Element {\r\n    return (\r\n      <>\r\n        <p>\r\n          {i18n.t(\r\n            'forms.send_msg_facebook_warning',\r\n            'Sending bulk messages over a Facebook channel requires that a topic be specified if the user has not sent a message in the last 24 hours. Setting a topic to use over Facebook is especially important for the first message in your flow.'\r\n          )}\r\n        </p>\r\n        <SelectElement\r\n          key={'fb_method_select'}\r\n          name={i18n.t('forms.method', 'Method')}\r\n          entry={this.state.topic}\r\n          onChange={this.handleTopicUpdate}\r\n          options={TOPIC_OPTIONS}\r\n          placeholder={i18n.t(\r\n            'forms.send_msg_facebook_topic_placeholder',\r\n            'Select a topic to use over Facebook'\r\n          )}\r\n          clearable={true}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  private handleTopicUpdate(topic: SelectOption) {\r\n    this.setState({ topic: { value: topic } });\r\n  }\r\n\r\n  private renderTemplateConfig(): JSX.Element {\r\n    return (\r\n      <>\r\n        <p>\r\n          {i18n.t(\r\n            'forms.whatsapp_warning',\r\n            'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\r\n          )}\r\n        </p>\r\n        <AssetSelector\r\n          name={i18n.t('forms.template', 'template')}\r\n          noOptionsMessage=\"No templates found\"\r\n          assets={this.props.assetStore.templates}\r\n          entry={this.state.template}\r\n          onChange={this.handleTemplateChanged}\r\n          shouldExclude={this.handleShouldExcludeTemplate}\r\n          searchable={true}\r\n          formClearable={true}\r\n        />\r\n        {this.state.templateTranslation ? (\r\n          <>\r\n            <div className={styles.template_text}>{this.state.templateTranslation.content}</div>\r\n            {range(0, this.state.templateTranslation.variable_count).map((num: number) => {\r\n              return (\r\n                <div className={styles.variable} key={'tr_arg_' + num}>\r\n                  <TextInputElement\r\n                    name={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\r\n                    showLabel={false}\r\n                    placeholder={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\r\n                    onChange={(updatedText: string) => {\r\n                      this.handleTemplateVariableChanged(updatedText, num);\r\n                    }}\r\n                    entry={this.state.templateVariables[num]}\r\n                    autocomplete={true}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n\r\n  private handleAddQuickReply(newQuickReply: string): boolean {\r\n    const newReplies = [...this.state.quickReplies.value];\r\n    if (newReplies.length >= 10) {\r\n      return false;\r\n    }\r\n\r\n    // we don't allow two quick replies with the same name\r\n    const isNew = !newReplies.find(\r\n      (reply: string) => reply.toLowerCase() === newQuickReply.toLowerCase()\r\n    );\r\n\r\n    if (isNew) {\r\n      newReplies.push(newQuickReply);\r\n      this.setState({\r\n        quickReplies: { value: newReplies }\r\n      });\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private handleRemoveQuickReply(toRemove: string): void {\r\n    this.setState({\r\n      quickReplies: {\r\n        value: this.state.quickReplies.value.filter((reply: string) => reply !== toRemove)\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleQuickReplyEntry(quickReplyEntry: StringEntry): void {\r\n    this.setState({ quickReplyEntry });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    const quickReplies: Tab = {\r\n      name: 'Quick Replies',\r\n      body: (\r\n        <>\r\n          <p>\r\n            {i18n.t(\r\n              'forms.quick_replies_summary',\r\n              'Quick Replies are made into buttons for supported channels. For example, when asking a question, you might add a Quick Reply for \"Yes\" and one for \"No\".'\r\n            )}\r\n          </p>\r\n\r\n          <MultiChoiceInput\r\n            name={i18n.t('forms.quick_reply', 'quick_reply')}\r\n            helpText={\r\n              <Trans i18nKey=\"forms.add_quick_reply\">Add a new Quick Reply and press enter.</Trans>\r\n            }\r\n            items={this.state.quickReplies}\r\n            entry={this.state.quickReplyEntry}\r\n            onRemoved={this.handleRemoveQuickReply}\r\n            onItemAdded={this.handleAddQuickReply}\r\n            onEntryChanged={this.handleQuickReplyEntry}\r\n          />\r\n        </>\r\n      ),\r\n      checked: this.state.quickReplies.value.length > 0,\r\n      hasErrors: hasErrors(this.state.quickReplyEntry)\r\n    };\r\n\r\n    const attachments: Tab = {\r\n      name: 'Attachments',\r\n      body: this.renderAttachments(),\r\n      checked: this.state.attachments.length > 0\r\n    };\r\n\r\n    const advanced: Tab = {\r\n      name: 'Advanced',\r\n      body: (\r\n        <CheckboxElement\r\n          name={i18n.t('forms.all_destinations', 'All Destinations')}\r\n          title=\"All Destinations\"\r\n          labelClassName={styles.checkbox}\r\n          checked={this.state.sendAll}\r\n          description={i18n.t(\r\n            'forms.all_destinations',\r\n            \"Send a message to all destinations known for this contact. If you aren't sure what this means, leave it unchecked.\"\r\n          )}\r\n          onChange={this.handleSendAllUpdate}\r\n        />\r\n      ),\r\n      checked: this.state.sendAll\r\n    };\r\n\r\n    const tabs = [quickReplies, attachments, advanced];\r\n\r\n    if (hasFeature(this.context.config, FeatureFilter.HAS_WHATSAPP)) {\r\n      const templates: Tab = {\r\n        name: 'WhatsApp',\r\n        body: this.renderTemplateConfig(),\r\n        checked: this.state.template.value != null,\r\n        hasErrors: !!this.state.templateVariables.find((entry: StringEntry) => hasErrors(entry))\r\n      };\r\n      tabs.splice(0, 0, templates);\r\n    }\r\n\r\n    if (hasFeature(this.context.config, FeatureFilter.HAS_FACEBOOK)) {\r\n      const templates: Tab = {\r\n        name: 'Facebook',\r\n        body: this.renderTopicConfig(),\r\n        checked: this.state.topic.value != null\r\n      };\r\n      tabs.splice(0, 0, templates);\r\n    }\r\n\r\n    return (\r\n      <Dialog\r\n        title={typeConfig.name}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        tabs={tabs}\r\n      >\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <TextInputElement\r\n          name={i18n.t('forms.message', 'Message')}\r\n          showLabel={false}\r\n          count={Count.SMS}\r\n          onChange={this.handleMessageUpdate}\r\n          entry={this.state.message}\r\n          autocomplete={true}\r\n          focus={true}\r\n          textarea={true}\r\n        />\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { SetRunResult } from 'flowTypes';\r\nimport { emphasize } from 'utils';\r\n\r\nexport const getSavePlaceholder = (value: string, name: string): JSX.Element => (\r\n  <div>\r\n    Save {emphasize(value)} as {emphasize(name)}\r\n  </div>\r\n);\r\n\r\nexport const getClearPlaceholder = (name: string) => <div>Clear value for {emphasize(name)}</div>;\r\n\r\nconst SetRunResultComp: React.SFC<SetRunResult> = ({ value, name }): JSX.Element => {\r\n  if (value) {\r\n    return getSavePlaceholder(value, name);\r\n  }\r\n  return getClearPlaceholder(name);\r\n};\r\n\r\nexport default SetRunResultComp;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { Asset, AssetType } from 'store/flowContext';\r\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\r\nimport { snakify } from 'utils';\r\n\r\nimport { initializeForm, stateToAction } from './helpers';\r\nimport styles from './SetRunResultForm.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { Trans } from 'react-i18next';\r\n\r\nexport interface SetRunResultFormState extends FormState {\r\n  name: AssetEntry;\r\n  value: StringEntry;\r\n  category: StringEntry;\r\n}\r\n\r\nexport default class SetRunResultForm extends React.PureComponent<\r\n  ActionFormProps,\r\n  SetRunResultFormState\r\n> {\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n\r\n    this.state = initializeForm(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^on/]\r\n    });\r\n  }\r\n\r\n  private handleNameUpdate(selected: Asset[]): void {\r\n    if (selected) {\r\n      this.handleUpdate({ name: selected[0] });\r\n    } else {\r\n      this.handleUpdate({ name: null });\r\n    }\r\n  }\r\n\r\n  public handleValueUpdate(value: string): boolean {\r\n    return this.handleUpdate({ value });\r\n  }\r\n\r\n  public handleCategoryUpdate(category: string): boolean {\r\n    return this.handleUpdate({ category });\r\n  }\r\n\r\n  private handleUpdate(\r\n    keys: { name?: Asset; value?: string; category?: string },\r\n    submitting: boolean = false\r\n  ): boolean {\r\n    const updates: Partial<SetRunResultFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('name')) {\r\n      updates.name = validate(i18n.t('forms.name', 'Name'), keys.name, [\r\n        shouldRequireIf(submitting),\r\n        Alphanumeric,\r\n        StartIsNonNumeric\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('value')) {\r\n      updates.value = validate(i18n.t('forms.value', 'Value'), keys.value, []);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('category')) {\r\n      updates.category = validate(i18n.t('forms.category', 'Category'), keys.category, []);\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // make sure we validate untouched text fields\r\n    const valid = this.handleUpdate({ name: this.state.name.value }, true);\r\n\r\n    if (valid) {\r\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\r\n\r\n      // notify our modal we are done\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private handleCreateAssetFromInput(input: string): Asset {\r\n    return {\r\n      id: snakify(input),\r\n      name: input,\r\n      type: AssetType.Result\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n    const snaked =\r\n      !hasErrors(this.state.name) && this.state.name.value\r\n        ? '.' + snakify(this.state.name.value.name)\r\n        : '';\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <div className={styles.form}>\r\n          <AssetSelector\r\n            name={i18n.t('forms.result', 'Result')}\r\n            assets={this.props.assetStore.results}\r\n            entry={this.state.name}\r\n            searchable={true}\r\n            createPrefix={i18n.t('forms.create_prefix', 'New: ')}\r\n            onChange={this.handleNameUpdate}\r\n            createAssetFromInput={this.handleCreateAssetFromInput}\r\n            formClearable={true}\r\n            showLabel={true}\r\n            helpText={\r\n              <Trans\r\n                i18nKey=\"forms.result_name_help\"\r\n                values={{ resultFormat: `@results${snaked}` }}\r\n              >\r\n                By naming the result, you can reference it later using [[resultFormat]]\r\n              </Trans>\r\n            }\r\n          />\r\n\r\n          <TextInputElement\r\n            __className={styles.value}\r\n            name={i18n.t('forms.value', 'Value')}\r\n            showLabel={true}\r\n            onChange={this.handleValueUpdate}\r\n            entry={this.state.value}\r\n            autocomplete={true}\r\n            helpText=\"The value to save for this result or empty to clears it. You can use expressions, for example: @(title(input))\"\r\n          />\r\n          <TextInputElement\r\n            __className={styles.category}\r\n            name={i18n.t('forms.category', 'Category')}\r\n            placeholder=\"Optional\"\r\n            showLabel={true}\r\n            onChange={this.handleCategoryUpdate}\r\n            entry={this.state.category}\r\n            autocomplete={false}\r\n            helpText=\"An optional category for your result. For age, the value might be 17, but the category might be 'Young Adult'\"\r\n          />\r\n        </div>\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { getActionUUID } from 'components/flow/actions/helpers';\r\nimport { SetRunResultFormState } from 'components/flow/actions/setrunresult/SetRunResultForm';\r\nimport { Types } from 'config/interfaces';\r\nimport { SetRunResult } from 'flowTypes';\r\nimport { AssetType } from 'store/flowContext';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\nimport { snakify } from 'utils';\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): SetRunResultFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.set_run_result) {\r\n    const action = settings.originalAction as SetRunResult;\r\n\r\n    return {\r\n      name: {\r\n        value: {\r\n          id: snakify(action.name),\r\n          name: action.name,\r\n          type: AssetType.Result\r\n        }\r\n      },\r\n      value: { value: action.value },\r\n      category: { value: action.category },\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    name: { value: null },\r\n    value: { value: '' },\r\n    category: { value: '' },\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (\r\n  settings: NodeEditorSettings,\r\n  state: SetRunResultFormState\r\n): SetRunResult => {\r\n  return {\r\n    type: Types.set_run_result,\r\n    name: state.name.value.name,\r\n    value: state.value.value,\r\n    category: state.category.value,\r\n    uuid: getActionUUID(settings, Types.set_run_result)\r\n  };\r\n};\r\n","import * as React from 'react';\r\nimport { renderAssetList } from 'components/flow/actions/helpers';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { StartFlow } from 'flowTypes';\r\nimport { AssetType } from 'store/flowContext';\r\n\r\nconst StartFlowComp: React.SFC<StartFlow> = (\r\n  { flow: { name, uuid } },\r\n  context: any\r\n): JSX.Element => (\r\n  <>{renderAssetList([{ name, id: uuid, type: AssetType.Flow }], 3, context.config.endpoints)}</>\r\n);\r\n\r\nStartFlowComp.contextTypes = {\r\n  config: fakePropType\r\n};\r\n\r\nexport default StartFlowComp;\r\n","import { getRecipients, renderAssetList, renderAsset } from 'components/flow/actions/helpers';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { StartSession } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { AssetType } from 'store/flowContext';\r\n\r\nimport styles from './StartSession.module.scss';\r\n\r\nconst MAX_TO_SHOW = 5;\r\n\r\nexport const StartSessionComp: React.SFC<StartSession> = (\r\n  action: StartSession,\r\n  context: any\r\n): JSX.Element => {\r\n  const recipients = getRecipients(action);\r\n  return (\r\n    <div className={styles.node}>\r\n      <div className={styles.to}>\r\n        {action.create_contact\r\n          ? 'Create a new contact'\r\n          : action.contact_query\r\n          ? action.contact_query\r\n          : renderAssetList(recipients, MAX_TO_SHOW, context.config.endpoints)}\r\n      </div>\r\n      <div className={styles.flow}>\r\n        {renderAsset(\r\n          {\r\n            name: action.flow.name,\r\n            id: action.flow.uuid,\r\n            type: AssetType.Flow\r\n          },\r\n          context.config.endpoints\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStartSessionComp.contextTypes = {\r\n  config: fakePropType\r\n};\r\n\r\nexport default StartSessionComp;\r\n","import i18n from 'config/i18n';\r\n\r\nexport const WAIT_LABEL = i18n.t('forms.message_label', 'If the message response...');\r\nexport const EXPRESSION_LABEL = i18n.t('forms.expression_label', 'If the expression...');\r\nexport const GROUP_LABEL = i18n.t(\r\n  'forms.split_by_groups',\r\n  \"Select the groups you'd like to split by below\"\r\n);\r\n\r\nexport const OPERAND_LOCALIZATION_DESC = i18n.t(\r\n  'forms.localize_rules',\r\n  'Sometimes languages need special rules to route things properly. If a translation is not provided, the original rule will be used.'\r\n);\r\n\r\n// We intentionally don't localize these names\r\nexport enum DefaultExitNames {\r\n  All_Responses = 'All Responses',\r\n  No_Response = 'No Response',\r\n  Any_Value = 'Any Value',\r\n  Other = 'Other'\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport {\r\n  AssetArrayEntry,\r\n  AssetEntry,\r\n  FormState,\r\n  mergeForm,\r\n  StringEntry,\r\n  SelectOptionEntry\r\n} from 'store/nodeEditor';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\nimport { renderIf } from 'utils';\r\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\r\nimport { initializeForm, stateToAction } from './helpers';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport i18n from 'config/i18n';\r\nimport { renderIssues } from '../helpers';\r\n\r\nexport const START_TYPE_ASSETS = { label: 'Select recipients manually', value: 'assets' };\r\nexport const START_TYPE_CREATE = { label: 'Create a new contact', value: 'create_contact' };\r\nexport const START_TYPE_QUERY = { label: 'Select recipients from a query', value: 'contact_query' };\r\n\r\nconst START_TYPE_OPTIONS = [START_TYPE_ASSETS, START_TYPE_QUERY, START_TYPE_CREATE];\r\n\r\nexport interface StartSessionFormState extends FormState {\r\n  recipients: AssetArrayEntry;\r\n  flow: AssetEntry;\r\n  startType: SelectOptionEntry;\r\n  contactQuery: StringEntry;\r\n}\r\n\r\nexport class StartSessionForm extends React.Component<ActionFormProps, StartSessionFormState> {\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n\r\n    this.state = initializeForm(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\r\n    return this.handleUpdate({ recipients });\r\n  }\r\n\r\n  public handleFlowChanged(flows: Asset[]): boolean {\r\n    let flow = null;\r\n    if (flows && flows.length > 0) {\r\n      flow = flows[0];\r\n    }\r\n    return this.handleUpdate({ flow });\r\n  }\r\n\r\n  public handleStartTypeChanged(startType: SelectOption): boolean {\r\n    return this.handleUpdate({ startType });\r\n  }\r\n\r\n  public handleContactQueryChanged(contactQuery: string): boolean {\r\n    return this.handleUpdate({ contactQuery });\r\n  }\r\n\r\n  private handleUpdate(\r\n    keys: { flow?: Asset; recipients?: Asset[]; startType?: SelectOption; contactQuery?: string },\r\n    submitting = false\r\n  ): boolean {\r\n    const updates: Partial<StartSessionFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('startType')) {\r\n      updates.startType = { value: keys.startType };\r\n      if (keys.startType !== START_TYPE_ASSETS) {\r\n        updates.recipients = { value: [] };\r\n      }\r\n\r\n      if (keys.startType !== START_TYPE_QUERY) {\r\n        updates.contactQuery = { value: '' };\r\n      }\r\n    }\r\n\r\n    if (keys.hasOwnProperty('contactQuery')) {\r\n      updates.contactQuery = validate(\r\n        i18n.t('forms.contact_query', 'Contact Query'),\r\n        keys.contactQuery,\r\n        [shouldRequireIf(submitting && this.state.startType.value === START_TYPE_QUERY)]\r\n      );\r\n    }\r\n\r\n    if (keys.hasOwnProperty('recipients')) {\r\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients, [\r\n        shouldRequireIf(submitting && this.state.startType.value === START_TYPE_ASSETS)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('flow')) {\r\n      updates.flow = validate(i18n.t('forms.flow', 'Flow'), keys.flow, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // validate in case they never updated an empty field\r\n    const valid = this.handleUpdate(\r\n      {\r\n        recipients: this.state.recipients.value,\r\n        flow: this.state.flow.value,\r\n        contactQuery: this.state.contactQuery.value\r\n      },\r\n      true\r\n    );\r\n\r\n    if (valid) {\r\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\r\n\r\n      // notify our modal we are done\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <div>\r\n          <SelectElement\r\n            key=\"start_type_select\"\r\n            name={i18n.t('forms.start_type', 'Start Type')}\r\n            entry={this.state.startType}\r\n            onChange={this.handleStartTypeChanged}\r\n            options={START_TYPE_OPTIONS}\r\n          />\r\n        </div>\r\n        <p />\r\n        <div>\r\n          {renderIf(this.state.startType.value === START_TYPE_ASSETS)(\r\n            <div data-testid=\"recipients\">\r\n              <AssetSelector\r\n                name={i18n.t('forms.recipients', 'Recipients')}\r\n                placeholder=\"Choose who should be started in the flow\"\r\n                assets={this.props.assetStore.recipients}\r\n                completion={{\r\n                  assetStore: this.props.assetStore,\r\n                  schema: this.props.completionSchema\r\n                }}\r\n                entry={this.state.recipients}\r\n                searchable={true}\r\n                multi={true}\r\n                onChange={this.handleRecipientsChanged}\r\n              />\r\n              <p />\r\n            </div>\r\n          )}\r\n\r\n          {renderIf(this.state.startType.value === START_TYPE_QUERY)(\r\n            <div data-testid=\"contact_query\">\r\n              <TextInputElement\r\n                name={i18n.t('forms.contact_query', 'Contact Query')}\r\n                placeholder={'household_id = @fields.household_id'}\r\n                onChange={this.handleContactQueryChanged}\r\n                entry={this.state.contactQuery}\r\n                autocomplete={true}\r\n                focus={true}\r\n              />\r\n              <p />\r\n            </div>\r\n          )}\r\n\r\n          <AssetSelector\r\n            name={i18n.t('forms.flow', 'Flow')}\r\n            placeholder=\"Choose which flow to start\"\r\n            assets={this.props.assetStore.flows}\r\n            entry={this.state.flow}\r\n            searchable={true}\r\n            onChange={this.handleFlowChanged}\r\n          />\r\n        </div>\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartSessionForm;\r\n","import {\r\n  getActionUUID,\r\n  getExpressions,\r\n  getRecipients,\r\n  getRecipientsByAsset\r\n} from 'components/flow/actions/helpers';\r\nimport {\r\n  StartSessionFormState,\r\n  START_TYPE_CREATE,\r\n  START_TYPE_ASSETS,\r\n  START_TYPE_QUERY\r\n} from 'components/flow/actions/startsession/StartSessionForm';\r\nimport { Types } from 'config/interfaces';\r\nimport { StartSession } from 'flowTypes';\r\nimport { Asset, AssetType } from 'store/flowContext';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport const initializeForm = (settings: NodeEditorSettings): StartSessionFormState => {\r\n  if (settings.originalAction && settings.originalAction.type === Types.start_session) {\r\n    const action = settings.originalAction as StartSession;\r\n\r\n    const init = {\r\n      recipients: {\r\n        value: getRecipients(action)\r\n      },\r\n      flow: {\r\n        value: {\r\n          id: action.flow.uuid,\r\n          name: action.flow.name,\r\n          type: AssetType.Flow\r\n        }\r\n      },\r\n      startType: {\r\n        value: action.create_contact\r\n          ? START_TYPE_CREATE\r\n          : action.contact_query\r\n          ? START_TYPE_QUERY\r\n          : START_TYPE_ASSETS\r\n      },\r\n      contactQuery: { value: action.contact_query || '' },\r\n      valid: true\r\n    };\r\n\r\n    return init;\r\n  }\r\n\r\n  return {\r\n    recipients: { value: [] },\r\n    flow: { value: null },\r\n    startType: { value: START_TYPE_ASSETS },\r\n    contactQuery: { value: '' },\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToAction = (\r\n  settings: NodeEditorSettings,\r\n  state: StartSessionFormState\r\n): StartSession => {\r\n  const flow: Asset = state.flow.value;\r\n\r\n  const action: StartSession = {\r\n    legacy_vars: getExpressions(state.recipients.value),\r\n    contacts: getRecipientsByAsset(state.recipients.value, AssetType.Contact),\r\n    groups: getRecipientsByAsset(state.recipients.value, AssetType.Group),\r\n    create_contact: state.startType.value === START_TYPE_CREATE,\r\n    flow: { name: flow.name, uuid: flow.id },\r\n    type: Types.start_session,\r\n    uuid: getActionUUID(settings, Types.start_session)\r\n  };\r\n\r\n  // only include contact query if it is set\r\n  if (state.contactQuery.value) {\r\n    action['contact_query'] = state.contactQuery.value;\r\n  }\r\n\r\n  return action;\r\n};\r\n","import { TransferAirtime } from 'flowTypes';\r\nimport * as React from 'react';\r\n\r\nimport styles from './TransferAirtime.module.scss';\r\n\r\nconst TransferAirtimeComp: React.SFC<TransferAirtime> = (transfer): JSX.Element => {\r\n  const details = Object.keys(transfer.amounts).map((key: string) => {\r\n    return (\r\n      <div key={'transfer_' + key}>\r\n        <div className={styles.amount}>{transfer.amounts[key]}</div>\r\n        <div className={styles.code}>{key}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div>{details}</div>;\r\n};\r\n\r\nexport default TransferAirtimeComp;\r\n","import { getLanguageForCode } from 'components/flow/actions/updatecontact/helpers';\r\nimport { Types } from 'config/interfaces';\r\nimport {\r\n  SetContactAttribute,\r\n  SetContactChannel,\r\n  SetContactLanguage,\r\n  SetContactName,\r\n  SetContactStatus\r\n} from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { emphasize } from 'utils';\r\nconst styles = require('components/shared.module.scss');\r\n\r\nconst withEmph = (text: string, emph: boolean) => (emph ? emphasize(text) : text);\r\n\r\nexport const renderSetText = (\r\n  name: string,\r\n  value: string,\r\n  emphasizeName: boolean = false\r\n): JSX.Element => {\r\n  if (value) {\r\n    return (\r\n      <div className={`${styles.node_asset}`}>\r\n        Set {withEmph(name, emphasizeName)} to {emphasize(value)}.\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Clear {withEmph(name, emphasizeName)}.</div>;\r\n  }\r\n};\r\n\r\nconst UpdateContactComp: React.SFC<SetContactAttribute> = (\r\n  action: SetContactAttribute\r\n): JSX.Element => {\r\n  if (action.type === Types.set_contact_field) {\r\n    return renderSetText(action.field.name, action.value, true);\r\n  }\r\n\r\n  if (action.type === Types.set_contact_channel) {\r\n    const setContactAction = action as SetContactChannel;\r\n    return renderSetText('channel', setContactAction.channel.name, false);\r\n  }\r\n\r\n  if (action.type === Types.set_contact_language) {\r\n    const setLanguageAction = action as SetContactLanguage;\r\n    return renderSetText(\r\n      'language',\r\n      getLanguageForCode(setLanguageAction.language, (action as any).languages),\r\n      false\r\n    );\r\n  }\r\n\r\n  if (action.type === Types.set_contact_status) {\r\n    return renderSetText('status', (action as SetContactStatus).status, false);\r\n  }\r\n\r\n  if (action.type === Types.set_contact_name) {\r\n    return renderSetText('name', (action as SetContactName).name, false);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default UpdateContactComp;\r\n","import {\r\n  CHANNEL_PROPERTY,\r\n  LANGUAGE_PROPERTY,\r\n  NAME_PROPERTY,\r\n  STATUS_PROPERTY\r\n} from 'components/flow/props';\r\nimport { isOnlineFlowType } from 'config/helpers';\r\nimport { FlowTypes } from 'config/interfaces';\r\nimport { Asset, RenderNode } from 'store/flowContext';\r\n\r\nexport interface DragPoint {\r\n  exitUUID: string;\r\n  nodeUUID: string;\r\n}\r\n\r\nexport const getDraggedFrom = (ghostNode: RenderNode): DragPoint => {\r\n  if (ghostNode.ghost) {\r\n    const exitUUIDs = Object.keys(ghostNode.inboundConnections);\r\n    if (exitUUIDs.length > 0) {\r\n      const exitUUID = exitUUIDs[0];\r\n      const nodeUUID = ghostNode.inboundConnections[exitUUID];\r\n      return { exitUUID, nodeUUID };\r\n    }\r\n  }\r\n};\r\n\r\nconst ONLINE_PROPERTIES: Asset[] = [\r\n  NAME_PROPERTY,\r\n  LANGUAGE_PROPERTY,\r\n  CHANNEL_PROPERTY,\r\n  STATUS_PROPERTY\r\n];\r\nconst OFFLINE_PROPERTIES: Asset[] = [NAME_PROPERTY, LANGUAGE_PROPERTY, STATUS_PROPERTY];\r\n\r\nexport const getContactProperties = (flowType: FlowTypes = null): Asset[] => {\r\n  return !flowType || isOnlineFlowType(flowType) ? ONLINE_PROPERTIES : OFFLINE_PROPERTIES;\r\n};\r\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { DefaultExitNames } from 'components/flow/routers/constants';\r\nimport { Operators, Types } from 'config/interfaces';\r\nimport {\r\n  Action,\r\n  CallResthook,\r\n  CallWebhook,\r\n  Case,\r\n  Category,\r\n  Exit,\r\n  FlowNode,\r\n  Router,\r\n  RouterTypes,\r\n  SwitchRouter,\r\n  TransferAirtime,\r\n  UIConfig,\r\n  WebhookExitNames,\r\n  CallClassifier,\r\n  OpenTicket\r\n} from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { createUUID, snakify } from 'utils';\r\n\r\nexport interface CategorizedCases {\r\n  cases: Case[];\r\n  categories: Category[];\r\n  exits: Exit[];\r\n  caseConfig: { [uuid: string]: any };\r\n}\r\nexport interface ResolvedRoutes extends CategorizedCases {\r\n  defaultCategory: string;\r\n  timeoutCategory?: string;\r\n}\r\n\r\nexport const createRenderNode = (\r\n  uuid: string,\r\n  router: Router,\r\n  exits: Exit[],\r\n  type: Types,\r\n  actions: Action[] = [],\r\n  uiConfig: { [key: string]: any } = {}\r\n): RenderNode => {\r\n  const renderNode: RenderNode = {\r\n    node: {\r\n      uuid,\r\n      actions,\r\n      router,\r\n      exits\r\n    },\r\n    ui: {\r\n      type,\r\n      position: null,\r\n      config: uiConfig\r\n    },\r\n    inboundConnections: {}\r\n  };\r\n  return renderNode;\r\n};\r\n\r\nexport const hasCases = (node: FlowNode): boolean => {\r\n  if (\r\n    node.router &&\r\n    (node.router as SwitchRouter).cases &&\r\n    (node.router as SwitchRouter).cases.length\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getCategories = (renderNode: RenderNode): Category[] => {\r\n  if (renderNode.node.router) {\r\n    return renderNode.node.router.categories;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const createCaseProps = (cases: Case[], renderNode: RenderNode): CaseProps[] => {\r\n  const categories: Category[] = getCategories(renderNode);\r\n\r\n  // make sure we don't mutate the in memory version of our cases\r\n  const newCases = JSON.parse(JSON.stringify(cases));\r\n  return newCases.map((kase: Case) => {\r\n    const matchingCategory = categories.find(\r\n      (category: Category) => category.uuid === kase.category_uuid\r\n    );\r\n\r\n    if (isRelativeDate(kase.type)) {\r\n      if (renderNode.ui.config && renderNode.ui.config.cases) {\r\n        const caseConfig = renderNode.ui.config.cases[kase.uuid];\r\n        if (caseConfig && caseConfig.arguments) {\r\n          kase.arguments = caseConfig.arguments;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      uuid: kase.uuid,\r\n      kase,\r\n      categoryName: matchingCategory ? matchingCategory.name : null,\r\n      valid: true\r\n    };\r\n  });\r\n};\r\n\r\nexport const isRelativeDate = (operatorType: Operators): boolean => {\r\n  return !![Operators.has_date_eq, Operators.has_date_gt, Operators.has_date_lt].find(\r\n    (type: string) => operatorType === type\r\n  );\r\n};\r\n\r\nconst isCategoryMatch = (cat: Category, kase: CaseProps) => {\r\n  // see if we have the same name\r\n  return cat.name.toLowerCase().trim() === kase.categoryName.trim().toLowerCase();\r\n};\r\n\r\n/**\r\n * Given a set of cases and previous categories, determines correct merging of cases\r\n * and the union of categories\r\n */\r\nexport const categorizeCases = (\r\n  newCases: CaseProps[],\r\n  originalNode: FlowNode\r\n): CategorizedCases => {\r\n  const categories: Category[] = [];\r\n  const cases: Case[] = [];\r\n  const exits: Exit[] = [];\r\n  const caseConfig: UIConfig = {};\r\n\r\n  const originalRouter = originalNode && originalNode.router;\r\n  const previousCategories = (originalRouter && originalRouter.categories) || [];\r\n\r\n  // look over the new cases and match up categories and exits\r\n  for (const newCase of newCases) {\r\n    // ignore empty cases\r\n    if (!newCase.categoryName || newCase.categoryName.trim().length === 0) {\r\n      continue;\r\n    }\r\n\r\n    // convert relative dates to expressions with configs\r\n    if (isRelativeDate(newCase.kase.type)) {\r\n      caseConfig[newCase.uuid] = { arguments: newCase.kase.arguments };\r\n      newCase.kase.arguments = [`@(datetime_add(today(), ${newCase.kase.arguments[0]}, \"D\"))`];\r\n    }\r\n\r\n    //  see if it exists on a previous case\r\n    let category = categories.find((cat: Category) => isCategoryMatch(cat, newCase));\r\n\r\n    // if not, see if that category exists on our old node\r\n    if (!category) {\r\n      category = previousCategories.find((cat: Category) => isCategoryMatch(cat, newCase));\r\n\r\n      // still no category, lets see if we can find a case uuid match\r\n      if (!category) {\r\n        const router = getSwitchRouter(originalNode);\r\n        if (router) {\r\n          const previousCase = router.cases.find((kase: Case) => kase.uuid === newCase.uuid);\r\n          if (previousCase) {\r\n            const previousCategory = previousCategories.find(\r\n              (cat: Category) => cat.uuid === previousCase.category_uuid\r\n            );\r\n\r\n            if (previousCategory) {\r\n              category = { ...previousCategory, name: newCase.categoryName };\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // don't pull over an old category more than once\r\n      if (category && categories.find((cat: Category) => cat.uuid === category.uuid)) {\r\n        category = null;\r\n      }\r\n\r\n      // we found an old category, bring it and its exit over\r\n      if (category) {\r\n        categories.push(category);\r\n        const previousExit = originalNode.exits.find(\r\n          (exit: Exit) => category.exit_uuid === exit.uuid\r\n        );\r\n        exits.push(previousExit);\r\n      }\r\n    }\r\n\r\n    // if still no category, finally lets just create a new one\r\n    if (!category) {\r\n      const exit: Exit = {\r\n        uuid: createUUID()\r\n      };\r\n\r\n      exits.push(exit);\r\n\r\n      category = {\r\n        uuid: createUUID(),\r\n        name: newCase.categoryName,\r\n        exit_uuid: exit.uuid\r\n      };\r\n\r\n      categories.push(category);\r\n    }\r\n\r\n    // lastly, add our case\r\n    cases.push({\r\n      ...newCase.kase,\r\n      category_uuid: category.uuid\r\n    });\r\n  }\r\n\r\n  return { cases, categories, exits, caseConfig };\r\n};\r\n\r\nexport const getSwitchRouter = (node: FlowNode): SwitchRouter => {\r\n  if (node && node.router && node.router.type === RouterTypes.switch) {\r\n    return node.router as SwitchRouter;\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Adds a default route, reusing the previous one if possible\r\n * @param originalNode\r\n */\r\nexport const getDefaultRoute = (\r\n  defaultCategoryName: string,\r\n  originalNode: FlowNode\r\n): { defaultCategory: Category; defaultExit: Exit } => {\r\n  const originalRouter = getSwitchRouter(originalNode);\r\n\r\n  // use the previous default if it had one\r\n  if (originalRouter) {\r\n    const defaultCategory = originalRouter.categories.find(\r\n      (cat: Category) => cat.uuid === originalRouter.default_category_uuid\r\n    );\r\n\r\n    const defaultExit = originalNode.exits.find((e: Exit) => e.uuid === defaultCategory.exit_uuid);\r\n\r\n    defaultCategory.name = defaultCategoryName;\r\n\r\n    return { defaultCategory, defaultExit };\r\n  }\r\n  // otherwise, create a new exit and category\r\n  else {\r\n    const defaultExit: Exit = {\r\n      uuid: createUUID()\r\n    };\r\n\r\n    const defaultCategory = {\r\n      uuid: createUUID(),\r\n      name: defaultCategoryName,\r\n      exit_uuid: defaultExit.uuid\r\n    };\r\n\r\n    return { defaultCategory, defaultExit };\r\n  }\r\n};\r\n\r\nconst getTimeoutRoute = (\r\n  originalNode: FlowNode\r\n): { timeoutCategory: Category; timeoutExit: Exit } => {\r\n  let timeoutCategory: Category = null;\r\n  let timeoutExit: Exit = null;\r\n\r\n  const originalRouter = getSwitchRouter(originalNode);\r\n\r\n  // see if our previous node had a timeout case\r\n  if (originalRouter) {\r\n    if (originalRouter.wait && originalRouter.wait.timeout) {\r\n      const previousCategory = originalRouter.wait.timeout.category_uuid;\r\n      timeoutCategory = originalRouter.categories.find(\r\n        (cat: Category) => cat.uuid === previousCategory\r\n      );\r\n      timeoutExit = originalNode.exits.find(\r\n        (exit: Exit) => exit.uuid === timeoutCategory.exit_uuid\r\n      );\r\n    }\r\n  }\r\n\r\n  if (!timeoutCategory) {\r\n    // create a new route\r\n    timeoutExit = {\r\n      uuid: createUUID()\r\n    };\r\n\r\n    timeoutCategory = {\r\n      uuid: createUUID(),\r\n      name: DefaultExitNames.No_Response,\r\n      exit_uuid: timeoutExit.uuid\r\n    };\r\n  }\r\n\r\n  return { timeoutCategory, timeoutExit };\r\n};\r\n\r\n/**\r\n * Given a set of cases and previous categories, determines correct merging of cases\r\n * and the union of categories\r\n */\r\nexport const resolveRoutes = (\r\n  newCases: CaseProps[],\r\n  hasTimeout: boolean,\r\n  originalNode: FlowNode,\r\n  defaultCategoryName: string = null\r\n): ResolvedRoutes => {\r\n  const resolved = categorizeCases(newCases, originalNode);\r\n\r\n  let resolvedDefaultCategory = defaultCategoryName;\r\n  if (!resolvedDefaultCategory) {\r\n    resolvedDefaultCategory =\r\n      resolved.categories.length > 0 ? DefaultExitNames.Other : DefaultExitNames.All_Responses;\r\n  }\r\n\r\n  // tack on our other category\r\n  const { defaultCategory, defaultExit } = getDefaultRoute(resolvedDefaultCategory, originalNode);\r\n  resolved.categories.push(defaultCategory);\r\n  resolved.exits.push(defaultExit);\r\n\r\n  const results: ResolvedRoutes = {\r\n    ...resolved,\r\n    defaultCategory: defaultCategory.uuid\r\n  };\r\n\r\n  // add in a timeout route if we need one\r\n  if (hasTimeout) {\r\n    const { timeoutCategory, timeoutExit } = getTimeoutRoute(originalNode);\r\n    resolved.categories.push(timeoutCategory);\r\n    resolved.exits.push(timeoutExit);\r\n    results.timeoutCategory = timeoutCategory.uuid;\r\n  }\r\n\r\n  return results;\r\n};\r\n\r\nexport const createWebhookBasedNode = (\r\n  action: CallWebhook | CallResthook | OpenTicket | TransferAirtime,\r\n  originalNode: RenderNode,\r\n  useCategoryTest: boolean\r\n): RenderNode => {\r\n  const exits: Exit[] = [];\r\n  let cases: Case[] = [];\r\n  let categories: Category[] = [];\r\n\r\n  // see if we are editing an existing router so we reuse exits\r\n  if (\r\n    originalNode &&\r\n    originalNode.node.actions.length === 1 &&\r\n    originalNode.node.actions[0].type === action.type\r\n  ) {\r\n    const previousRouter = getSwitchRouter(originalNode.node);\r\n    originalNode.node.exits.forEach((exit: any) => exits.push(exit));\r\n    previousRouter.cases.forEach(kase => cases.push(kase));\r\n    originalNode.node.router.categories.forEach(category => categories.push(category));\r\n  } else {\r\n    // Otherwise, let's create some new ones\r\n    exits.push(\r\n      {\r\n        uuid: createUUID(),\r\n        destination_uuid: null\r\n      },\r\n      {\r\n        uuid: createUUID(),\r\n        destination_uuid: null\r\n      }\r\n    );\r\n\r\n    categories = [\r\n      {\r\n        uuid: createUUID(),\r\n        name: WebhookExitNames.Success,\r\n        exit_uuid: exits[0].uuid\r\n      },\r\n      {\r\n        uuid: createUUID(),\r\n        name: WebhookExitNames.Failure,\r\n        exit_uuid: exits[1].uuid\r\n      }\r\n    ];\r\n\r\n    cases = [\r\n      {\r\n        uuid: createUUID(),\r\n        type: useCategoryTest ? Operators.has_category : Operators.has_only_text,\r\n        arguments: [WebhookExitNames.Success],\r\n        category_uuid: categories[0].uuid\r\n      }\r\n    ];\r\n  }\r\n\r\n  let operand = '@results.' + snakify(action.result_name);\r\n  if (!useCategoryTest) {\r\n    operand += '.category';\r\n  }\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    operand: operand,\r\n    cases,\r\n    categories,\r\n    default_category_uuid: categories[categories.length - 1].uuid\r\n  };\r\n\r\n  let splitType = Types.split_by_webhook;\r\n  if (action.type === Types.call_resthook) {\r\n    splitType = Types.split_by_resthook;\r\n  } else if (action.type === Types.open_ticket) {\r\n    splitType = Types.split_by_ticket;\r\n  } else if (action.type === Types.transfer_airtime) {\r\n    splitType = Types.split_by_airtime;\r\n  }\r\n\r\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\r\n};\r\n\r\nexport const createSplitOnActionResultNode = (\r\n  action: CallClassifier,\r\n  originalNode: RenderNode\r\n): RenderNode => {\r\n  const splitType = Types.split_by_intent;\r\n  const exits: Exit[] = [];\r\n  const router: SwitchRouter = {\r\n    cases: [],\r\n    operand: '',\r\n    categories: [],\r\n    type: RouterTypes.switch,\r\n    default_category_uuid: null\r\n  };\r\n\r\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\r\n};\r\n","import { getSwitchRouter } from 'components/flow/routers/helpers';\r\nimport { Types } from 'config/interfaces';\r\nimport {\r\n  CallResthook,\r\n  CallWebhook,\r\n  Category,\r\n  Exit,\r\n  FlowNode,\r\n  RouterTypes,\r\n  TransferAirtime,\r\n  Action,\r\n  AnyAction,\r\n  FlowIssue\r\n} from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { getType } from 'config/typeConfigs';\r\n\r\nexport const getCategoriesForExit = (renderNode: RenderNode, exit: Exit): Category[] => {\r\n  // if we are\r\n  const isGroupSplit = getType(renderNode) === Types.split_by_groups;\r\n\r\n  if (!renderNode.node.router) {\r\n    return [];\r\n  }\r\n  return renderNode.node.router.categories\r\n    .filter((cat: Category) => cat.exit_uuid === exit.uuid)\r\n    .map((cat: Category) => {\r\n      if (isGroupSplit) {\r\n        return {\r\n          ...cat\r\n        };\r\n      } else {\r\n        return { ...cat, missing: false };\r\n      }\r\n    });\r\n};\r\n\r\nexport const getResultName = (node: FlowNode) => {\r\n  const switchRouter = getSwitchRouter(node);\r\n  if (switchRouter && switchRouter.result_name) {\r\n    return switchRouter.result_name;\r\n  }\r\n\r\n  if (node.router && node.router.type === RouterTypes.random) {\r\n    return node.router.result_name;\r\n  }\r\n\r\n  if (node.actions.length === 1) {\r\n    const action = node.actions[0];\r\n    if (\r\n      action.type === Types.call_webhook ||\r\n      action.type === Types.call_resthook ||\r\n      action.type === Types.open_ticket ||\r\n      action.type === Types.transfer_airtime\r\n    ) {\r\n      const resultAction = action as CallWebhook | CallResthook | TransferAirtime;\r\n      return resultAction.result_name;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getVisibleActions = (renderNode: RenderNode): Action[] => {\r\n  // subflow nodes hide their set run results\r\n  if (getType(renderNode) === Types.split_by_subflow) {\r\n    return renderNode.node.actions.filter((action: Action) => action.type !== Types.set_run_result);\r\n  }\r\n\r\n  return renderNode.node.actions;\r\n};\r\n\r\nexport const filterIssuesForAction = (\r\n  nodeUUID: string,\r\n  action: AnyAction,\r\n  issues: FlowIssue[]\r\n): FlowIssue[] => {\r\n  return issues.filter(issue => issue.node_uuid === nodeUUID && issue.action_uuid === action.uuid);\r\n};\r\n","import { getResultName } from 'components/flow/node/helpers';\r\nimport { Revision } from 'components/revisions/RevisionExplorer';\r\nimport { Types } from 'config/interfaces';\r\nimport {\r\n  AnyAction,\r\n  Dimensions,\r\n  FlowDefinition,\r\n  FlowNode,\r\n  FlowPosition,\r\n  RouterTypes,\r\n  StickyNote,\r\n  SwitchRouter\r\n} from 'flowTypes';\r\nimport {\r\n  Asset,\r\n  AssetMap,\r\n  AssetStore,\r\n  AssetType,\r\n  Reference,\r\n  RenderNode,\r\n  RenderNodeMap\r\n} from 'store/flowContext';\r\nimport { assetListToMap, detectLoops, getActionIndex, getExitIndex, getNode } from 'store/helpers';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\nimport { LocalizationUpdates } from 'store/thunks';\r\nimport { createUUID, merge, push, set, snakify, snapToGrid, splice, unset } from 'utils';\r\n\r\nconst mutate = require('immutability-helper');\r\n\r\nexport const uniquifyNode = (newNode: FlowNode): FlowNode => {\r\n  // Give our node a unique uuid\r\n  return mutate(newNode, merge({ uuid: createUUID() }));\r\n};\r\n\r\nexport const getDefaultExit = (node: FlowNode) => {\r\n  if (node.router.type === RouterTypes.switch) {\r\n    const switchRouter = node.router as SwitchRouter;\r\n    return node.exits.find(exit => exit.uuid === switchRouter.default_category_uuid);\r\n  }\r\n};\r\n\r\nexport const addAssets = (type: string, store: AssetStore, assets: Asset[]): AssetStore => {\r\n  const assetMap = assetListToMap(assets);\r\n  const updated = mutate(store, {\r\n    [type]: {\r\n      items: {\r\n        $merge: assetMap\r\n      }\r\n    }\r\n  });\r\n  return updated;\r\n};\r\n\r\nexport const removeResultReference = (\r\n  resultName: string,\r\n  items: AssetMap,\r\n  reference: Reference\r\n): AssetMap => {\r\n  const key = snakify(resultName);\r\n\r\n  if (key in items) {\r\n    const item = items[key];\r\n    const filteredRefs = item.references.filter(\r\n      (ref: Reference) =>\r\n        ref.nodeUUID !== reference.nodeUUID || ref.actionUUID !== reference.actionUUID\r\n    );\r\n\r\n    if (filteredRefs.length === 0) {\r\n      return mutate(items, { $unset: [key] });\r\n    }\r\n\r\n    return mutate(items, { [key]: { references: { $set: filteredRefs } } });\r\n  }\r\n  return items;\r\n};\r\n\r\nexport const removeResultFromStore = (\r\n  resultName: string,\r\n  assets: AssetStore,\r\n  reference: Reference\r\n): AssetStore => {\r\n  if (resultName && assets.results) {\r\n    const items = removeResultReference(resultName, assets.results.items, reference);\r\n    return mutate(assets, { results: { items: { $set: items } } });\r\n  }\r\n  return assets;\r\n};\r\n\r\nexport const addResultToStore = (\r\n  resultName: string,\r\n  assets: AssetStore,\r\n  reference: Reference\r\n): AssetStore => {\r\n  if (resultName) {\r\n    const items = addResult(resultName, assets.results.items, reference);\r\n    return mutate(assets, { results: { items: { $set: items } } });\r\n  }\r\n};\r\n\r\nexport const addResult = (resultName: string, items: AssetMap, reference: Reference): AssetMap => {\r\n  const key = snakify(resultName);\r\n  const result =\r\n    key in items\r\n      ? items[key]\r\n      : {\r\n          name: resultName,\r\n          id: key,\r\n          type: AssetType.Result,\r\n          references: []\r\n        };\r\n\r\n  if (\r\n    !result.references.find(\r\n      (ref: Reference) =>\r\n        ref.nodeUUID === reference.nodeUUID && ref.actionUUID === reference.actionUUID\r\n    )\r\n  ) {\r\n    result.references.push(reference);\r\n  }\r\n\r\n  return mutate(items, { $merge: { [key]: result } });\r\n};\r\n\r\nexport const addRevision = (assets: AssetStore, revision: Revision): AssetStore => {\r\n  return mutate(assets, {\r\n    revisions: { items: { $merge: { [revision.id]: revision } } }\r\n  });\r\n};\r\n\r\nexport const addFlowResult = (assets: AssetStore, node: FlowNode): AssetStore => {\r\n  let updated = assets;\r\n\r\n  // TODO: initialize these to empties further up to avoid this\r\n  if (!updated) {\r\n    updated = { results: { items: {}, type: AssetType.Result } };\r\n  }\r\n\r\n  if (!updated.results) {\r\n    updated.results = { items: {}, type: AssetType.Result };\r\n  }\r\n\r\n  const resultName = getResultName(node);\r\n  if (resultName) {\r\n    const items = addResult(resultName, assets.results.items, {\r\n      nodeUUID: node.uuid\r\n    });\r\n    return mutate(assets, { results: { items: { $set: items } } });\r\n  }\r\n\r\n  return assets;\r\n};\r\n\r\n/**\r\n * Update the destination for a specific exit. Updates destination_uuid and\r\n * the inboundConnections for the given node\r\n * @param nodes\r\n * @param fromNodeUUID\r\n * @param fromExitUUID\r\n * @param destination\r\n */\r\nexport const updateConnection = (\r\n  nodes: RenderNodeMap,\r\n  fromNodeUUID: string,\r\n  fromExitUUID: string,\r\n  destinationNodeUUID: string\r\n): RenderNodeMap => {\r\n  let updatedNodes = nodes;\r\n  const fromNode = getNode(nodes, fromNodeUUID);\r\n\r\n  // make sure our destination exits if they provided one\r\n  if (destinationNodeUUID) {\r\n    getNode(nodes, destinationNodeUUID);\r\n  }\r\n\r\n  const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\r\n  const previousDestination = fromNode.node.exits[exitIdx].destination_uuid;\r\n\r\n  updatedNodes = mutate(updatedNodes, {\r\n    [fromNodeUUID]: {\r\n      node: {\r\n        exits: {\r\n          [exitIdx]: {\r\n            destination_uuid: set(destinationNodeUUID)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  // update our pointers\r\n  if (destinationNodeUUID) {\r\n    updatedNodes = mutate(updatedNodes, {\r\n      [destinationNodeUUID]: {\r\n        inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\r\n      }\r\n    });\r\n  }\r\n\r\n  if (previousDestination != null) {\r\n    updatedNodes = mutate(updatedNodes, {\r\n      [previousDestination]: { inboundConnections: unset([[fromExitUUID]]) }\r\n    });\r\n  }\r\n\r\n  return updatedNodes;\r\n};\r\n\r\nexport const addLanguage = (languages: Asset[], language: Asset): Asset[] => {\r\n  return mutate(languages, push([language]));\r\n};\r\n\r\n/**\r\n * Removes a spcific destination for an exit and the associated inboundConnection.\r\n * @param nodes\r\n * @param fromNodeUUID\r\n * @param fromExitUUID\r\n */\r\nexport const removeConnection = (\r\n  nodes: RenderNodeMap,\r\n  fromNodeUUID: string,\r\n  fromExitUUID: string\r\n): RenderNodeMap => {\r\n  return updateConnection(nodes, fromNodeUUID, fromExitUUID, null);\r\n};\r\n\r\n/**\r\n * Adds a given RenderNode to our node map or updates an existing one.\r\n * Updates destinations for any inboundConnections provided and updates\r\n * inboundConnections for any destination_uuid our exits point to.\r\n * @param nodes\r\n * @param node the node to add, if unique uuid, it will be added\r\n */\r\nexport const mergeNode = (nodes: RenderNodeMap, node: RenderNode): RenderNodeMap => {\r\n  let updatedNodes = nodes;\r\n\r\n  // if the node is already there, remove it first\r\n  if (updatedNodes[node.node.uuid]) {\r\n    updatedNodes = removeNode(nodes, node.node.uuid);\r\n  }\r\n\r\n  // add our node upadted node\r\n  updatedNodes = mutate(nodes, merge({ [node.node.uuid]: node }));\r\n\r\n  // if we have inbound connections, update our nodes accordingly\r\n  for (const fromExitUUID of Object.keys(node.inboundConnections)) {\r\n    const fromNodeUUID = node.inboundConnections[fromExitUUID];\r\n\r\n    const fromNode = getNode(nodes, fromNodeUUID);\r\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\r\n\r\n    updatedNodes = mutate(updatedNodes, {\r\n      [fromNodeUUID]: {\r\n        node: {\r\n          exits: {\r\n            [exitIdx]: merge({ destination_uuid: node.node.uuid })\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return updatedNodes;\r\n};\r\n\r\n/**\r\n * Adds a given action to the provided node\r\n * @param nodes\r\n * @param nodeUUID\r\n * @param action\r\n */\r\nexport const addAction = (\r\n  nodes: RenderNodeMap,\r\n  nodeUUID: string,\r\n  action: AnyAction\r\n): RenderNodeMap => {\r\n  // check that our node exists\r\n  getNode(nodes, nodeUUID);\r\n  return mutate(nodes, { [nodeUUID]: { node: { actions: push([action]) } } });\r\n};\r\n\r\n/**\r\n * Updates the given action in place by it's uuid\r\n * @param nodes\r\n * @param nodeUUID\r\n * @param action\r\n */\r\nexport const updateAction = (\r\n  nodes: RenderNodeMap,\r\n  nodeUUID: string,\r\n  newAction: AnyAction,\r\n  originalAction?: AnyAction\r\n) => {\r\n  const originalNode = getNode(nodes, nodeUUID);\r\n  // If we have existing actions, find our action and update it\r\n  const actionIdx = originalAction ? getActionIndex(originalNode.node, originalAction.uuid) : 0;\r\n  return mutate(nodes, {\r\n    [nodeUUID]: {\r\n      node: {\r\n        actions: { [actionIdx]: set(newAction) }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const spliceInAction = (\r\n  nodes: RenderNodeMap,\r\n  nodeUUID: string,\r\n  action: AnyAction\r\n): RenderNodeMap => {\r\n  const { [nodeUUID]: previousNode } = nodes;\r\n\r\n  const otherExit = getDefaultExit(previousNode.node);\r\n  const destination = otherExit ? otherExit.destination_uuid : null;\r\n\r\n  // remove our previous node\r\n  let updatedNodes = removeNode(nodes, previousNode.node.uuid, false);\r\n\r\n  const newNode: RenderNode = {\r\n    node: {\r\n      uuid: createUUID(),\r\n      actions: [action],\r\n      exits: [{ uuid: createUUID(), destination_uuid: destination }]\r\n    },\r\n    ui: { position: previousNode.ui.position, type: Types.execute_actions },\r\n    inboundConnections: previousNode.inboundConnections\r\n  };\r\n\r\n  // add our new node\r\n  updatedNodes = mergeNode(updatedNodes, newNode);\r\n\r\n  return updatedNodes;\r\n};\r\n\r\n/** Removes a specific action from a node */\r\nexport const removeAction = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\r\n  const renderNode = getNode(nodes, nodeUUID);\r\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\r\n  return mutate(nodes, {\r\n    [nodeUUID]: { node: { actions: splice([[actionIdx, 1]]) } }\r\n  });\r\n};\r\n\r\n/**\r\n * Moves a single action up in the list for the given node\r\n * @param nodes\r\n * @param nodeUUID\r\n * @param action\r\n */\r\nexport const moveActionUp = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\r\n  const renderNode = getNode(nodes, nodeUUID);\r\n\r\n  const actions = renderNode.node.actions;\r\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\r\n\r\n  if (actionIdx === 0) {\r\n    throw new Error('Cannot move an action at the top upwards');\r\n  }\r\n\r\n  const action = actions[actionIdx];\r\n  const actionAbove = actions[actionIdx - 1];\r\n\r\n  return mutate(nodes, {\r\n    [nodeUUID]: {\r\n      node: { actions: splice([[actionIdx - 1, 2, action, actionAbove]]) }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Removes a given node from our node map. Updates destinations for any exits that point to us\r\n * and removes any inboundConnections that reference our exits. Also will reroute connections\r\n * that route through us.\r\n * @param nodes\r\n * @param nodeToRemove\r\n */\r\nexport const removeNode = (\r\n  nodes: RenderNodeMap,\r\n  nodeUUID: string,\r\n  remap: boolean = true\r\n): RenderNodeMap => {\r\n  const nodeToRemove = getNode(nodes, nodeUUID);\r\n  let updatedNodes = nodes;\r\n\r\n  // remove us from any inbound connections\r\n  for (const exit of nodeToRemove.node.exits) {\r\n    if (exit.destination_uuid) {\r\n      updatedNodes = mutate(updatedNodes, {\r\n        [exit.destination_uuid]: {\r\n          inboundConnections: unset([exit.uuid])\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // clear any destinations that point to us\r\n  for (const fromExitUUID of Object.keys(nodeToRemove.inboundConnections)) {\r\n    // if we have a single destination, reroute those pointing to us\r\n    let destination = null;\r\n    if (remap && nodeToRemove.node.exits.length === 1) {\r\n      ({ destination_uuid: destination } = nodeToRemove.node.exits[0]);\r\n    }\r\n\r\n    const fromNodeUUID = nodeToRemove.inboundConnections[fromExitUUID];\r\n    const fromNode = getNode(nodes, fromNodeUUID);\r\n\r\n    // make sure we aren't creating a loop\r\n    if (destination) {\r\n      try {\r\n        detectLoops(updatedNodes, fromNodeUUID, destination);\r\n      } catch {\r\n        destination = null;\r\n      }\r\n    }\r\n\r\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\r\n    updatedNodes = mutate(updatedNodes, {\r\n      [fromNodeUUID]: {\r\n        node: {\r\n          exits: {\r\n            [exitIdx]: { destination_uuid: set(destination) }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // if we are setting a new destination, update the inboundConnections\r\n    if (destination) {\r\n      // make sure our destination exists\r\n      getNode(nodes, destination);\r\n      updatedNodes = mutate(updatedNodes, {\r\n        [destination]: {\r\n          inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // remove the actual node\r\n  return mutate(updatedNodes, unset([nodeUUID]));\r\n};\r\n\r\n/**\r\n * Update the position for a given node\r\n * @param nodes\r\n * @param nodeUUID\r\n * @param x\r\n * @param y\r\n */\r\nexport const updatePosition = (\r\n  nodes: RenderNodeMap,\r\n  nodeUUID: string,\r\n  position: FlowPosition,\r\n  snap: boolean = true\r\n): RenderNodeMap => {\r\n  const { left, top } = position;\r\n\r\n  // make sure we are on the grid\r\n  let adjusted = { left, top };\r\n\r\n  if (snap) {\r\n    adjusted = snapToGrid(left, top);\r\n  }\r\n\r\n  return mutate(nodes, {\r\n    [nodeUUID]: {\r\n      ui: {\r\n        position: set({\r\n          left: adjusted.left,\r\n          top: adjusted.top\r\n        })\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateStickyNotePosition = (\r\n  definition: FlowDefinition,\r\n  stickyUUID: string,\r\n  position: FlowPosition,\r\n  snap: boolean = true\r\n): FlowDefinition => {\r\n  if (!definition._ui.stickies) {\r\n    definition._ui.stickies = {};\r\n  }\r\n\r\n  const lastPos = definition._ui.stickies[stickyUUID].position;\r\n  const width = lastPos.right - lastPos.left;\r\n  const height = lastPos.bottom - lastPos.top;\r\n\r\n  const { left, top } = position;\r\n\r\n  // make sure we are on the grid\r\n  let adjusted = { left, top };\r\n\r\n  if (snap) {\r\n    adjusted = snapToGrid(left, top);\r\n  }\r\n\r\n  return mutate(definition, {\r\n    _ui: {\r\n      stickies: {\r\n        [stickyUUID]: {\r\n          position: set({\r\n            left: adjusted.left,\r\n            top: adjusted.top,\r\n            right: adjusted.left + width,\r\n            bottom: adjusted.top + height\r\n          })\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Update the dimensions for a specific node\r\n * @param nodes\r\n * @param nodeUUID\r\n * @param dimensions\r\n */\r\nexport const updateNodeDimensions = (\r\n  nodes: RenderNodeMap,\r\n  nodeUUID: string,\r\n  dimensions: Dimensions\r\n): RenderNodeMap => {\r\n  const node = getNode(nodes, nodeUUID);\r\n  return mutate(nodes, {\r\n    [nodeUUID]: {\r\n      ui: {\r\n        position: merge({\r\n          bottom: node.ui.position.top + dimensions.height,\r\n          right: node.ui.position.left + dimensions.width\r\n        })\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Update the dimensions for a specific sticky\r\n * @param definition\r\n * @param uuuid\r\n * @param dimensions\r\n */\r\nexport const updateStickyDimensions = (\r\n  definition: FlowDefinition,\r\n  uuid: string,\r\n  dimensions: Dimensions\r\n): FlowDefinition => {\r\n  const position = definition._ui.stickies[uuid].position;\r\n  return mutate(definition, {\r\n    _ui: {\r\n      stickies: {\r\n        [uuid]: {\r\n          position: merge({\r\n            bottom: position.top + dimensions.height,\r\n            right: position.left + dimensions.width\r\n          })\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateStickyNote = (\r\n  definition: FlowDefinition,\r\n  stickyUUID: string,\r\n  sticky: StickyNote\r\n): FlowDefinition => {\r\n  if (!definition._ui.stickies) {\r\n    definition._ui.stickies = {};\r\n  }\r\n  if (sticky) {\r\n    return mutate(definition, {\r\n      _ui: { stickies: merge({ [stickyUUID]: sticky }) }\r\n    });\r\n  } else {\r\n    return mutate(definition, { _ui: { stickies: unset([stickyUUID]) } });\r\n  }\r\n};\r\n\r\nexport const mergeNodeEditorSettings = (\r\n  current: NodeEditorSettings,\r\n  newSettings: NodeEditorSettings\r\n) => {\r\n  if (!newSettings) {\r\n    return current;\r\n  }\r\n\r\n  if (!current) {\r\n    return newSettings;\r\n  }\r\n\r\n  return mutate(current, { $merge: newSettings });\r\n};\r\n\r\n/**\r\n * Prunes the definition for editing, removing node references\r\n * @param definition our full definition\r\n */\r\nexport const pruneDefinition = (definition: FlowDefinition): FlowDefinition =>\r\n  mutate(definition, { nodes: [], _ui: { $merge: { nodes: {} } } });\r\n\r\n/**\r\n * Update the localization in the definition with the provided changes for a language\r\n * @param definition\r\n * @param language\r\n * @param changes\r\n */\r\nexport const updateLocalization = (\r\n  definition: FlowDefinition,\r\n  language: string,\r\n  changes: LocalizationUpdates\r\n) => {\r\n  let newDef = definition;\r\n\r\n  // Add language to localization map if not present\r\n  if (!newDef.localization[language]) {\r\n    newDef = mutate(newDef, {\r\n      localization: {\r\n        [language]: set({})\r\n      }\r\n    });\r\n  }\r\n\r\n  // Apply changes\r\n  changes.forEach(({ translations, uuid }) => {\r\n    if (translations) {\r\n      // normalize our translations so all are treated as arrays\r\n      const normalizedTranslations: { [uuid: string]: string[] } = {};\r\n      for (const key of Object.keys(translations)) {\r\n        const prev = translations[key];\r\n        if (Array.isArray(prev)) {\r\n          normalizedTranslations[key] = prev;\r\n        } else {\r\n          normalizedTranslations[key] = [prev];\r\n        }\r\n      }\r\n\r\n      // adding localization\r\n      newDef = mutate(newDef, {\r\n        localization: { [language]: { [uuid]: set(normalizedTranslations) } }\r\n      });\r\n    } else {\r\n      // removing localization\r\n      newDef = mutate(newDef, {\r\n        localization: { [language]: unset([uuid]) }\r\n      });\r\n    }\r\n  });\r\n\r\n  return newDef;\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport {\r\n  initializeForm,\r\n  sortFieldsAndProperties,\r\n  stateToAction,\r\n  UpdateContactFormState\r\n} from 'components/flow/actions/updatecontact/helpers';\r\nimport { ActionFormProps } from 'components/flow/props';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport { getContactProperties } from 'components/helpers';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { Types, ContactStatus } from 'config/interfaces';\r\nimport { ContactProperties } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { Asset, AssetType, updateAssets } from 'store/flowContext';\r\nimport * as mutators from 'store/mutators';\r\nimport { mergeForm } from 'store/nodeEditor';\r\nimport { DispatchWithState, GetState } from 'store/thunks';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\n\r\nimport styles from './UpdateContactForm.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { renderIssues } from '../helpers';\r\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\r\n\r\nexport const CONTACT_STATUS_ACTIVE = {\r\n  label: i18n.t('contact_statuses.active', 'Active'),\r\n  value: ContactStatus.ACTIVE\r\n};\r\nexport const CONTACT_STATUS_BLOCKED = {\r\n  label: i18n.t('contact_statuses.blocked', 'Blocked - remove from groups, ignore forever'),\r\n  value: ContactStatus.BLOCKED\r\n};\r\nexport const CONTACT_STATUS_STOPPED = {\r\n  label: i18n.t(\r\n    'contact_statuses.stopped',\r\n    'Stopped - remove from groups, ignore until they message again'\r\n  ),\r\n  value: ContactStatus.STOPPED\r\n};\r\nexport const CONTACT_STATUS_ARCHIVED = {\r\n  label: i18n.t('contact_statuses.archived', 'Archived - remove from groups, ignore forever'),\r\n  value: ContactStatus.ARCHIVED\r\n};\r\nexport const CONTACT_STATUS_OPTIONS = [\r\n  CONTACT_STATUS_ACTIVE,\r\n  CONTACT_STATUS_BLOCKED,\r\n  CONTACT_STATUS_STOPPED,\r\n  CONTACT_STATUS_ARCHIVED\r\n];\r\n\r\nexport default class UpdateContactForm extends React.Component<\r\n  ActionFormProps,\r\n  UpdateContactFormState\r\n> {\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  constructor(props: ActionFormProps) {\r\n    super(props);\r\n\r\n    this.state = initializeForm(this.props.nodeSettings, this.props.assetStore);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^get/, /^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdate(\r\n    keys: {\r\n      type?: Types;\r\n      name?: string;\r\n      channel?: Asset;\r\n      language?: Asset;\r\n      status?: SelectOption;\r\n      field?: Asset;\r\n      fieldValue?: string;\r\n    },\r\n    submitting = false\r\n  ): boolean {\r\n    const updates: Partial<UpdateContactFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('type')) {\r\n      updates.type = keys.type;\r\n    }\r\n\r\n    if (keys.hasOwnProperty('name')) {\r\n      updates.name = { value: keys.name };\r\n    }\r\n\r\n    if (keys.hasOwnProperty('channel')) {\r\n      updates.channel = validate(i18n.t('forms.channel', 'Channel'), keys.channel, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('language')) {\r\n      updates.language = validate(i18n.t('forms.language', 'Language'), keys.language, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('status')) {\r\n      updates.status = { value: keys.status };\r\n    }\r\n\r\n    if (keys.hasOwnProperty('field')) {\r\n      updates.field = { value: keys.field };\r\n    }\r\n\r\n    if (keys.hasOwnProperty('fieldValue')) {\r\n      updates.fieldValue = { value: keys.fieldValue, validationFailures: [] };\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handlePropertyChange(selected: Asset[]): boolean {\r\n    const selection = selected[0];\r\n    if (selection.type === AssetType.ContactProperty) {\r\n      switch (selection.id) {\r\n        case ContactProperties.Name:\r\n          return this.handleUpdate({\r\n            field: selection,\r\n            type: Types.set_contact_name,\r\n            name: ''\r\n          });\r\n        case ContactProperties.Language:\r\n          return this.handleUpdate({\r\n            field: selection,\r\n            type: Types.set_contact_language\r\n          });\r\n        case ContactProperties.Status:\r\n          return this.handleUpdate({\r\n            field: selection,\r\n            type: Types.set_contact_status\r\n          });\r\n        case ContactProperties.Channel:\r\n          return this.handleUpdate({\r\n            field: selection,\r\n            type: Types.set_contact_channel\r\n          });\r\n      }\r\n    }\r\n    return this.handleUpdate({\r\n      type: Types.set_contact_field,\r\n      field: selection,\r\n      fieldValue: ''\r\n    });\r\n  }\r\n\r\n  private handleChannelUpdate(selection: Asset[], submitting = false): boolean {\r\n    return this.handleUpdate({ channel: selection[0] }, submitting);\r\n  }\r\n\r\n  private handleLanguageUpdate(selection: Asset[], submitting = false): boolean {\r\n    return this.handleUpdate({ language: selection[0] }, submitting);\r\n  }\r\n\r\n  private handleStatusUpdate(status: SelectOption): boolean {\r\n    return this.handleUpdate({ status, fieldValue: '' });\r\n  }\r\n\r\n  private handleFieldValueUpdate(fieldValue: string): boolean {\r\n    return this.handleUpdate({ fieldValue, name: '' });\r\n  }\r\n\r\n  private handleNameUpdate(name: string): boolean {\r\n    return this.handleUpdate({ name, fieldValue: '' });\r\n  }\r\n\r\n  private onUpdated(dispatch: DispatchWithState, getState: GetState): void {\r\n    const {\r\n      flowContext: { assetStore }\r\n    } = getState();\r\n\r\n    if (this.state.field.value.type === AssetType.Field) {\r\n      dispatch(updateAssets(mutators.addAssets('fields', assetStore, [this.state.field.value])));\r\n    }\r\n  }\r\n\r\n  public handleFieldAdded(field: Asset): void {\r\n    // update our store with our new group\r\n    this.props.addAsset('fields', field);\r\n    this.handlePropertyChange([field]);\r\n  }\r\n\r\n  private handleSave(): void {\r\n    let valid = this.state.valid;\r\n\r\n    // check if language required\r\n    if (this.state.type === Types.set_contact_language) {\r\n      valid = this.handleLanguageUpdate([this.state.language.value], true) && valid;\r\n    }\r\n\r\n    // check if channel required\r\n    if (this.state.type === Types.set_contact_channel) {\r\n      valid = this.handleChannelUpdate([this.state.channel.value], true) && valid;\r\n    }\r\n\r\n    if (valid) {\r\n      // do the saving!\r\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state), this.onUpdated);\r\n      this.props.onClose(true);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The value widget varies for the action type\r\n   */\r\n  private getValueWidget(): JSX.Element {\r\n    if (this.state.type === Types.set_contact_channel) {\r\n      return (\r\n        <AssetSelector\r\n          key=\"select_channel\"\r\n          name={i18n.t('forms.channel', 'Channel')}\r\n          placeholder=\"Select the channel to use for this contact\"\r\n          assets={this.props.assetStore.channels}\r\n          entry={this.state.channel}\r\n          searchable={true}\r\n          valueClearable={true}\r\n          onChange={this.handleChannelUpdate}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.type === Types.set_contact_language) {\r\n      return (\r\n        <AssetSelector\r\n          key=\"select_language\"\r\n          name={i18n.t('forms.language', 'Language')}\r\n          placeholder=\"Select the language to use for this contact\"\r\n          assets={this.props.assetStore.languages}\r\n          entry={this.state.language}\r\n          searchable={true}\r\n          valueClearable={true}\r\n          onChange={this.handleLanguageUpdate}\r\n          shouldExclude={(asset: Asset) => asset.id === 'base'}\r\n        />\r\n      );\r\n    } else if (this.state.type === Types.set_contact_status) {\r\n      return (\r\n        <SelectElement\r\n          key=\"contact_status_select\"\r\n          name={i18n.t('forms.status', 'Status')}\r\n          entry={this.state.status}\r\n          onChange={this.handleStatusUpdate}\r\n          options={CONTACT_STATUS_OPTIONS}\r\n        />\r\n      );\r\n    } else if (this.state.type === Types.set_contact_name) {\r\n      return (\r\n        <TextInputElement\r\n          name={i18n.t('forms.name', 'Name')}\r\n          placeholder=\"Enter a new name for the contact\"\r\n          onChange={this.handleNameUpdate}\r\n          entry={this.state.name}\r\n          autocomplete={true}\r\n          focus={true}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <TextInputElement\r\n          name={i18n.t('forms.field_value', 'Field Value')}\r\n          placeholder={`Enter a new value for ${this.state.field.value.name}`}\r\n          onChange={this.handleFieldValueUpdate}\r\n          entry={this.state.fieldValue}\r\n          autocomplete={true}\r\n          focus={true}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  public handleCreateAssetFromInput(input: string): any {\r\n    return { label: input, value_type: 'text' };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n\r\n        <p>Select what to update</p>\r\n        <AssetSelector\r\n          name={i18n.t('forms.contact_field', 'Contact Field')}\r\n          assets={this.props.assetStore.fields}\r\n          additionalOptions={getContactProperties(this.context.config.flowType)}\r\n          entry={this.state.field}\r\n          searchable={true}\r\n          sortFunction={sortFieldsAndProperties}\r\n          onChange={this.handlePropertyChange}\r\n          // Fields can be created on the fly\r\n          createPrefix=\"Create Contact Field: \"\r\n          createAssetFromInput={this.handleCreateAssetFromInput}\r\n          onAssetCreated={this.handleFieldAdded}\r\n        />\r\n\r\n        <div className={styles.value}>{this.getValueWidget()}</div>\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport { AirtimeTransferEntry } from 'components/flow/routers/airtime/AirtimeRouterForm';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport FormElement from 'components/form/FormElement';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport * as React from 'react';\r\nimport { Asset, Assets } from 'store/flowContext';\r\nimport { ValidationFailure } from 'store/nodeEditor';\r\nimport { small } from 'utils/reactselect';\r\n\r\nimport styles from './CurrencyElement.module.scss';\r\nimport i18n from 'config/i18n';\r\n\r\nexport interface AirtimeTransfer {\r\n  amount: string;\r\n  code: string;\r\n}\r\n\r\nexport interface CurrencyElementProps {\r\n  currencies: Assets;\r\n  transfer: AirtimeTransferEntry;\r\n  index: number;\r\n  exclude: AirtimeTransferEntry[];\r\n  onChange(index: number, transfer: AirtimeTransferEntry): void;\r\n  onRemove(index: number): void;\r\n}\r\n\r\nexport default class CurrencyElement extends React.Component<CurrencyElementProps> {\r\n  constructor(props: CurrencyElementProps) {\r\n    super(props);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleCurrencyChanged(selected: Asset[]): void {\r\n    this.props.onChange(this.props.index, {\r\n      value: { amount: this.props.transfer.value.amount, code: selected[0].id },\r\n      validationFailures: this.props.transfer.validationFailures\r\n    });\r\n  }\r\n\r\n  private handleAmountChanged(value: string): void {\r\n    const validationFailures: ValidationFailure[] = [];\r\n    if (isNaN(Number(value))) {\r\n      validationFailures.push({\r\n        message: 'Invalid amount, please enter a number'\r\n      });\r\n    }\r\n    this.props.onChange(this.props.index, {\r\n      value: { amount: value, code: this.props.transfer.value.code },\r\n      validationFailures\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    let placeholder = 'Transfer Amount';\r\n\r\n    let amount = '';\r\n    let currency: any = null;\r\n\r\n    if (this.props.transfer.value) {\r\n      const transfer = this.props.transfer.value;\r\n      if (transfer.code) {\r\n        placeholder = `${transfer.code} ${placeholder}`;\r\n        currency = { id: transfer.code };\r\n      }\r\n\r\n      amount = '' + transfer.amount;\r\n    }\r\n\r\n    const amountInput =\r\n      this.props.index > -1 ? (\r\n        <div className={styles.amount}>\r\n          <TextInputElement\r\n            placeholder={placeholder}\r\n            name={i18n.t('forms.value', 'value')}\r\n            onChange={this.handleAmountChanged}\r\n            entry={{ value: amount }}\r\n          />\r\n        </div>\r\n      ) : null;\r\n\r\n    const removeIco =\r\n      this.props.index > -1 ? (\r\n        <div\r\n          className={styles.remove}\r\n          onClick={() => {\r\n            this.props.onRemove(this.props.index);\r\n          }}\r\n        >\r\n          <span className=\"fe-x\" />\r\n        </div>\r\n      ) : null;\r\n\r\n    const shouldExclude = (asset: Asset): boolean => {\r\n      return (\r\n        this.props.exclude.filter(\r\n          (airtime: AirtimeTransferEntry) => airtime.value.code === asset.id\r\n        ).length > 1\r\n      );\r\n    };\r\n\r\n    return (\r\n      <FormElement\r\n        name={i18n.t('forms.currency', 'Currency')}\r\n        entry={this.props.transfer}\r\n        __className={styles.form_element}\r\n      >\r\n        <div className={styles.transfer}>\r\n          <div className={styles.currency}>\r\n            <AssetSelector\r\n              styles={small as any}\r\n              name={i18n.t('forms.currency', 'Currency')}\r\n              shouldExclude={shouldExclude}\r\n              assets={this.props.currencies}\r\n              entry={{ value: currency }}\r\n              searchable={true}\r\n              onChange={this.handleCurrencyChanged}\r\n              placeholder={i18n.t('forms.currency', 'Select a Currency')}\r\n            />\r\n          </div>\r\n          {amountInput} {removeIco}\r\n        </div>\r\n      </FormElement>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport * as React from 'react';\r\nimport { FormState, StringEntry } from 'store/nodeEditor';\r\n\r\nimport styles from './OptionalTextInput.module.scss';\r\n\r\nexport interface OptionalTextInputProps {\r\n  name: string;\r\n  value: StringEntry;\r\n  toggleText: string;\r\n  onChange(value: string): void;\r\n  helpText?: string | JSX.Element;\r\n  maxLength?: number;\r\n}\r\n\r\nexport interface OptionalTextInputState extends FormState {\r\n  editing: boolean;\r\n}\r\n\r\n/**\r\n * OptionalText is a hideable text box\r\n */\r\nexport default class OptionalTextInput extends React.Component<\r\n  OptionalTextInputProps,\r\n  OptionalTextInputState\r\n> {\r\n  constructor(props: OptionalTextInputProps) {\r\n    super(props);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n\r\n    this.state = {\r\n      editing: this.props.value.value.trim().length > 0,\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  private handleTextChanged(text: string): void {\r\n    this.props.onChange(text);\r\n  }\r\n\r\n  private handleEditingChanged(): void {\r\n    this.setState({ editing: true });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    let ele: JSX.Element;\r\n\r\n    if (this.state.editing) {\r\n      ele = (\r\n        <TextInputElement\r\n          data-spec=\"optional-field\"\r\n          name={this.props.name}\r\n          showLabel={true}\r\n          entry={this.props.value}\r\n          onChange={this.handleTextChanged}\r\n          helpText={this.props.helpText}\r\n          maxLength={this.props.maxLength}\r\n        />\r\n      );\r\n    } else {\r\n      ele = (\r\n        <span\r\n          data-spec=\"toggle-link\"\r\n          className={styles.toggle_link}\r\n          onClick={this.handleEditingChanged}\r\n        >\r\n          {this.props.toggleText}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return <div className={styles.optional_text_input}>{ele}</div>;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { hasErrors } from 'components/flow/actions/helpers';\r\nimport OptionalTextInput from 'components/form/optionaltext/OptionalTextInput';\r\nimport { StringEntry } from 'store/nodeEditor';\r\nimport { snakify } from 'utils';\r\nimport { Trans } from 'react-i18next';\r\nimport i18n from 'config/i18n';\r\n\r\nexport const createResultNameInput = (\r\n  value: StringEntry,\r\n  onChange: (value: string) => void\r\n): JSX.Element => {\r\n  const snaked = !hasErrors(value) && value.value ? '.' + snakify(value.value) : '';\r\n\r\n  return (\r\n    <OptionalTextInput\r\n      name={i18n.t('forms.save_result_name', 'Result Name')}\r\n      maxLength={64}\r\n      value={value}\r\n      onChange={onChange}\r\n      toggleText={i18n.t('forms.save_as_title', 'Save as..')}\r\n      helpText={\r\n        <Trans i18nKey=\"forms.result_name_help\" values={{ resultFormat: `@results${snaked}` }}>\r\n          By naming the result, you can reference it later using [[resultFormat]]\r\n        </Trans>\r\n      }\r\n    />\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { ValidationFailure } from 'store/nodeEditor';\r\n\r\nimport styles from './ValidationFailures.module.scss';\r\n\r\nexport interface Validation {\r\n  validationFailures: ValidationFailure[];\r\n}\r\n\r\nconst ValidationFailures: React.SFC<Validation> = (validation): JSX.Element => {\r\n  const errors = validation.validationFailures.map((failure: ValidationFailure, idx: number) => {\r\n    return (\r\n      <div key={'validation_' + idx} className={styles.error}>\r\n        {failure.message}\r\n      </div>\r\n    );\r\n  });\r\n  return <div className={styles.errors}>{errors}</div>;\r\n};\r\n\r\nexport default ValidationFailures;\r\n","import {\r\n  AirtimeRouterFormState,\r\n  AirtimeTransferEntry\r\n} from 'components/flow/routers/airtime/AirtimeRouterForm';\r\nimport { createWebhookBasedNode } from 'components/flow/routers/helpers';\r\nimport { Types } from 'config/interfaces';\r\nimport { TransferAirtime } from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\nimport { createUUID } from 'utils';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): AirtimeRouterFormState => {\r\n  const originalAction = getOriginalAction(settings);\r\n  let resultName = { value: 'Result' };\r\n  let valid = false;\r\n\r\n  const amounts: AirtimeTransferEntry[] = [];\r\n  if (originalAction && originalAction.type === Types.transfer_airtime) {\r\n    Object.keys(originalAction.amounts).forEach((key: string) => {\r\n      amounts.push({\r\n        value: { code: key, amount: '' + originalAction.amounts[key] }\r\n      });\r\n    });\r\n    resultName = { value: originalAction.result_name };\r\n    valid = true;\r\n  }\r\n\r\n  return {\r\n    valid,\r\n    amounts,\r\n    resultName\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: AirtimeRouterFormState\r\n): RenderNode => {\r\n  let uuid = createUUID();\r\n  const originalAction = getOriginalAction(settings);\r\n  if (originalAction) {\r\n    uuid = originalAction.uuid;\r\n  }\r\n\r\n  const amounts = {};\r\n  state.amounts.forEach((entry: AirtimeTransferEntry) => {\r\n    if (entry.value.amount.trim().length > 0) {\r\n      (amounts as any)[entry.value.code] = Number(entry.value.amount);\r\n    }\r\n  });\r\n\r\n  const newAction: TransferAirtime = {\r\n    uuid,\r\n    type: Types.transfer_airtime,\r\n    amounts,\r\n    result_name: state.resultName.value\r\n  };\r\n\r\n  return createWebhookBasedNode(newAction, settings.originalNode, true);\r\n};\r\n\r\nexport const getOriginalAction = (settings: NodeEditorSettings): TransferAirtime => {\r\n  const action =\r\n    settings.originalAction ||\r\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\r\n\r\n  if (action.type === Types.transfer_airtime) {\r\n    return action as TransferAirtime;\r\n  }\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport CurrencyElement, {\r\n  AirtimeTransfer\r\n} from 'components/flow/routers/airtime/currency/CurrencyElement';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport ValidationFailures from 'components/form/ValidationFailures';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport mutate from 'immutability-helper';\r\nimport * as React from 'react';\r\nimport { FormEntry, FormState, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\r\n\r\nimport styles from './AirtimeRouterForm.module.scss';\r\nimport { nodeToState, stateToNode } from './helpers';\r\nimport i18n from 'config/i18n';\r\n\r\nexport interface AirtimeTransferEntry extends FormEntry {\r\n  value: AirtimeTransfer;\r\n}\r\n\r\nexport interface AirtimeRouterFormState extends FormState {\r\n  amounts: AirtimeTransferEntry[];\r\n  resultName: StringEntry;\r\n}\r\n\r\nexport default class AirtimeRouterForm extends React.PureComponent<\r\n  RouterFormProps,\r\n  AirtimeRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    const missing: number[] = [];\r\n\r\n    this.state.amounts.forEach((entry: AirtimeTransferEntry, index: number) => {\r\n      if (entry.value.amount.trim().length === 0) {\r\n        missing.push(index);\r\n      }\r\n    });\r\n\r\n    let valid: boolean = !!!this.state.amounts.find(\r\n      (entry: AirtimeTransferEntry) => (entry.validationFailures || []).length > 0\r\n    );\r\n\r\n    // make sure at least one has a value\r\n    if (valid) {\r\n      valid =\r\n        this.state.amounts.find(\r\n          (entry: AirtimeTransferEntry) => entry.value.amount.trim().length > 0\r\n        ) !== undefined;\r\n\r\n      if (!valid) {\r\n        this.setState({\r\n          valid: false,\r\n          validationFailures: [{ message: 'At least one amount to transfer is required' }]\r\n        });\r\n      }\r\n    }\r\n\r\n    if (valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private handleUpdateResultName(result: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), result, [\r\n      Required,\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  public getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: 'Ok', onClick: this.handleSave },\r\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\r\n    };\r\n  }\r\n\r\n  public handleRemoved(index: number): void {\r\n    // we found a match, merge us in\r\n    const updated: any = mutate(this.state.amounts, {\r\n      $splice: [[index, 1]]\r\n    });\r\n    this.setState({ amounts: updated });\r\n  }\r\n\r\n  public handleTransferChanged(idx: number, transfer: AirtimeTransferEntry): void {\r\n    let updated: any = this.state.amounts;\r\n\r\n    if (idx > -1) {\r\n      // we found a match, merge us in\r\n      updated = mutate(this.state.amounts, {\r\n        $merge: { [idx]: transfer }\r\n      });\r\n    } else {\r\n      // otherwise push us on\r\n      updated = mutate(this.state.amounts, {\r\n        $push: [transfer]\r\n      });\r\n    }\r\n\r\n    this.setState({ amounts: updated, validationFailures: [] });\r\n  }\r\n\r\n  private renderAmount(index: number, entry: AirtimeTransferEntry): JSX.Element {\r\n    return (\r\n      <CurrencyElement\r\n        key={'currency_' + index}\r\n        exclude={this.state.amounts}\r\n        currencies={this.props.assetStore.currencies}\r\n        transfer={entry}\r\n        index={index}\r\n        onChange={this.handleTransferChanged}\r\n        onRemove={this.handleRemoved}\r\n      />\r\n    );\r\n  }\r\n\r\n  private renderAmounts(): JSX.Element {\r\n    const amounts = this.state.amounts.map((entry: AirtimeTransferEntry, index: number) => {\r\n      return this.renderAmount(index, entry);\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        {amounts}\r\n        {this.renderAmount(-1, { value: { code: null, amount: '' } })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    const errors = this.state.validationFailures ? (\r\n      <ValidationFailures validationFailures={this.state.validationFailures} />\r\n    ) : null;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        {this.renderAmounts()}\r\n        {errors}\r\n        <div className={styles.result_name}>\r\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        </div>\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { HIDDEN, Operator, OperatorMap, Operators, TEXT_TYPES, ONLINE } from 'config/interfaces';\r\nimport i18n from 'config/i18n';\r\n\r\nexport const intentOperatorList: Operator[] = [\r\n  {\r\n    type: Operators.has_top_intent,\r\n    verboseName: i18n.t('operators.has_top_intent', 'has top intent'),\r\n    operands: 2,\r\n    visibility: ONLINE\r\n  },\r\n  {\r\n    type: Operators.has_intent,\r\n    verboseName: i18n.t('operators.has_intent', 'has intent'),\r\n    operands: 2,\r\n    visibility: ONLINE\r\n  }\r\n];\r\n\r\nexport const operatorConfigList: Operator[] = [\r\n  {\r\n    type: Operators.has_any_word,\r\n    verboseName: i18n.t('operators.has_any_word', 'has any of the words'),\r\n    operands: 1,\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_all_words,\r\n    verboseName: i18n.t('operators.has_all_words', 'has all of the words'),\r\n    operands: 1,\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_phrase,\r\n    verboseName: i18n.t('operators.has_phrase', 'has the phrase'),\r\n    operands: 1,\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_only_phrase,\r\n    verboseName: i18n.t('operators.has_only_phrase', 'has only the phrase'),\r\n    operands: 1,\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_beginning,\r\n    verboseName: i18n.t('operators.has_beginning', 'starts with'),\r\n    operands: 1\r\n  },\r\n  {\r\n    type: Operators.has_text,\r\n    verboseName: i18n.t('operators.has_text', 'has some text'),\r\n    operands: 0,\r\n    categoryName: 'Has Text',\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_number,\r\n    verboseName: i18n.t('operators.has_number', 'has a number'),\r\n    operands: 0,\r\n    categoryName: 'Has Number'\r\n  },\r\n  {\r\n    type: Operators.has_number_between,\r\n    verboseName: i18n.t('operators.has_number_between', 'has a number between'),\r\n    operands: 2\r\n  },\r\n  {\r\n    type: Operators.has_number_lt,\r\n    verboseName: i18n.t('operators.has_number_lt', 'has a number below'),\r\n    operands: 1\r\n  },\r\n  {\r\n    type: Operators.has_number_lte,\r\n    verboseName: i18n.t('operators.has_number_lte', 'has a number at or below'),\r\n    operands: 1\r\n  },\r\n  {\r\n    type: Operators.has_number_eq,\r\n    verboseName: i18n.t('operators.has_number_eq', 'has a number equal to'),\r\n    operands: 1\r\n  },\r\n  {\r\n    type: Operators.has_number_gte,\r\n    verboseName: i18n.t('operators.has_number_gte', 'has a number at or above'),\r\n    operands: 1\r\n  },\r\n  {\r\n    type: Operators.has_number_gt,\r\n    verboseName: i18n.t('operators.has_number_gt', 'has a number above'),\r\n    operands: 1\r\n  },\r\n  {\r\n    type: Operators.has_date,\r\n    verboseName: i18n.t('operators.has_date', 'has a date'),\r\n    operands: 0,\r\n    categoryName: i18n.t('operators.has_date_category', 'Has Date'),\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_date_lt,\r\n    verboseName: i18n.t('operators.has_date_lt', 'has a date before'),\r\n    operands: 1,\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_date_eq,\r\n    verboseName: i18n.t('operators.has_date_eq', 'has a date equal to'),\r\n    operands: 1,\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_date_gt,\r\n    verboseName: i18n.t('operators.has_date_gt', 'has a date after'),\r\n    operands: 1,\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_time,\r\n    verboseName: i18n.t('operators.has_time', 'has a time'),\r\n    operands: 0,\r\n    categoryName: 'Has Time',\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_group,\r\n    verboseName: i18n.t('operators.has_group', 'is in the group'),\r\n    operands: 1,\r\n    visibility: HIDDEN\r\n  },\r\n  {\r\n    type: Operators.has_category,\r\n    verboseName: i18n.t('operators.has_category', 'has the category'),\r\n    operands: 0,\r\n    visibility: HIDDEN\r\n  },\r\n  {\r\n    type: Operators.has_phone,\r\n    verboseName: i18n.t('operators.has_phone', 'has a phone number'),\r\n    operands: 0,\r\n    categoryName: i18n.t('operators.has_phone_category', 'Has Phone')\r\n  },\r\n  {\r\n    type: Operators.has_email,\r\n    verboseName: i18n.t('operators.has_email', 'has an email'),\r\n    operands: 0,\r\n    categoryName: i18n.t('operators.has_email_category', 'Has Email'),\r\n    visibility: TEXT_TYPES\r\n  },\r\n  {\r\n    type: Operators.has_state,\r\n    verboseName: i18n.t('operators.has_state', 'has state'),\r\n    operands: 0,\r\n    categoryName: i18n.t('operators.has_state_category', 'Has State')\r\n  },\r\n  {\r\n    type: Operators.has_district,\r\n    verboseName: i18n.t('operators.has_district', 'has district'),\r\n    operands: 1,\r\n    categoryName: i18n.t('operators.has_district_category', 'Has District')\r\n  },\r\n  {\r\n    type: Operators.has_ward,\r\n    verboseName: i18n.t('operators.has_ward', 'has ward'),\r\n    operands: 2,\r\n    categoryName: i18n.t('operators.has_ward_category', 'Has Ward')\r\n  },\r\n  {\r\n    type: Operators.has_error,\r\n    verboseName: i18n.t('operators.has_error', 'has an error'),\r\n    operands: 0,\r\n    categoryName: i18n.t('operators.has_error_category', 'Has Error'),\r\n    visibility: HIDDEN\r\n  },\r\n  {\r\n    type: Operators.has_value,\r\n    verboseName: i18n.t('operators.has_value', 'is not empty'),\r\n    operands: 0,\r\n    categoryName: i18n.t('operators.has_value_category', 'Not Empty'),\r\n    visibility: HIDDEN\r\n  },\r\n  {\r\n    type: Operators.has_pattern,\r\n    verboseName: i18n.t('operator.has_pattern', 'matches regex'),\r\n    operands: 1\r\n  }\r\n];\r\n\r\nexport const operatorConfigMap: OperatorMap = [...operatorConfigList, ...intentOperatorList].reduce(\r\n  (map: OperatorMap, operatorConfig: Operator) => {\r\n    map[operatorConfig.type] = operatorConfig;\r\n    return map;\r\n  },\r\n  {}\r\n);\r\n\r\n/**\r\n * Shortcut for constant lookup of operator config in operator configs map\r\n * @param {string} type - The type of the operator config to return, e.g. 'send_msg'\r\n * @returns {Object} - The operator config found at operatorConfigs[type] or -1\r\n */\r\nexport const getOperatorConfig = (type: Operators): Operator => operatorConfigMap[type];\r\n","import { isRelativeDate } from 'components/flow/routers/helpers';\r\nimport { Operator, Operators } from 'config/interfaces';\r\nimport { getOperatorConfig } from 'config/operatorConfigs';\r\nimport {\r\n  LessThan,\r\n  MoreThan,\r\n  Numeric,\r\n  NumOrExp,\r\n  Required,\r\n  validate,\r\n  IsValidIntent\r\n} from 'store/validators';\r\nimport { titleCase } from 'utils';\r\n\r\nimport { CaseElementProps, CaseElementState } from './CaseElement';\r\nimport { SelectOption } from 'components/form/select/SelectElement';\r\nimport { Asset } from 'store/flowContext';\r\nimport i18n from 'config/i18n';\r\n\r\nexport const initializeForm = (props: CaseElementProps): CaseElementState => {\r\n  const arg1 =\r\n    props.kase.arguments && props.kase.arguments.length >= 1 ? props.kase.arguments[0] : '';\r\n  const arg2 =\r\n    props.kase.arguments && props.kase.arguments.length === 2 ? props.kase.arguments[1] : '';\r\n\r\n  return {\r\n    errors: [],\r\n    operatorConfig: getOperatorConfig(props.kase.type),\r\n    argument: { value: arg1 },\r\n    min: { value: arg1 },\r\n    max: { value: arg2 },\r\n    state: { value: arg1 },\r\n    district: { value: arg2 },\r\n    intent: { value: arg1 ? { label: arg1, value: arg1 } : null },\r\n    confidence: { value: arg2 },\r\n    categoryName: { value: props.categoryName || '' },\r\n    categoryNameEdited: !!props.categoryName,\r\n    valid: true\r\n  };\r\n};\r\n/**\r\n * Determines prefix for case's exit name\r\n */\r\nexport const prefix = (operatorType: string): string => {\r\n  let pre = '';\r\n\r\n  if (operatorType.indexOf('_lt') > -1) {\r\n    if (operatorType.indexOf('date') > -1) {\r\n      pre = 'Before ';\r\n    } else {\r\n      if (operatorType.indexOf('lte') > -1) {\r\n        pre = '<= ';\r\n      } else {\r\n        pre = '< ';\r\n      }\r\n    }\r\n  } else if (operatorType.indexOf('_gt') > -1) {\r\n    if (operatorType.indexOf('date') > -1) {\r\n      pre = 'After ';\r\n    } else {\r\n      if (operatorType.indexOf('gte') > -1) {\r\n        pre = '>= ';\r\n      } else {\r\n        pre = '>';\r\n      }\r\n    }\r\n  }\r\n\r\n  return pre;\r\n};\r\n\r\n/**\r\n * Returns min, max values for Operators.has_number_between case\r\n */\r\nexport const getMinMax = (args: string[] = []): { min: string; max: string } => {\r\n  let min = '';\r\n  let max = '';\r\n  if (args.length) {\r\n    if (strContainsNum(args[0])) {\r\n      min = args[0];\r\n    }\r\n    if (args[1]) {\r\n      if (strContainsNum(args[1])) {\r\n        max = args[1];\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    min,\r\n    max\r\n  };\r\n};\r\n\r\nexport const isFloat = (val: string): boolean => /^[+-]?\\d?(\\.\\d*)?$/.test(val.trim());\r\n\r\nexport const isInt = (val: string): boolean => /^[+-]?\\d+$/.test(val.trim());\r\n\r\nexport const strContainsNum = (str: string): boolean => {\r\n  const trimmed = str.trim();\r\n  if (isFloat(trimmed)) {\r\n    return true;\r\n  } else if (isInt(trimmed)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const parseNum = (str: string): number => {\r\n  const trimmed = (str || '').trim();\r\n  if (isFloat(trimmed)) {\r\n    return parseFloat(str);\r\n  } else if (isInt(trimmed)) {\r\n    return parseInt(trimmed, 10);\r\n  }\r\n};\r\n\r\nexport const validateCase = (keys: {\r\n  operatorConfig: Operator;\r\n  argument?: string;\r\n  state?: string;\r\n  district?: string;\r\n  min?: string;\r\n  max?: string;\r\n  confidence?: string;\r\n  intent?: SelectOption;\r\n  exitName?: string;\r\n  exitEdited?: boolean;\r\n  classifier?: Asset;\r\n}): Partial<CaseElementState> => {\r\n  // when the exit is set, our arguments become required\r\n  const validators = keys.exitEdited && keys.exitName ? [Required] : [];\r\n\r\n  const updates: Partial<CaseElementState> = {\r\n    operatorConfig: keys.operatorConfig\r\n  };\r\n\r\n  updates.district = { value: '', validationFailures: [] };\r\n  updates.state = { value: '', validationFailures: [] };\r\n  updates.min = { value: '', validationFailures: [] };\r\n  updates.max = { value: '', validationFailures: [] };\r\n  updates.argument = { value: '', validationFailures: [] };\r\n  updates.intent = { value: null, validationFailures: [] };\r\n  updates.confidence = { value: '', validationFailures: [] };\r\n\r\n  if (keys.operatorConfig.operands > 0) {\r\n    switch (keys.operatorConfig.type) {\r\n      case Operators.has_number_eq:\r\n      case Operators.has_number_gt:\r\n      case Operators.has_number_gte:\r\n      case Operators.has_number_lt:\r\n      case Operators.has_number_lte:\r\n        validators.push(NumOrExp);\r\n        break;\r\n      case Operators.has_date_eq:\r\n      case Operators.has_date_lt:\r\n      case Operators.has_date_gt:\r\n        validators.push(Numeric);\r\n        break;\r\n    }\r\n\r\n    if (keys.operatorConfig.type === Operators.has_number_between) {\r\n      updates.min = validate(\r\n        i18n.t('forms.minimum_value', 'Minimum value'),\r\n        keys.min || '',\r\n        validators.concat([\r\n          Numeric,\r\n          LessThan(parseFloat(keys.max), i18n.t('forms.the_maximum', 'the maximum'))\r\n        ])\r\n      );\r\n\r\n      updates.max = validate(\r\n        i18n.t('forms.maximum_value', 'Maximum value'),\r\n        keys.max || '',\r\n        validators.concat([\r\n          Numeric,\r\n          MoreThan(parseFloat(keys.min), i18n.t('forms.the_minimum', 'the minimum'))\r\n        ])\r\n      );\r\n    } else if (keys.operatorConfig.type === Operators.has_district) {\r\n      updates.argument = validate(\r\n        i18n.t('forms.state', 'State'),\r\n        keys.argument || '',\r\n        validators.concat([])\r\n      );\r\n    } else if (keys.operatorConfig.type === Operators.has_ward) {\r\n      updates.state = validate(\r\n        i18n.t('forms.state', 'State'),\r\n        keys.state || '',\r\n        validators.concat([])\r\n      );\r\n      updates.district = validate(\r\n        i18n.t('forms.district', 'District'),\r\n        keys.district || '',\r\n        validators.concat([])\r\n      );\r\n    } else if (\r\n      keys.operatorConfig.type === Operators.has_top_intent ||\r\n      keys.operatorConfig.type === Operators.has_intent\r\n    ) {\r\n      const intentValidators = [IsValidIntent(keys.classifier)];\r\n      if (keys.confidence) {\r\n        intentValidators.push(Required);\r\n      }\r\n      updates.intent = validate(i18n.t('forms.intent', 'Intent'), keys.intent, intentValidators);\r\n      updates.confidence = validate(\r\n        i18n.t('forms.confidence', 'Confidence'),\r\n        keys.confidence || '',\r\n        validators.concat(keys.intent ? [Numeric, Required] : [Numeric])\r\n      );\r\n    } else {\r\n      updates.argument = validate('Value', keys.argument || '', validators);\r\n    }\r\n  }\r\n\r\n  updates.categoryNameEdited = !!keys.exitEdited;\r\n  updates.categoryName = validate(\r\n    i18n.t('forms.category', 'Category'),\r\n    updates.categoryNameEdited ? keys.exitName : getCategoryName(updates),\r\n    updates.argument.value ||\r\n      (updates.min.value && updates.max.value) ||\r\n      (updates.state.value && updates.district.value)\r\n      ? [Required]\r\n      : []\r\n  );\r\n\r\n  updates.valid =\r\n    updates.state.validationFailures.length === 0 &&\r\n    updates.district.validationFailures.length === 0 &&\r\n    updates.min.validationFailures.length === 0 &&\r\n    updates.max.validationFailures.length === 0 &&\r\n    updates.argument.validationFailures.length === 0 &&\r\n    updates.intent.validationFailures.length === 0 &&\r\n    updates.confidence.validationFailures.length === 0 &&\r\n    updates.categoryName.validationFailures.length === 0;\r\n\r\n  return updates;\r\n};\r\n\r\nexport const getCategoryName = (state: Partial<CaseElementState>): string => {\r\n  if (state.categoryNameEdited) {\r\n    return state.categoryName.value;\r\n  }\r\n\r\n  if (state.operatorConfig.operands === 0) {\r\n    return state.operatorConfig.categoryName;\r\n  }\r\n\r\n  if (\r\n    state.operatorConfig.type === Operators.has_intent ||\r\n    state.operatorConfig.type === Operators.has_top_intent\r\n  ) {\r\n    if (state.intent.value) {\r\n      return titleCase(state.intent.value.label.replace('_', ' '));\r\n    }\r\n  }\r\n\r\n  if (\r\n    state.operatorConfig.type === Operators.has_number_between &&\r\n    state.min.value &&\r\n    state.max.value\r\n  ) {\r\n    return `${state.min.value} - ${state.max.value}`;\r\n  }\r\n\r\n  if (isRelativeDate(state.operatorConfig.type)) {\r\n    const count = parseInt(state.argument.value, 10);\r\n    if (!isNaN(count)) {\r\n      const today =\r\n        state.operatorConfig.type === Operators.has_date_eq\r\n          ? i18n.t('forms.today_proper', 'Today')\r\n          : i18n.t('forms.today', 'today');\r\n      const op = count < 0 ? ' - ' : ' + ';\r\n      const inDays =\r\n        ' ' + (Math.abs(count) === 1 ? i18n.t('forms.day', 'day') : i18n.t('forms.days', 'days'));\r\n      return prefix(state.operatorConfig.type) + today + op + Math.abs(count) + inDays;\r\n    }\r\n  }\r\n\r\n  if (state.argument && state.argument.value) {\r\n    const pre = prefix(state.operatorConfig.type);\r\n    const words = state.argument.value.match(/\\w+/g);\r\n\r\n    if (words && words.length > 0) {\r\n      const [firstWord] = words;\r\n      return pre + titleCase(firstWord);\r\n    }\r\n\r\n    return pre + titleCase(state.argument.value);\r\n  }\r\n\r\n  return '';\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { isRelativeDate } from 'components/flow/routers/helpers';\r\nimport FormElement from 'components/form/FormElement';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { filterOperators } from 'config/helpers';\r\nimport { Operator, Operators } from 'config/interfaces';\r\nimport { operatorConfigList } from 'config/operatorConfigs';\r\nimport { Case } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { FormState, StringEntry, SelectOptionEntry } from 'store/nodeEditor';\r\nimport { hasErrorType } from 'utils';\r\n\r\nimport styles from './CaseElement.module.scss';\r\nimport { initializeForm, validateCase } from './helpers';\r\nimport { Asset } from 'store/flowContext';\r\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\r\nimport i18n from 'config/i18n';\r\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\r\n\r\nexport interface CaseElementProps {\r\n  kase: Case;\r\n  categoryName: string;\r\n  name?: string; // satisfy form widget props\r\n  onRemove?(uuid: string): void;\r\n  onChange?(c: CaseProps): void;\r\n  operators?: Operator[];\r\n  classifier?: Asset;\r\n}\r\n\r\nexport interface CaseElementState extends FormState {\r\n  errors: string[];\r\n  operatorConfig: Operator;\r\n  categoryName: StringEntry;\r\n  categoryNameEdited: boolean;\r\n\r\n  // for string based args\r\n  argument: StringEntry;\r\n\r\n  // for numeric operators\r\n  min: StringEntry;\r\n  max: StringEntry;\r\n\r\n  // intents\r\n  intent: SelectOptionEntry;\r\n  confidence: StringEntry;\r\n\r\n  state: StringEntry;\r\n  district: StringEntry;\r\n}\r\n\r\nexport default class CaseElement extends React.Component<CaseElementProps, CaseElementState> {\r\n  private operators: Operator[];\r\n\r\n  constructor(props: CaseElementProps) {\r\n    super(props);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^get/]\r\n    });\r\n\r\n    this.state = initializeForm(props);\r\n  }\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  public componentDidMount() {\r\n    const updates = validateCase({\r\n      operatorConfig: this.state.operatorConfig,\r\n      argument: this.state.argument.value,\r\n      min: this.state.min.value,\r\n      max: this.state.max.value,\r\n      intent: this.state.intent.value,\r\n      confidence: this.state.confidence.value,\r\n      exitName: this.state.categoryName.value,\r\n      exitEdited: this.state.categoryNameEdited,\r\n      classifier: this.props.classifier\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, this.handleChange);\r\n  }\r\n\r\n  public componentDidUpdate(previousProps: CaseElementProps): void {\r\n    if (\r\n      this.props.classifier &&\r\n      this.props.classifier !== previousProps.classifier &&\r\n      this.state.intent.value\r\n    ) {\r\n      const updates = validateCase({\r\n        operatorConfig: this.state.operatorConfig,\r\n        argument: this.state.argument.value,\r\n        min: this.state.min.value,\r\n        max: this.state.max.value,\r\n        intent: this.state.intent.value,\r\n        confidence: this.state.confidence.value,\r\n        exitName: this.state.categoryName.value,\r\n        exitEdited: this.state.categoryNameEdited,\r\n        classifier: this.props.classifier\r\n      });\r\n\r\n      this.setState(updates as CaseElementState, this.handleChange);\r\n    }\r\n  }\r\n\r\n  private getOperators(): Operator[] {\r\n    let operators = this.props.operators || operatorConfigList;\r\n    if (this.operators === undefined) {\r\n      this.operators = filterOperators(operators, this.context.config);\r\n    }\r\n\r\n    return this.operators;\r\n  }\r\n\r\n  private getArgumentArray(): string[] {\r\n    if (this.state.operatorConfig.operands === 0) {\r\n      return [];\r\n    }\r\n\r\n    if (\r\n      this.state.operatorConfig.type === Operators.has_intent ||\r\n      this.state.operatorConfig.type === Operators.has_top_intent\r\n    ) {\r\n      if (this.state.intent.value) {\r\n        return [this.state.intent.value.value, this.state.confidence.value];\r\n      } else {\r\n        return ['', this.state.confidence.value];\r\n      }\r\n    }\r\n\r\n    if (this.state.operatorConfig.type === Operators.has_number_between) {\r\n      return [this.state.min.value, this.state.max.value];\r\n    }\r\n\r\n    if (this.state.operatorConfig.type === Operators.has_ward) {\r\n      return [this.state.state.value, this.state.district.value];\r\n    }\r\n\r\n    return [this.state.argument.value];\r\n  }\r\n\r\n  private handleOperatorChanged(operatorConfig: Operator): void {\r\n    const updates = validateCase({\r\n      operatorConfig,\r\n      argument: this.state.argument.value,\r\n      min: this.state.min.value,\r\n      max: this.state.max.value,\r\n      intent: this.state.intent.value,\r\n      confidence: this.state.confidence.value,\r\n      exitName: this.state.categoryName.value,\r\n      exitEdited: this.state.categoryNameEdited,\r\n      classifier: this.props.classifier\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, () => this.handleChange());\r\n  }\r\n\r\n  private handleArgumentChanged(value: string): void {\r\n    const updates = validateCase({\r\n      operatorConfig: this.state.operatorConfig,\r\n      argument: value,\r\n      exitName: this.state.categoryName.value,\r\n      exitEdited: this.state.categoryNameEdited\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, () => this.handleChange());\r\n  }\r\n\r\n  private handleDistrictChanged(value: string): void {\r\n    const updates = validateCase({\r\n      operatorConfig: this.state.operatorConfig,\r\n      argument: this.state.argument.value,\r\n      state: this.state.state.value,\r\n      district: value,\r\n      exitName: this.state.categoryName.value,\r\n      exitEdited: this.state.categoryNameEdited\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, () => this.handleChange());\r\n  }\r\n\r\n  /** The user changed the value for the state (a location-based state) */\r\n  private handleStateChanged(value: string): void {\r\n    const updates = validateCase({\r\n      operatorConfig: this.state.operatorConfig,\r\n      argument: this.state.argument.value,\r\n      district: this.state.district.value,\r\n      state: value,\r\n      exitName: this.state.categoryName.value,\r\n      exitEdited: this.state.categoryNameEdited\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, () => this.handleChange());\r\n  }\r\n\r\n  private handleIntentChanged(selected: SelectOption): void {\r\n    const updates = validateCase({\r\n      operatorConfig: this.state.operatorConfig,\r\n      intent: selected,\r\n      confidence: this.state.confidence.value || '.9',\r\n      exitName: this.state.categoryName.value,\r\n      exitEdited: this.state.categoryNameEdited,\r\n      classifier: this.props.classifier\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, () => this.handleChange());\r\n  }\r\n\r\n  private handleConfidenceChanged(value: string): void {\r\n    const updates = validateCase({\r\n      operatorConfig: this.state.operatorConfig,\r\n      intent: this.state.intent.value,\r\n      confidence: value,\r\n      exitName: this.state.categoryName.value,\r\n      exitEdited: this.state.categoryNameEdited,\r\n      classifier: this.props.classifier\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, () => this.handleChange());\r\n  }\r\n\r\n  private handleMinChanged(value: string): void {\r\n    const updates = validateCase({\r\n      operatorConfig: this.state.operatorConfig,\r\n      min: value,\r\n      max: this.state.max.value,\r\n      exitName: this.state.categoryName.value,\r\n      exitEdited: this.state.categoryNameEdited\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, () => this.handleChange());\r\n  }\r\n\r\n  private handleMaxChanged(value: string): void {\r\n    const updates = validateCase({\r\n      operatorConfig: this.state.operatorConfig,\r\n      min: this.state.min.value,\r\n      max: value,\r\n      exitName: this.state.categoryName.value,\r\n      exitEdited: this.state.categoryNameEdited\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, () => this.handleChange());\r\n  }\r\n\r\n  private handleExitChanged(value: string): void {\r\n    const updates = validateCase({\r\n      operatorConfig: this.state.operatorConfig,\r\n      state: this.state.state.value,\r\n      district: this.state.district.value,\r\n      argument: this.state.argument.value,\r\n      min: this.state.min.value,\r\n      max: this.state.max.value,\r\n      intent: this.state.intent.value,\r\n      confidence: this.state.confidence.value,\r\n      classifier: this.props.classifier,\r\n      exitName: value,\r\n      exitEdited: true\r\n    });\r\n\r\n    this.setState(updates as CaseElementState, () => this.handleChange());\r\n  }\r\n\r\n  private handleRemoveClicked(): void {\r\n    this.props.onRemove(this.props.kase.uuid);\r\n  }\r\n\r\n  private getCaseProps(): CaseProps {\r\n    const props = {\r\n      uuid: this.props.kase.uuid,\r\n      categoryName: this.state.categoryName.value,\r\n      kase: {\r\n        arguments: this.getArgumentArray(),\r\n        type: this.state.operatorConfig.type,\r\n        uuid: this.props.kase.uuid,\r\n\r\n        // if the exit name changed, we'll need to recompute our exit\r\n        category_uuid: this.state.categoryNameEdited ? null : this.props.kase.category_uuid\r\n      },\r\n      valid: this.state.valid\r\n    };\r\n\r\n    return props;\r\n  }\r\n\r\n  private handleChange(): void {\r\n    // If the case doesn't have arguments & an exit name, remove it\r\n    if (!this.state.categoryName.value) {\r\n      // see if we are clearing out a between\r\n      if (this.state.operatorConfig.type === Operators.has_number_between) {\r\n        if (!this.state.min.value && !this.state.max.value) {\r\n          // this.handleRemoveClicked();\r\n          // return;\r\n        }\r\n      }\r\n      // see if we are clearing out a single operand\r\n      else {\r\n        if (!this.state.argument.value) {\r\n          // this.handleRemoveClicked();\r\n          // return;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.props.onChange(this.getCaseProps());\r\n  }\r\n\r\n  private handleIntentMenuOpened() {\r\n    // hiding any errors when the menu opens\r\n    this.setState({ intent: { value: this.state.intent.value } });\r\n  }\r\n\r\n  private handleIntentMenuClosed() {\r\n    // we want to revalidate close without selection\r\n    // wait a cycle for selection event to fire first\r\n    window.setTimeout(() => {\r\n      this.handleIntentChanged(this.state.intent.value);\r\n    }, 0);\r\n  }\r\n\r\n  private renderArguments(): JSX.Element {\r\n    if (this.state.operatorConfig.operands > 0) {\r\n      // First pass at displaying, handling Operators.has_number_between inputs\r\n      if (this.state.operatorConfig.operands > 1) {\r\n        if (this.state.operatorConfig.type === Operators.has_number_between) {\r\n          return (\r\n            <>\r\n              <TextInputElement\r\n                name={i18n.t('forms.arguments', 'arguments')}\r\n                onChange={this.handleMinChanged}\r\n                entry={this.state.min}\r\n              />\r\n              <span className={styles.divider} data-draggable={true}>\r\n                and\r\n              </span>\r\n              <TextInputElement\r\n                name={i18n.t('forms.arguments', 'arguments')}\r\n                onChange={this.handleMaxChanged}\r\n                entry={this.state.max}\r\n              />\r\n            </>\r\n          );\r\n        } else if (\r\n          this.state.operatorConfig.type === Operators.has_intent ||\r\n          this.state.operatorConfig.type === Operators.has_top_intent\r\n        ) {\r\n          let intents: SelectOption[] = [];\r\n\r\n          if (this.props.classifier && this.props.classifier.content) {\r\n            intents = this.props.classifier.content.intents.map((intent: string) => {\r\n              const option = {\r\n                label: intent,\r\n                value: intent\r\n              };\r\n              return option;\r\n            });\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <div style={{ width: '114px' }}>\r\n                <SelectElement\r\n                  key=\"intent_select\"\r\n                  style={TembaSelectStyle.small}\r\n                  name={i18n.t('forms.intent', 'Intent')}\r\n                  entry={this.state.intent}\r\n                  onChange={this.handleIntentChanged}\r\n                  options={intents}\r\n                  onMenuOpen={this.handleIntentMenuOpened}\r\n                  onMenuClose={this.handleIntentMenuClosed}\r\n                  placeholder=\"\"\r\n                ></SelectElement>\r\n              </div>\r\n              <span className={styles.divider} data-draggable={true}>\r\n                above\r\n              </span>\r\n              <div style={{ width: '34px' }}>\r\n                <TextInputElement\r\n                  name={i18n.t('forms.confidence', 'confidence')}\r\n                  onChange={this.handleConfidenceChanged}\r\n                  entry={this.state.confidence}\r\n                  placeholder=\".9\"\r\n                />\r\n              </div>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <>\r\n              <TextInputElement\r\n                name={i18n.t('forms.state', 'State')}\r\n                placeholder=\"State\"\r\n                onChange={this.handleStateChanged}\r\n                entry={this.state.state}\r\n              />\r\n              <span className={styles.divider} data-draggable={true}>\r\n                and\r\n              </span>\r\n              <TextInputElement\r\n                name={i18n.t('forms.district', 'District')}\r\n                placeholder={i18n.t('forms.district', 'District')}\r\n                onChange={this.handleDistrictChanged}\r\n                entry={this.state.district}\r\n              />\r\n            </>\r\n          );\r\n        }\r\n      } else if (isRelativeDate(this.state.operatorConfig.type)) {\r\n        return (\r\n          <>\r\n            <span className={styles.divider} data-draggable={true}>\r\n              today +{' '}\r\n            </span>\r\n            <TextInputElement\r\n              __className={styles.relative_date}\r\n              name={i18n.t('forms.arguments', 'arguments')}\r\n              onChange={this.handleArgumentChanged}\r\n              entry={this.state.argument}\r\n              autocomplete={false}\r\n            />\r\n            <span className={styles.divider}>days</span>\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <TextInputElement\r\n            name={i18n.t('forms.arguments', 'arguments')}\r\n            onChange={this.handleArgumentChanged}\r\n            entry={this.state.argument}\r\n            placeholder={this.state.operatorConfig.type === Operators.has_district ? 'State' : ''}\r\n            autocomplete={true}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <FormElement\r\n        data-spec=\"case-form\"\r\n        name={this.props.name}\r\n        __className={styles.group}\r\n        kaseError={this.state.errors.length > 0}\r\n      >\r\n        <div\r\n          className={`${styles.kase} ${styles[this.state.operatorConfig.type]}`}\r\n          data-draggable={true}\r\n        >\r\n          <span className={`fe-chevrons-expand ${styles.dnd_icon}`} data-draggable={true} />\r\n          <div className={styles.choice}>\r\n            <TembaSelect\r\n              name={i18n.t('forms.operator', 'operator')}\r\n              style={TembaSelectStyle.small}\r\n              options={this.getOperators()}\r\n              nameKey=\"verboseName\"\r\n              valueKey=\"type\"\r\n              onChange={this.handleOperatorChanged}\r\n              value={this.state.operatorConfig}\r\n            ></TembaSelect>\r\n          </div>\r\n          <div\r\n            className={\r\n              this.state.operatorConfig.operands > 1 ? styles.multi_operand : styles.single_operand\r\n            }\r\n          >\r\n            {this.renderArguments()}\r\n          </div>\r\n          <div className={styles.categorize_as} data-draggable={true}>\r\n            categorize as\r\n          </div>\r\n          <div className={styles.category}>\r\n            <TextInputElement\r\n              name={i18n.t('forms.exit_name', 'Exit Name')}\r\n              onChange={this.handleExitChanged}\r\n              entry={this.state.categoryName}\r\n              maxLength={36}\r\n              showInvalid={hasErrorType(this.state.errors, [/category/])}\r\n            />\r\n          </div>\r\n          <span\r\n            data-testid={'remove-case-' + this.props.kase.uuid}\r\n            className={`fe-x ${styles.remove_icon}`}\r\n            onClick={this.handleRemoveClicked}\r\n          />\r\n        </div>\r\n      </FormElement>\r\n    );\r\n  }\r\n}\r\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { Operators } from 'config/interfaces';\r\nimport { createUUID } from 'utils';\r\n\r\nexport const createEmptyCase = (): CaseProps => {\r\n  const uuid = createUUID();\r\n  return {\r\n    uuid,\r\n    kase: {\r\n      uuid,\r\n      type: Operators.has_any_word,\r\n      arguments: [''],\r\n      category_uuid: null\r\n    },\r\n    categoryName: '',\r\n    valid: true\r\n  };\r\n};\r\n","import arrayMove from 'array-move';\r\nimport { react as bindCallbacks } from 'auto-bind';\r\nimport CaseElement from 'components/flow/routers/case/CaseElement';\r\nimport { createEmptyCase } from 'components/flow/routers/caselist/helpers';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { Case } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { FormState, mergeForm } from 'store/nodeEditor';\r\nimport { SortableElement, SortEnd, SortableContainer } from 'react-sortable-hoc';\r\n\r\nimport styles from './CaseList.module.scss';\r\nimport { Operator } from 'config/interfaces';\r\nimport { Asset } from 'store/flowContext';\r\n\r\nexport enum DragCursor {\r\n  move = 'move',\r\n  pointer = 'pointer'\r\n}\r\n\r\nexport interface CaseProps {\r\n  uuid: string;\r\n  kase: Case;\r\n  categoryName: string;\r\n  valid: boolean;\r\n  operators?: Operator[];\r\n  classifier?: Asset;\r\n}\r\n\r\nexport interface CaseListProps {\r\n  cases: CaseProps[];\r\n  onCasesUpdated(cases: CaseProps[]): void;\r\n  operators?: Operator[];\r\n  classifier?: Asset;\r\n  createEmptyCase?: () => CaseProps;\r\n}\r\n\r\nexport interface CaseListState extends FormState {\r\n  currentCases: CaseProps[];\r\n}\r\n\r\nconst SortableItem = SortableElement(({ value: row }: any) => {\r\n  const caseProps = row.item;\r\n  return (\r\n    <div className={styles.kase + ' case_list_case'}>\r\n      <CaseElement\r\n        key={caseProps.uuid}\r\n        {...caseProps}\r\n        onRemove={row.list.handleRemoveCase}\r\n        onChange={row.list.handleUpdateCase}\r\n        operators={row.list.props.operators}\r\n        classifier={row.list.props.classifier}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\n/**\r\n * CaseList is a component made up of case elements that lets\r\n * the user configure rules and drag and drop to set their order.\r\n */\r\nexport default class CaseList extends React.Component<CaseListProps, CaseListState> {\r\n  private sortableList = SortableContainer(({ items }: any) => {\r\n    return (\r\n      <div className={styles.case_list}>\r\n        {items.map((value: any, index: any) => (\r\n          <SortableItem\r\n            key={`item-${index}`}\r\n            index={index}\r\n            value={{ item: value, list: this }}\r\n            disabled={index === this.state.currentCases.length - 1}\r\n            shouldCancelStart={(e: any) => {\r\n              console.log(e);\r\n              return true;\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  constructor(props: CaseListProps) {\r\n    super(props);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n\r\n    const caseProps = this.props.cases;\r\n\r\n    if (!this.hasEmptyCase(caseProps)) {\r\n      caseProps.push(this.createEmptyCase());\r\n    }\r\n\r\n    // initialize our cases\r\n    this.state = {\r\n      currentCases: caseProps,\r\n      valid: true\r\n    };\r\n  }\r\n\r\n  private createEmptyCase(): CaseProps {\r\n    return this.props.createEmptyCase ? this.props.createEmptyCase() : createEmptyCase();\r\n  }\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  private handleUpdate(keys: { caseProps?: CaseProps; removeCase?: any }) {\r\n    const updates: Partial<CaseListState> = {};\r\n\r\n    let ensureEmptyCase = false;\r\n\r\n    if (keys.hasOwnProperty('caseProps')) {\r\n      updates.currentCases = [keys.caseProps];\r\n      ensureEmptyCase = true;\r\n      if (!keys.caseProps.valid) {\r\n        // TODO: refactor this to be a form entry\r\n        // mock our case to have validation failures, this is so the case list sees\r\n        // the existence of errors which mergeForm uses when merging form validity\r\n        // (keys.caseProps as any).validationFailures = [{ message: 'invalid case' }];\r\n        updates.valid = false;\r\n      }\r\n    }\r\n\r\n    let toRemove: any[] = [];\r\n    if (keys.hasOwnProperty('removeCase')) {\r\n      toRemove = [{ currentCases: [keys.removeCase] }];\r\n      ensureEmptyCase = true;\r\n    }\r\n\r\n    // update our form\r\n    this.setState(\r\n      (prevState: CaseListState) => {\r\n        const updated = mergeForm(prevState, updates, toRemove) as CaseListState;\r\n\r\n        // notify our listener\r\n        this.props.onCasesUpdated(updated.currentCases);\r\n        return updated;\r\n      },\r\n      () => {\r\n        // if we no longer have an empty case, add one\r\n        if (ensureEmptyCase) {\r\n          if (!this.hasEmptyCase(this.state.currentCases)) {\r\n            this.handleUpdate({ caseProps: this.createEmptyCase() });\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private hasEmptyCase(cases: CaseProps[]): boolean {\r\n    return cases.find((caseProps: CaseProps) => caseProps.categoryName.trim().length === 0) != null;\r\n  }\r\n\r\n  private handleRemoveCase(uuid: string) {\r\n    return this.handleUpdate({\r\n      removeCase: { uuid }\r\n    });\r\n  }\r\n\r\n  private handleUpdateCase(caseProps: CaseProps) {\r\n    this.handleUpdate({ caseProps });\r\n  }\r\n\r\n  private handleSortEnd({ oldIndex, newIndex }: SortEnd): void {\r\n    this.setState(\r\n      ({ currentCases }) => ({\r\n        currentCases: arrayMove(\r\n          currentCases,\r\n          oldIndex,\r\n          newIndex === this.state.currentCases.length - 1 ? newIndex - 1 : newIndex\r\n        )\r\n      }),\r\n      () => {\r\n        this.props.onCasesUpdated(this.state.currentCases);\r\n      }\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div\r\n        className={\r\n          styles.case_list_container +\r\n          ' ' +\r\n          (this.state.currentCases.length > 5 ? styles.scrolling : '')\r\n        }\r\n      >\r\n        <this.sortableList\r\n          items={this.state.currentCases}\r\n          onSortEnd={this.handleSortEnd}\r\n          shouldCancelStart={(e: React.MouseEvent<HTMLDivElement>) => {\r\n            if (!(e.target instanceof HTMLElement)) {\r\n              return true;\r\n            }\r\n            return !e.target.dataset.draggable;\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { nodeToState, stateToNode } from 'components/flow/routers/expression/helpers';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { FormState, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\r\nimport i18n from 'config/i18n';\r\n\r\n// TODO: Remove use of Function\r\n// tslint:disable:ban-types\r\nexport enum InputToFocus {\r\n  args = 'args',\r\n  min = 'min',\r\n  max = 'max',\r\n  exit = 'exit'\r\n}\r\n\r\nexport interface ExpressionRouterFormState extends FormState {\r\n  cases: CaseProps[];\r\n  resultName: StringEntry;\r\n  operand: StringEntry;\r\n}\r\n\r\nexport const leadInSpecId = 'lead-in';\r\n\r\nexport default class ExpressionRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  ExpressionRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleOperandUpdated(value: string): void {\r\n    this.setState({\r\n      operand: validate(i18n.t('forms.operand', 'Operand'), value, [Required])\r\n    });\r\n  }\r\n\r\n  private handleCasesUpdated(cases: CaseProps[]): void {\r\n    this.setState({ cases });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    if (this.state.valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p>If the expression...</p>\r\n        <TextInputElement\r\n          name={i18n.t('forms.operand', 'Operand')}\r\n          showLabel={false}\r\n          autocomplete={true}\r\n          onChange={this.handleOperandUpdated}\r\n          entry={this.state.operand}\r\n        />\r\n        <CaseList\r\n          data-spec=\"cases\"\r\n          cases={this.state.cases}\r\n          onCasesUpdated={this.handleCasesUpdated}\r\n        />\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { FormState, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\r\n\r\nimport styles from './DigitsRouterForm.module.scss';\r\nimport { nodeToState, stateToNode } from './helpers';\r\nimport i18n from 'config/i18n';\r\n\r\nexport interface DigitsRouterFormState extends FormState {\r\n  cases: CaseProps[];\r\n  resultName: StringEntry;\r\n}\r\n\r\nexport default class DigitsRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  DigitsRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleCasesUpdated(cases: CaseProps[]): void {\r\n    this.setState({ cases });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    if (this.state.valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p className={styles.lead_in}>If the keypad entry before the # symbol..</p>\r\n        <CaseList\r\n          data-spec=\"cases\"\r\n          cases={this.state.cases}\r\n          onCasesUpdated={this.handleCasesUpdated}\r\n        />\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport {\r\n  createCaseProps,\r\n  createRenderNode,\r\n  hasCases,\r\n  resolveRoutes\r\n} from 'components/flow/routers/helpers';\r\nimport { Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\n\r\nimport { DigitsRouterFormState } from './DigitsRouterForm';\r\nimport { DIGITS_OPERAND } from 'components/nodeeditor/constants';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): DigitsRouterFormState => {\r\n  let initialCases: CaseProps[] = [];\r\n\r\n  // TODO: work out an incremental result name\r\n  let resultName: StringEntry = { value: '' };\r\n\r\n  if (getType(settings.originalNode) === Types.wait_for_digits) {\r\n    const router = settings.originalNode.node.router as SwitchRouter;\r\n    if (router) {\r\n      if (hasCases(settings.originalNode.node)) {\r\n        initialCases = createCaseProps(router.cases, settings.originalNode);\r\n      }\r\n\r\n      resultName = { value: router.result_name || '' };\r\n    }\r\n  }\r\n\r\n  return {\r\n    cases: initialCases,\r\n    resultName,\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: DigitsRouterFormState\r\n): RenderNode => {\r\n  const { cases, exits, categories, defaultCategory: defaultExit, caseConfig } = resolveRoutes(\r\n    state.cases,\r\n    false,\r\n    settings.originalNode.node\r\n  );\r\n\r\n  const optionalRouter: Pick<Router, 'result_name'> = {};\r\n  if (state.resultName.value) {\r\n    optionalRouter.result_name = state.resultName.value;\r\n  }\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    default_category_uuid: defaultExit,\r\n    categories,\r\n    cases,\r\n    operand: DIGITS_OPERAND,\r\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits } },\r\n    ...optionalRouter\r\n  };\r\n\r\n  const newRenderNode = createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.wait_for_response,\r\n    [],\r\n\r\n    { cases: caseConfig }\r\n  );\r\n\r\n  return newRenderNode;\r\n};\r\n","export const DEFAULT_OPERAND = '@input.text';\r\nexport const GROUPS_OPERAND = '@contact.groups';\r\nexport const WEBHOOK_OPERAND = '@run.webhook';\r\nexport const SUBFLOW_OPERAND = '@child.run.status';\r\nexport const MEDIA_OPERAND = '@input';\r\nexport const DIGITS_OPERAND = '@input.text';\r\nexport const MENU_OPERAND = '@input.text';\r\nexport const SCHEMES_OPERAND = '@(urn_parts(contact.urn).scheme)';\r\n\r\n// default body for non-GET webhook actions\r\nexport const DEFAULT_BODY: string = `@(json(object(\r\n  \"contact\", object(\r\n    \"uuid\", contact.uuid, \r\n    \"name\", contact.name, \r\n    \"urn\", contact.urn\r\n  ),\r\n  \"flow\", object(\r\n    \"uuid\", run.flow.uuid, \r\n    \"name\", run.flow.name\r\n  ),\r\n  \"results\", foreach_value(results, extract_object, \"value\", \"category\")\r\n)))`;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { sortFieldsAndProperties } from 'components/flow/actions/updatecontact/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport { AssetEntry, FormState, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\r\nimport { small } from 'utils/reactselect';\r\n\r\nimport styles from './FieldRouterForm.module.scss';\r\nimport { getRoutableFields, nodeToState, stateToNode } from './helpers';\r\nimport i18n from 'config/i18n';\r\n\r\n// TODO: Remove use of Function\r\n// tslint:disable:ban-types\r\nexport enum InputToFocus {\r\n  args = 'args',\r\n  min = 'min',\r\n  max = 'max',\r\n  exit = 'exit'\r\n}\r\n\r\nexport interface FieldRouterFormState extends FormState {\r\n  field: AssetEntry;\r\n  cases: CaseProps[];\r\n  resultName: StringEntry;\r\n}\r\n\r\nexport const leadInSpecId = 'lead-in';\r\n\r\nexport default class FieldRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  FieldRouterFormState\r\n> {\r\n  public static contextTypes = {\r\n    assetService: fakePropType,\r\n    config: fakePropType\r\n  };\r\n\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleFieldChanged(selected: Asset[]): void {\r\n    this.setState({ field: { value: selected[0] } });\r\n  }\r\n\r\n  private handleCasesUpdated(cases: CaseProps[]): void {\r\n    this.setState({ cases });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    if (this.state.valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <div className={styles.lead_in}>\r\n          If the contact's\r\n          <div className={`${styles.field_select} select-small`}>\r\n            <AssetSelector\r\n              name={i18n.t('forms.contact_field', 'Contact Field')}\r\n              styles={small as any}\r\n              assets={this.props.assetStore.fields}\r\n              additionalOptions={getRoutableFields(this.context.config.flowType)}\r\n              entry={this.state.field}\r\n              searchable={true}\r\n              sortFunction={sortFieldsAndProperties}\r\n              onChange={this.handleFieldChanged}\r\n            />\r\n          </div>\r\n        </div>\r\n        <CaseList\r\n          data-spec=\"cases\"\r\n          cases={this.state.cases}\r\n          onCasesUpdated={this.handleCasesUpdated}\r\n        />\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { ExpressionRouterFormState } from 'components/flow/routers/expression/ExpressionRouterForm';\r\nimport {\r\n  createCaseProps,\r\n  createRenderNode,\r\n  hasCases,\r\n  resolveRoutes\r\n} from 'components/flow/routers/helpers';\r\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\r\nimport { Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): ExpressionRouterFormState => {\r\n  let initialCases: CaseProps[] = [];\r\n\r\n  // TODO: work out an incremental result name\r\n  let resultName: StringEntry = { value: '' };\r\n\r\n  let operand = DEFAULT_OPERAND;\r\n\r\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_expression) {\r\n    const router = settings.originalNode.node.router as SwitchRouter;\r\n    if (router) {\r\n      if (hasCases(settings.originalNode.node)) {\r\n        initialCases = createCaseProps(router.cases, settings.originalNode);\r\n      }\r\n\r\n      resultName = { value: router.result_name || '' };\r\n    }\r\n\r\n    operand = router.operand;\r\n  }\r\n\r\n  return {\r\n    cases: initialCases,\r\n    resultName,\r\n    operand: { value: operand },\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: ExpressionRouterFormState\r\n): RenderNode => {\r\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\r\n    state.cases,\r\n    false,\r\n    settings.originalNode.node\r\n  );\r\n\r\n  const optionalRouter: Pick<Router, 'result_name'> = {};\r\n  if (state.resultName.value) {\r\n    optionalRouter.result_name = state.resultName.value;\r\n  }\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    default_category_uuid: defaultExit,\r\n    categories,\r\n    cases,\r\n    operand: state.operand.value,\r\n    ...optionalRouter\r\n  };\r\n\r\n  const newRenderNode = createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.split_by_expression,\r\n    [],\r\n    { cases: caseConfig }\r\n  );\r\n\r\n  return newRenderNode;\r\n};\r\n","import { NAME_PROPERTY } from 'components/flow/props';\r\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { FieldRouterFormState } from 'components/flow/routers/field/FieldRouterForm';\r\nimport {\r\n  createCaseProps,\r\n  createRenderNode,\r\n  hasCases,\r\n  resolveRoutes\r\n} from 'components/flow/routers/helpers';\r\nimport { getContactProperties } from 'components/helpers';\r\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\r\nimport { FlowTypes, Types } from 'config/interfaces';\r\nimport { getType, Scheme, SCHEMES } from 'config/typeConfigs';\r\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\r\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\n\r\nexport const getRoutableFields = (flowType: FlowTypes = null): Asset[] => {\r\n  return [\r\n    ...getContactProperties(flowType),\r\n    ...SCHEMES.map((scheme: Scheme) => ({\r\n      name: scheme.path,\r\n      id: scheme.scheme,\r\n      type: AssetType.Scheme\r\n    }))\r\n  ];\r\n};\r\n\r\nexport const nodeToState = (\r\n  settings: NodeEditorSettings,\r\n  assetStore: AssetStore\r\n): FieldRouterFormState => {\r\n  let initialCases: CaseProps[] = [];\r\n\r\n  // TODO: work out an incremental result name\r\n  let resultName: StringEntry = { value: '' };\r\n\r\n  let field: any = null;\r\n\r\n  const type = getType(settings.originalNode);\r\n  if (settings.originalNode && type === Types.split_by_contact_field) {\r\n    const router = settings.originalNode.node.router as SwitchRouter;\r\n\r\n    if (router) {\r\n      if (hasCases(settings.originalNode.node)) {\r\n        initialCases = createCaseProps(router.cases, settings.originalNode);\r\n      }\r\n\r\n      resultName = { value: router.result_name || '' };\r\n    }\r\n\r\n    const operand = settings.originalNode.ui.config.operand;\r\n\r\n    if (assetStore.fields) {\r\n      if (operand.id in assetStore.fields.items) {\r\n        const name = assetStore.fields.items[operand.id].name;\r\n        field = { id: operand.id, type: operand.type, name };\r\n      }\r\n    }\r\n\r\n    // couldn't find the asset, checkour routable fields\r\n    if (!field) {\r\n      field = getRoutableFields().find((asset: Asset) => asset.id === operand.id);\r\n    }\r\n  }\r\n\r\n  // our default is name\r\n  if (!field) {\r\n    field = NAME_PROPERTY;\r\n  }\r\n\r\n  return {\r\n    cases: initialCases,\r\n    resultName,\r\n    field: { value: field },\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: FieldRouterFormState\r\n): RenderNode => {\r\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\r\n    state.cases,\r\n    false,\r\n    settings.originalNode.node\r\n  );\r\n\r\n  const optionalRouter: Pick<Router, 'result_name'> = {};\r\n  if (state.resultName.value) {\r\n    optionalRouter.result_name = state.resultName.value;\r\n  }\r\n\r\n  let operand = DEFAULT_OPERAND;\r\n  const asset = state.field.value;\r\n  if (asset.type === AssetType.Scheme) {\r\n    operand = `@(default(urn_parts(urns.${asset.id}).path, \"\"))`;\r\n  } else if (asset.type === AssetType.Field) {\r\n    operand = `@fields.${asset.id}`;\r\n  } else {\r\n    operand = `@contact.${asset.id}`;\r\n  }\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    default_category_uuid: defaultExit,\r\n    cases,\r\n    categories,\r\n    operand,\r\n    ...optionalRouter\r\n  };\r\n\r\n  const newRenderNode = createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.split_by_contact_field,\r\n    [],\r\n    {\r\n      operand: {\r\n        id: asset.id,\r\n        type: asset.type,\r\n        name: asset.name\r\n      },\r\n      cases: caseConfig\r\n    }\r\n  );\r\n\r\n  return newRenderNode;\r\n};\r\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { GroupsRouterFormState } from 'components/flow/routers/groups/GroupsRouterForm';\r\nimport { createRenderNode, getSwitchRouter, resolveRoutes } from 'components/flow/routers/helpers';\r\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\r\nimport { Operators, Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { Category, FlowNode, RouterTypes, SwitchRouter } from 'flowTypes';\r\nimport { Asset, AssetType, RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\nimport { createUUID } from 'utils';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): GroupsRouterFormState => {\r\n  const state: GroupsRouterFormState = {\r\n    groups: { value: [] },\r\n    resultName: { value: '' },\r\n    valid: false\r\n  };\r\n\r\n  if (getType(settings.originalNode) === Types.split_by_groups) {\r\n    state.groups.value = extractGroups(settings.originalNode.node);\r\n    state.resultName = {\r\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\r\n    };\r\n    state.valid = true;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: GroupsRouterFormState\r\n): RenderNode => {\r\n  const currentCases = groupsToCases(state.groups.value);\r\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\r\n    currentCases,\r\n    false,\r\n    settings.originalNode.node\r\n  );\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    cases,\r\n    categories,\r\n    default_category_uuid: defaultExit,\r\n    operand: GROUPS_OPERAND,\r\n    result_name: state.resultName.value\r\n  };\r\n\r\n  return createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.split_by_groups,\r\n    [],\r\n    { cases: caseConfig }\r\n  );\r\n};\r\n\r\nexport const extractGroups = (node: FlowNode): Asset[] => {\r\n  let groups: Asset[] = [];\r\n  const router = getSwitchRouter(node);\r\n  if (router) {\r\n    groups = (router as SwitchRouter).cases.map(kase => {\r\n      const category = router.categories.find((cat: Category) => cat.uuid === kase.category_uuid);\r\n      return {\r\n        name: category.name,\r\n        id: kase.arguments[0],\r\n        type: AssetType.Group\r\n      };\r\n    });\r\n  }\r\n  return groups;\r\n};\r\nexport const groupsToCases = (groups: Asset[] = []): CaseProps[] =>\r\n  groups.map(({ name, id }: Asset) => ({\r\n    uuid: id,\r\n    kase: {\r\n      uuid: createUUID(),\r\n      type: Operators.has_group,\r\n      arguments: [id, name],\r\n      category_uuid: ''\r\n    },\r\n    categoryName: name,\r\n    valid: true\r\n  }));\r\n","import { Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { Case, Category, SwitchRouter } from 'flowTypes';\r\nimport { LocalizedObject } from 'services/Localization';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\n\r\nexport enum LocalizedType {\r\n  Category,\r\n  Case\r\n}\r\n\r\nexport const getOriginalCase = (nodeSettings: NodeEditorSettings, uuid: string) => {\r\n  const cases = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\r\n  return cases.find((item: any) => item.uuid === uuid);\r\n};\r\n\r\nexport const getOriginalCategory = (nodeSettings: NodeEditorSettings, uuid: string) => {\r\n  const items = nodeSettings.originalNode.node.router.categories;\r\n  return items.find((item: any) => item.uuid === uuid);\r\n};\r\n\r\nexport const hasLocalizableCases = (renderNode: RenderNode) => {\r\n  const type = getType(renderNode);\r\n  return type === Types.wait_for_response || type === Types.split_by_expression;\r\n};\r\n\r\nexport const getLocalizedObjects = (\r\n  nodeSettings: NodeEditorSettings,\r\n  localizedType: LocalizedType\r\n): Category[] | Case[] => {\r\n  const filtered: any = [];\r\n\r\n  let items: Category[] | Case[] = nodeSettings.originalNode.node.router.categories;\r\n  if (localizedType === LocalizedType.Case) {\r\n    if (hasLocalizableCases(nodeSettings.originalNode)) {\r\n      items = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\r\n    } else {\r\n      items = [];\r\n    }\r\n  }\r\n\r\n  for (const original of items) {\r\n    const [localized] = nodeSettings.localizations.filter(\r\n      (localizedObject: LocalizedObject) => localizedObject.getObject().uuid === original.uuid\r\n    );\r\n\r\n    if (localized.isLocalized()) {\r\n      filtered.push(localized.getObject());\r\n    } else {\r\n      filtered.push({ uuid: original.uuid });\r\n    }\r\n  }\r\n  return filtered;\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport { GROUP_LABEL } from 'components/flow/routers/constants';\r\nimport { nodeToState, stateToNode } from 'components/flow/routers/groups/helpers';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { Asset } from 'store/flowContext';\r\nimport { AssetArrayEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\r\nimport { Required, validate } from 'store/validators';\r\nimport i18n from 'config/i18n';\r\nimport { renderIssues } from 'components/flow/actions/helpers';\r\n\r\n// TODO: Remove use of Function\r\n// tslint:disable:ban-types\r\nexport interface GroupsRouterFormState extends FormState {\r\n  groups: AssetArrayEntry;\r\n  resultName: StringEntry;\r\n}\r\n\r\nexport default class GroupsRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  GroupsRouterFormState\r\n> {\r\n  public static contextTypes = {\r\n    endpoints: fakePropType,\r\n    assetService: fakePropType\r\n  };\r\n\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private handleGroupsChanged(groups: Asset[]): void {\r\n    this.handleUpdate({ groups });\r\n  }\r\n\r\n  private handleUpdateResultName(resultName: string): void {\r\n    this.handleUpdate({ resultName });\r\n  }\r\n\r\n  private handleUpdate(keys: { groups?: Asset[]; resultName?: string }): boolean {\r\n    const updates: Partial<GroupsRouterFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('groups')) {\r\n      updates.groups = validate(i18n.t('forms.groups', 'Groups'), keys.groups, [Required]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('resultName')) {\r\n      updates.resultName = { value: keys.resultName };\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    if (this.state.valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p>{GROUP_LABEL}</p>\r\n        <AssetSelector\r\n          name={i18n.t('forms.groups', 'Groups')}\r\n          assets={this.props.assetStore.groups}\r\n          entry={this.state.groups}\r\n          searchable={true}\r\n          onChange={this.handleGroupsChanged}\r\n          multi={true}\r\n        />\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\r\nimport { determineTypeConfig } from 'components/flow/helpers';\r\nimport { LocalizationFormProps } from 'components/flow/props';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport { getOperatorConfig } from 'config/operatorConfigs';\r\nimport { Case, Category } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { FormState, mergeForm } from 'store/nodeEditor';\r\n\r\nimport {\r\n  getLocalizedObjects,\r\n  getOriginalCase,\r\n  getOriginalCategory,\r\n  LocalizedType\r\n} from './helpers';\r\nimport styles from './RouterLocalizationForm.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { renderIssues } from 'components/flow/actions/helpers';\r\n\r\nexport interface RouterLocalizationFormState extends FormState {\r\n  categories: Category[];\r\n  cases: Case[];\r\n}\r\n\r\nexport default class RouterLocalizationForm extends React.Component<\r\n  LocalizationFormProps,\r\n  RouterLocalizationFormState\r\n> {\r\n  constructor(props: LocalizationFormProps) {\r\n    super(props);\r\n\r\n    const categories: Category[] = getLocalizedObjects(\r\n      props.nodeSettings,\r\n      LocalizedType.Category\r\n    ) as Category[];\r\n    const cases: Case[] = getLocalizedObjects(props.nodeSettings, LocalizedType.Case) as Case[];\r\n\r\n    this.state = { categories, cases, valid: true };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdate(keys: { category?: Category; kase?: Case }): boolean {\r\n    const updates: Partial<RouterLocalizationFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('category')) {\r\n      updates.categories = [keys.category];\r\n    }\r\n\r\n    if (keys.hasOwnProperty('kase')) {\r\n      updates.cases = [keys.kase];\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleUpdateCategoryName(category: Category, name: string): boolean {\r\n    category.name = name;\r\n    return this.handleUpdate({ category });\r\n  }\r\n\r\n  private handleUpdateCaseArgument(kase: Case, arg: string): boolean {\r\n    kase.arguments = [arg];\r\n    return this.handleUpdate({ kase });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // collect up our category localizations\r\n    const translations: any[] = this.state.categories.map((cat: Category) => {\r\n      return cat.name\r\n        ? {\r\n            uuid: cat.uuid,\r\n            translations: {\r\n              name: cat.name\r\n            }\r\n          }\r\n        : { uuid: cat.uuid };\r\n    });\r\n\r\n    // same thing for any cases\r\n    translations.push(\r\n      ...this.state.cases.map((kase: Case) => {\r\n        return kase.arguments\r\n          ? {\r\n              uuid: kase.uuid,\r\n              translations: {\r\n                arguments: kase.arguments\r\n              }\r\n            }\r\n          : { uuid: kase.uuid };\r\n      })\r\n    );\r\n\r\n    this.props.updateLocalizations(this.props.language.id, translations);\r\n\r\n    // notify our modal we are done\r\n    this.props.onClose(false);\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public renderCases(): JSX.Element[] {\r\n    return this.state.cases.map((kase: Case) => {\r\n      const originalCase = getOriginalCase(this.props.nodeSettings, kase.uuid) as Case;\r\n\r\n      const { verboseName } = getOperatorConfig(originalCase.type);\r\n\r\n      const [orginalArgument] = originalCase.arguments;\r\n\r\n      let argument = '';\r\n      if (kase.arguments && kase.arguments.length > 0) {\r\n        argument = kase.arguments[0];\r\n      }\r\n      const translation = i18n.t('forms.translation', 'Translation');\r\n\r\n      return (\r\n        <div\r\n          key={`translate_${kase.uuid}`}\r\n          data-spec=\"operator-field\"\r\n          className={styles.translating_operator_container}\r\n        >\r\n          <div data-spec=\"verbose-name\" className={styles.translating_operator}>\r\n            {verboseName}\r\n          </div>\r\n          <div data-spec=\"argument-to-translate\" className={styles.translating_from}>\r\n            {orginalArgument}\r\n          </div>\r\n          <div className={styles.translating_to}>\r\n            <TextInputElement\r\n              data-spec=\"localize-case\"\r\n              name={kase.uuid}\r\n              placeholder={`${this.props.language.name} ${translation}`}\r\n              showLabel={false}\r\n              onChange={(arg: string) => this.handleUpdateCaseArgument(kase, arg)}\r\n              entry={{ value: argument }}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  public renderCategories(): JSX.Element[] {\r\n    return this.state.categories.map((cat: Category) => {\r\n      const originalCategory = getOriginalCategory(this.props.nodeSettings, cat.uuid);\r\n\r\n      const placeholder = `${this.props.language.name} Translation`;\r\n\r\n      if (!cat.name) {\r\n        cat.name = '';\r\n      }\r\n\r\n      return (\r\n        <div key={cat.uuid} className={styles.translating_category}>\r\n          <div data-spec=\"category-name\" className={styles.translating_from}>\r\n            {originalCategory.name}\r\n          </div>\r\n          <div className={styles.translating_to}>\r\n            <TextInputElement\r\n              data-spec=\"localize-category\"\r\n              name={cat.name}\r\n              placeholder={placeholder}\r\n              showLabel={false}\r\n              entry={{ value: cat.name }}\r\n              onChange={(name: string) => this.handleUpdateCategoryName(cat, name)}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\r\n\r\n    const tabs: Tab[] = [];\r\n\r\n    if (this.state.cases.length > 0) {\r\n      tabs.push({\r\n        name: 'Rule Translations',\r\n        body: (\r\n          <>\r\n            <p data-spec=\"instructions\">\r\n              Sometimes languages need special rules to route things properly. If a translation is\r\n              not provided, the original rule will be used.\r\n            </p>\r\n            {this.renderCases()}\r\n          </>\r\n        )\r\n      });\r\n    }\r\n\r\n    const categories = (\r\n      <Dialog\r\n        title={`${this.props.language.name} Category Names`}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        tabs={tabs}\r\n      >\r\n        <p data-spec=\"instructions\">\r\n          When category names are referenced later in the flow, the appropriate language for the\r\n          category will be used. If no translation is provided, the original text will be used.\r\n        </p>\r\n        {this.renderCategories()}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n\r\n    // if we have cases, use a flipper\r\n    return categories;\r\n  }\r\n}\r\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\r\nimport { Operators, Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { Case, Category, HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\nimport { createUUID } from 'utils';\r\n\r\nimport { MenuRouterFormState } from './MenuRouterForm';\r\nimport { MENU_OPERAND } from 'components/nodeeditor/constants';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): MenuRouterFormState => {\r\n  let resultName: StringEntry = { value: '' };\r\n\r\n  const menu: string[] = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    menu.push('');\r\n  }\r\n\r\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\r\n    const router = settings.originalNode.node.router as SwitchRouter;\r\n    for (const kase of router.cases) {\r\n      let idx = parseInt(kase.arguments[0], 10) - 1;\r\n      if (idx === -1) {\r\n        idx = menu.length - 1;\r\n      }\r\n\r\n      menu[idx] = settings.originalNode.node.router.categories.find(\r\n        (category: Category) => category.uuid === kase.category_uuid\r\n      ).name;\r\n    }\r\n    resultName = { value: router.result_name || '' };\r\n  }\r\n\r\n  return {\r\n    resultName,\r\n    menu,\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: MenuRouterFormState\r\n): RenderNode => {\r\n  const optionalRouter: Pick<Router, 'result_name'> = {};\r\n  if (state.resultName.value) {\r\n    optionalRouter.result_name = state.resultName.value;\r\n  }\r\n\r\n  let originalCases: Case[] = [];\r\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\r\n    originalCases = (settings.originalNode.node.router as SwitchRouter).cases;\r\n  }\r\n\r\n  const caseProps = menuToCases(state.menu, originalCases);\r\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\r\n    caseProps,\r\n    false,\r\n    settings.originalNode.node\r\n  );\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    operand: MENU_OPERAND,\r\n    default_category_uuid: defaultExit,\r\n    cases,\r\n    categories,\r\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits, count: 1 } },\r\n    ...optionalRouter\r\n  };\r\n\r\n  const newRenderNode = createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.wait_for_response,\r\n    [],\r\n    { cases: caseConfig }\r\n  );\r\n\r\n  return newRenderNode;\r\n};\r\n\r\nexport const menuToCases = (menu: string[] = [], previousCases: Case[]): CaseProps[] =>\r\n  menu\r\n    .map((categoryName: string, index: number) => {\r\n      const idx = index === 9 ? 0 : index + 1;\r\n\r\n      const kase =\r\n        previousCases.find((c: Case) => c.arguments[0] === '' + idx) ||\r\n        ({\r\n          uuid: createUUID(),\r\n          arguments: ['' + idx],\r\n          type: Operators.has_number_eq,\r\n          category_uuid: ''\r\n        } as Case);\r\n\r\n      return {\r\n        uuid: kase.uuid,\r\n        kase,\r\n        categoryName,\r\n        valid: true\r\n      };\r\n    })\r\n    .filter((caseProps: CaseProps) => caseProps.categoryName.trim().length > 0);\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport * as React from 'react';\r\nimport { FormState, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\r\n\r\nimport { nodeToState, stateToNode } from './helpers';\r\nimport styles from './MenuRouterForm.module.scss';\r\nimport i18n from 'config/i18n';\r\n\r\nconst mutate = require('immutability-helper');\r\n\r\nexport interface MenuRouterFormState extends FormState {\r\n  resultName: StringEntry;\r\n  menu: string[];\r\n}\r\n\r\nexport const leadInSpecId = 'lead-in';\r\n\r\nexport default class MenuRouterForm extends React.Component<RouterFormProps, MenuRouterFormState> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public static contextTypes = {\r\n    assetService: fakePropType\r\n  };\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n    this.props.onClose(false);\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private handleMenuChanged(index: number, value: string): void {\r\n    const menu = mutate(this.state.menu, { [index]: { $set: value } });\r\n    this.setState({ menu });\r\n  }\r\n\r\n  private renderOption(index: number): JSX.Element {\r\n    return (\r\n      <div key={'menuoption-' + index} className={styles.menu_option}>\r\n        <div className={styles.digit}>{index === 9 ? 0 : index + 1}</div>\r\n        <div className={styles.category}>\r\n          <TextInputElement\r\n            name={'Menu ' + index}\r\n            entry={{ value: this.state.menu[index] }}\r\n            onChange={(value: string) => {\r\n              this.handleMenuChanged(index, value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderMenu(): any {\r\n    const options: JSX.Element[] = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      options.push(this.renderOption(i));\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <div className={styles.menu}>{this.renderMenu()}</div>\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import { createRenderNode } from 'components/flow/routers/helpers';\r\nimport { RandomRouterFormState } from 'components/flow/routers/random/RandomRouterForm';\r\nimport { SelectOption } from 'components/form/select/SelectElement';\r\nimport { Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { Category, Exit, Router, RouterTypes } from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\nimport { createUUID, range } from 'utils';\r\n\r\nexport const BUCKET_OPTIONS: SelectOption[] = range(2, 11).map((count: number) => {\r\n  return { value: count + '', label: count + ' buckets' };\r\n});\r\n\r\nexport const getOption = (value: number): SelectOption => {\r\n  let option = BUCKET_OPTIONS.find(\r\n    (bucketOption: SelectOption) => bucketOption.value === value + ''\r\n  );\r\n  if (!option) {\r\n    option = { label: `${value} Buckets`, value: value + '' };\r\n  }\r\n  return option;\r\n};\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): RandomRouterFormState => {\r\n  // TODO: work out an incremental result name\r\n  let resultName: StringEntry = { value: '' };\r\n  let buckets = 2;\r\n\r\n  let categories: Category[] = [];\r\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_random) {\r\n    const router = settings.originalNode.node.router as Router;\r\n    resultName = { value: router.result_name || '' };\r\n    buckets = settings.originalNode.node.exits.length;\r\n\r\n    // use any existing random buckets if we have any\r\n    categories = settings.originalNode.node.router.categories;\r\n  }\r\n\r\n  categories = fillOutCategories(categories, buckets);\r\n\r\n  return {\r\n    categories,\r\n    resultName,\r\n    bucketChoice: { value: getOption(buckets) },\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: RandomRouterFormState\r\n): RenderNode => {\r\n  const optionalRouter: Pick<Router, 'result_name'> = {};\r\n  if (state.resultName.value) {\r\n    optionalRouter.result_name = state.resultName.value;\r\n  }\r\n\r\n  const exits =\r\n    getType(settings.originalNode) === Types.split_by_random\r\n      ? settings.originalNode.node.exits\r\n      : [];\r\n\r\n  const count = parseInt(state.bucketChoice.value.value, 10);\r\n  exits.splice(count, exits.length - count);\r\n\r\n  state.categories.forEach((category: Category, idx: number) => {\r\n    if (idx < exits.length) {\r\n      category.exit_uuid = exits[idx].uuid;\r\n    } else {\r\n      const newExit: Exit = {\r\n        uuid: createUUID(),\r\n        destination_uuid: null\r\n      };\r\n      category.exit_uuid = newExit.uuid;\r\n      exits.push(newExit);\r\n    }\r\n  });\r\n\r\n  const router: Router = {\r\n    type: RouterTypes.random,\r\n    categories: state.categories,\r\n    ...optionalRouter\r\n  };\r\n\r\n  const newRenderNode = createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.split_by_random,\r\n    [],\r\n    null\r\n  );\r\n\r\n  return newRenderNode;\r\n};\r\n\r\nexport const fillOutCategories = (categories: Category[], buckets: number): Category[] => {\r\n  // add any that we still need\r\n  return categories.concat(\r\n    range(categories.length, buckets).map((idx: number) => {\r\n      return { uuid: createUUID(), name: `Bucket ${idx + 1}`, exit_uuid: null };\r\n    })\r\n  );\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { Category } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\r\n\r\nimport { BUCKET_OPTIONS, fillOutCategories, nodeToState, stateToNode } from './helpers';\r\nimport styles from './RandomRouterForm.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { TembaSelectStyle } from 'temba/TembaSelect';\r\n\r\n// TODO: Remove use of Function\r\n// tslint:disable:ban-types\r\nexport enum InputToFocus {\r\n  args = 'args',\r\n  min = 'min',\r\n  max = 'max',\r\n  exit = 'exit'\r\n}\r\n\r\nexport interface RandomRouterFormState extends FormState {\r\n  bucketChoice: SelectOptionEntry;\r\n  resultName: StringEntry;\r\n  categories: Category[];\r\n}\r\n\r\nexport const leadInSpecId = 'lead-in';\r\n\r\nexport default class RandomRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  RandomRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public static contextTypes = {\r\n    assetService: fakePropType\r\n  };\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleBucketsChanged(selected: SelectOption): boolean {\r\n    // create new exits if needed\r\n\r\n    const count = parseInt(selected.value, 10);\r\n\r\n    let categories = this.state.categories.concat([]);\r\n\r\n    // prune off if we have too many\r\n    categories = categories.slice(0, count);\r\n\r\n    // add any that we still need\r\n    categories = fillOutCategories(categories, count);\r\n\r\n    const updates: Partial<RandomRouterFormState> = {\r\n      bucketChoice: { value: selected }\r\n    };\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState({ ...updated, categories });\r\n\r\n    return updated.valid;\r\n  }\r\n\r\n  public handleSave(): void {\r\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n    this.props.onClose(false);\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private handleBucketNameChanged(category: Category, value: string): void {\r\n    const categories = this.state.categories;\r\n    categories.find((cat: Category) => cat.uuid === category.uuid).name = value;\r\n    this.setState({ categories });\r\n  }\r\n\r\n  private renderBucketNames(): any {\r\n    return this.state.categories.map((cat: Category) => (\r\n      <TextInputElement\r\n        key={cat.uuid}\r\n        __className={styles.bucket_name}\r\n        name={cat.uuid}\r\n        entry={{ value: cat.name }}\r\n        onChange={(value: string) => {\r\n          this.handleBucketNameChanged(cat, value);\r\n        }}\r\n      />\r\n    ));\r\n  }\r\n\r\n  public renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    const OPTIONS = BUCKET_OPTIONS.concat([]);\r\n    if (BUCKET_OPTIONS.indexOf(this.state.bucketChoice.value) === -1) {\r\n      OPTIONS.push(this.state.bucketChoice.value);\r\n    }\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <div className={styles.lead_in}>Split them randomly into one of</div>\r\n        <div className={styles.bucket_select}>\r\n          <SelectElement\r\n            key=\"buckets_select\"\r\n            style={TembaSelectStyle.small}\r\n            name={i18n.t('forms.buckets', 'Buckets')}\r\n            entry={this.state.bucketChoice}\r\n            onChange={this.handleBucketsChanged}\r\n            options={OPTIONS}\r\n          />\r\n        </div>\r\n        <div className={styles.bucket_list}>{this.renderBucketNames()}</div>\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport {\r\n  createCaseProps,\r\n  createRenderNode,\r\n  hasCases,\r\n  resolveRoutes\r\n} from 'components/flow/routers/helpers';\r\nimport { ResponseRouterFormState } from 'components/flow/routers/response/ResponseRouterForm';\r\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\r\nimport { Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): ResponseRouterFormState => {\r\n  let initialCases: CaseProps[] = [];\r\n\r\n  // TODO: work out an incremental result name\r\n  let resultName: StringEntry = { value: 'Result' };\r\n  let timeout = 0;\r\n\r\n  if (settings.originalNode && getType(settings.originalNode) === Types.wait_for_response) {\r\n    const router = settings.originalNode.node.router as SwitchRouter;\r\n    if (router) {\r\n      if (hasCases(settings.originalNode.node)) {\r\n        initialCases = createCaseProps(router.cases, settings.originalNode);\r\n      }\r\n\r\n      resultName = { value: router.result_name || '' };\r\n    }\r\n\r\n    if (settings.originalNode.node.router.wait && settings.originalNode.node.router.wait.timeout) {\r\n      timeout = settings.originalNode.node.router.wait.timeout.seconds || 0;\r\n    }\r\n  }\r\n\r\n  return {\r\n    cases: initialCases,\r\n    resultName,\r\n    timeout,\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: ResponseRouterFormState\r\n): RenderNode => {\r\n  const { cases, exits, defaultCategory, timeoutCategory, caseConfig, categories } = resolveRoutes(\r\n    state.cases,\r\n    state.timeout > 0,\r\n    settings.originalNode.node\r\n  );\r\n\r\n  const optionalRouter: Pick<Router, 'result_name'> = {};\r\n  if (state.resultName.value) {\r\n    optionalRouter.result_name = state.resultName.value;\r\n  }\r\n\r\n  const wait = { type: WaitTypes.msg } as Wait;\r\n  if (state.timeout > 0) {\r\n    wait.timeout = {\r\n      seconds: state.timeout,\r\n      category_uuid: timeoutCategory\r\n    };\r\n  }\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    default_category_uuid: defaultCategory,\r\n    cases,\r\n    categories,\r\n    operand: DEFAULT_OPERAND,\r\n    wait,\r\n    ...optionalRouter\r\n  };\r\n\r\n  const newRenderNode = createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.wait_for_response,\r\n    [],\r\n    { cases: caseConfig }\r\n  );\r\n\r\n  return newRenderNode;\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { nodeToState, stateToNode } from 'components/flow/routers/response/helpers';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport TimeoutControl from 'components/form/timeout/TimeoutControl';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { FormState, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\r\nimport { WAIT_LABEL } from 'components/flow/routers/constants';\r\nimport i18n from 'config/i18n';\r\n\r\n// TODO: Remove use of Function\r\n// tslint:disable:ban-types\r\nexport enum InputToFocus {\r\n  args = 'args',\r\n  min = 'min',\r\n  max = 'max',\r\n  exit = 'exit'\r\n}\r\n\r\nexport interface ResponseRouterFormState extends FormState {\r\n  cases: CaseProps[];\r\n  resultName: StringEntry;\r\n  timeout: number;\r\n}\r\n\r\nexport const leadInSpecId = 'lead-in';\r\n\r\nexport default class ResponseRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  ResponseRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleUpdateTimeout(timeout: number): void {\r\n    this.setState({ timeout });\r\n  }\r\n\r\n  private handleCasesUpdated(cases: CaseProps[]): void {\r\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\r\n    this.setState({ cases, valid: !invalidCase });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    if (this.state.valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog\r\n        title={typeConfig.name}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        gutter={\r\n          <TimeoutControl timeout={this.state.timeout} onChanged={this.handleUpdateTimeout} />\r\n        }\r\n      >\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <div>{WAIT_LABEL}</div>\r\n        <CaseList\r\n          data-spec=\"cases\"\r\n          cases={this.state.cases}\r\n          onCasesUpdated={this.handleCasesUpdated}\r\n        />\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\r\nimport * as React from 'react';\r\nimport { renderIf } from 'utils';\r\n\r\nimport styles from './TimeoutControl.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\r\n\r\nexport const TIMEOUT_OPTIONS = [\r\n  { value: '60', label: i18n.t('forms.timeout_1 minute', '1 minute') },\r\n  { value: '120', label: i18n.t('forms.timeout_2 minutes', '2 minutes') },\r\n  { value: '180', label: i18n.t('forms.timeout_3 minutes', '3 minutes') },\r\n  { value: '240', label: i18n.t('forms.timeout_4 minutes', '4 minutes') },\r\n  { value: '300', label: i18n.t('forms.timeout_5 minutes', '5 minutes') },\r\n  { value: '600', label: i18n.t('forms.timeout_10 minutes', '10 minutes') },\r\n  { value: '900', label: i18n.t('forms.timeout_15 minutes', '15 minutes') },\r\n  { value: '3600', label: i18n.t('forms.timeout_1 hour', '1 hour') },\r\n  { value: '7200', label: i18n.t('forms.timeout_2 hours', '2 hours') },\r\n  { value: '10800', label: i18n.t('forms.timeout_3 hours', '3 hours') },\r\n  { value: '21600', label: i18n.t('forms.timeout_6 hours', '6 hours') },\r\n  { value: '43200', label: i18n.t('forms.timeout_12 hours', '12 hours') },\r\n  { value: '64800', label: i18n.t('forms.timeout_18 hours', '18 hours') },\r\n  { value: '86400', label: i18n.t('forms.timeout_1 day', '1 day') },\r\n  { value: '172800', label: i18n.t('forms.timeout_2 days', '2 days') },\r\n  { value: '259200', label: i18n.t('forms.timeout_3 days', '3 days') },\r\n  { value: '604800', label: i18n.t('forms.timeout_1 week', '1 week') }\r\n];\r\n\r\nexport const DEFAULT_TIMEOUT = TIMEOUT_OPTIONS[4];\r\n\r\nexport const ellipsize = (str: string) => `${str}...`;\r\n\r\nexport interface TimeoutControlProps {\r\n  timeout: number;\r\n  onChanged(timeout: number): void;\r\n}\r\n\r\nexport default class TimeoutControl extends React.Component<TimeoutControlProps> {\r\n  constructor(props: TimeoutControlProps) {\r\n    super(props);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private getSelected(timeout: number): any {\r\n    for (const [idx, { value }] of TIMEOUT_OPTIONS.entries()) {\r\n      if (value === '' + timeout) {\r\n        return TIMEOUT_OPTIONS[idx];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private isChecked(): boolean {\r\n    return this.props.timeout > 0;\r\n  }\r\n\r\n  private getInstructions(): string {\r\n    const base = 'Continue when there is no response';\r\n    return this.isChecked() ? `${base} for` : ellipsize(base);\r\n  }\r\n\r\n  private handleChecked(): void {\r\n    if (this.props.timeout > 0) {\r\n      this.props.onChanged(0);\r\n    } else {\r\n      this.props.onChanged(parseInt(DEFAULT_TIMEOUT.value));\r\n    }\r\n  }\r\n\r\n  private handleTimeoutChanged(selected: any): void {\r\n    this.props.onChanged(parseInt(selected.value));\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className={styles.timeout_control_container}>\r\n        <div className={styles.left_section}>\r\n          <CheckboxElement\r\n            name={i18n.t('forms.timeout', 'Timeout')}\r\n            checked={this.isChecked()}\r\n            description={this.getInstructions()}\r\n            checkboxClassName={styles.checkbox}\r\n            onChange={this.handleChecked}\r\n          />\r\n        </div>\r\n        {renderIf(this.isChecked())(\r\n          <div className={styles.drop_down}>\r\n            <TembaSelect\r\n              name={i18n.t('forms.timeout', 'Timeout')}\r\n              style={TembaSelectStyle.small}\r\n              value={this.getSelected(this.props.timeout)}\r\n              options={TIMEOUT_OPTIONS}\r\n              onChange={this.handleTimeoutChanged}\r\n            ></TembaSelect>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\r\nimport { Types } from 'config/interfaces';\r\nimport { CallResthook } from 'flowTypes';\r\nimport { AssetType, RenderNode } from 'store/flowContext';\r\nimport { AssetEntry, NodeEditorSettings } from 'store/nodeEditor';\r\nimport { createUUID } from 'utils';\r\n\r\nimport { ResthookRouterFormState } from './ResthookRouterForm';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): ResthookRouterFormState => {\r\n  let resthookAsset: AssetEntry = { value: null };\r\n  let resultName = { value: 'Result' };\r\n  let valid = false;\r\n\r\n  const originalAction = getOriginalAction(settings) as CallResthook;\r\n  if (originalAction && originalAction.type === Types.call_resthook) {\r\n    const resthook = originalAction.resthook;\r\n    resthookAsset = {\r\n      value: { id: resthook, name: resthook, type: AssetType.Resthook }\r\n    };\r\n    resultName = { value: originalAction.result_name };\r\n    valid = true;\r\n  }\r\n\r\n  return {\r\n    resthook: resthookAsset,\r\n    resultName,\r\n    valid\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: ResthookRouterFormState\r\n): RenderNode => {\r\n  let uuid = createUUID();\r\n  const originalAction = getOriginalAction(settings);\r\n  if (originalAction) {\r\n    uuid = originalAction.uuid;\r\n  }\r\n\r\n  const newAction: CallResthook = {\r\n    uuid,\r\n    resthook: state.resthook.value.id,\r\n    type: Types.call_resthook,\r\n    result_name: state.resultName.value\r\n  };\r\n\r\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\r\n};\r\n\r\nexport const getOriginalAction = (settings: NodeEditorSettings): CallResthook => {\r\n  const action =\r\n    settings.originalAction ||\r\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\r\n\r\n  if (action.type === Types.call_resthook) {\r\n    return action as CallResthook;\r\n  }\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\r\nimport {\r\n  Alphanumeric,\r\n  Required,\r\n  shouldRequireIf,\r\n  StartIsNonNumeric,\r\n  validate\r\n} from 'store/validators';\r\n\r\nimport { nodeToState, stateToNode } from './helpers';\r\nimport styles from './ResthookRouterForm.module.scss';\r\nimport i18n from 'config/i18n';\r\n\r\n// TODO: Remove use of Function\r\nexport interface ResthookRouterFormState extends FormState {\r\n  resthook: AssetEntry;\r\n  resultName: StringEntry;\r\n}\r\n\r\nexport default class ResthookRouterForm extends React.PureComponent<\r\n  RouterFormProps,\r\n  ResthookRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdateResultName(result: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), result, [\r\n      Required,\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  public handleResthookChanged(selected: Asset[], submitting = false): boolean {\r\n    const updates: Partial<ResthookRouterFormState> = {\r\n      resthook: validate(i18n.t('forms.resthook', 'Resthook'), selected[0], [\r\n        shouldRequireIf(submitting)\r\n      ])\r\n    };\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // validate our resthook in case they haven't interacted\r\n    const valid = this.handleResthookChanged([this.state.resthook.value], true);\r\n\r\n    if (valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  public getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: 'Ok', onClick: this.handleSave },\r\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <AssetSelector\r\n          name={i18n.t('forms.resthook', 'Resthook')}\r\n          placeholder={i18n.t('forms.resthook_to_call', 'Select the resthook to call')}\r\n          assets={this.props.assetStore.resthooks}\r\n          entry={this.state.resthook}\r\n          searchable={true}\r\n          onChange={this.handleResthookChanged}\r\n        />\r\n        <div className={styles.result_name}>\r\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        </div>\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport {\r\n  createCaseProps,\r\n  createRenderNode,\r\n  hasCases,\r\n  resolveRoutes\r\n} from 'components/flow/routers/helpers';\r\nimport { SelectOption } from 'components/form/select/SelectElement';\r\nimport { Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\r\nimport { AssetStore, RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\n\r\nimport { ResultRouterFormState } from './ResultRouterForm';\r\n\r\nexport const FIELD_NUMBER_OPTIONS: SelectOption[] = [\r\n  { value: '0', label: 'first' },\r\n  { value: '1', label: 'second' },\r\n  { value: '2', label: 'third' },\r\n  { value: '3', label: 'fourth' },\r\n  { value: '4', label: 'fifth' },\r\n  { value: '5', label: 'sixth' },\r\n  { value: '6', label: 'seventh' },\r\n  { value: '7', label: 'eighth' },\r\n  { value: '8', label: 'ninth' },\r\n  { value: '9', label: 'tenth' },\r\n  { value: '10', label: '11th' },\r\n  { value: '11', label: '12th' },\r\n  { value: '12', label: '13th' },\r\n  { value: '13', label: '14th' },\r\n  { value: '14', label: '15th' },\r\n  { value: '15', label: '16th' },\r\n  { value: '16', label: '17th' },\r\n  { value: '17', label: '18th' },\r\n  { value: '18', label: '19th' },\r\n  { value: '19', label: '20th' }\r\n];\r\n\r\nexport const getFieldOption = (value: number): SelectOption => {\r\n  return FIELD_NUMBER_OPTIONS.find((option: SelectOption) => option.value === '' + value);\r\n};\r\n\r\nexport const DELIMITER_OPTIONS: SelectOption[] = [\r\n  { value: ' ', label: 'spaces' },\r\n  { value: '.', label: 'periods' },\r\n  { value: '+', label: 'plusses' }\r\n];\r\n\r\nexport const getDelimiterOption = (value: string): SelectOption => {\r\n  return DELIMITER_OPTIONS.find((option: SelectOption) => option.value === value);\r\n};\r\n\r\nexport const nodeToState = (\r\n  settings: NodeEditorSettings,\r\n  assetStore: AssetStore\r\n): ResultRouterFormState => {\r\n  let initialCases: CaseProps[] = [];\r\n\r\n  // TODO: work out an incremental result name\r\n  let resultName: StringEntry = { value: '' };\r\n\r\n  let result: any = null;\r\n  let fieldNumber = 1;\r\n  let delimiter = ' ';\r\n  let shouldDelimit = false;\r\n\r\n  const type = getType(settings.originalNode);\r\n\r\n  if (\r\n    (settings.originalNode && type === Types.split_by_run_result) ||\r\n    type === Types.split_by_run_result_delimited\r\n  ) {\r\n    const router = settings.originalNode.node.router as SwitchRouter;\r\n\r\n    if (router) {\r\n      if (hasCases(settings.originalNode.node)) {\r\n        initialCases = createCaseProps(router.cases, settings.originalNode);\r\n      }\r\n\r\n      resultName = { value: router.result_name || '' };\r\n    }\r\n\r\n    const config = settings.originalNode.ui.config;\r\n    if (config && config.operand) {\r\n      result =\r\n        config.operand.id in assetStore.results.items\r\n          ? assetStore.results.items[config.operand.id]\r\n          : null;\r\n    }\r\n\r\n    if (type === Types.split_by_run_result_delimited) {\r\n      fieldNumber = config.index;\r\n      delimiter = config.delimiter;\r\n      shouldDelimit = true;\r\n    }\r\n  }\r\n\r\n  return {\r\n    cases: initialCases,\r\n    resultName,\r\n    result: { value: result },\r\n    shouldDelimit,\r\n    fieldNumber,\r\n    delimiter,\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: ResultRouterFormState\r\n): RenderNode => {\r\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\r\n    state.cases,\r\n    false,\r\n    settings.originalNode.node\r\n  );\r\n\r\n  const optionalRouter: Pick<Router, 'result_name'> = {};\r\n  if (state.resultName.value) {\r\n    optionalRouter.result_name = state.resultName.value;\r\n  }\r\n\r\n  let nodeType = Types.split_by_run_result;\r\n\r\n  const asset = state.result.value;\r\n  let operand = `@results.${asset.id}`;\r\n\r\n  const config: any = {\r\n    operand: {\r\n      id: asset.id,\r\n      type: asset.type,\r\n      name: asset.name\r\n    },\r\n    cases: caseConfig\r\n  };\r\n\r\n  if (state.shouldDelimit) {\r\n    config.index = state.fieldNumber;\r\n    config.delimiter = state.delimiter;\r\n    operand = `@(field(results.${asset.id}, ${state.fieldNumber}, \"${state.delimiter}\"))`;\r\n    nodeType = Types.split_by_run_result_delimited;\r\n  }\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    default_category_uuid: defaultExit,\r\n    categories,\r\n    cases,\r\n    operand,\r\n    ...optionalRouter\r\n  };\r\n\r\n  const newRenderNode = createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    nodeType,\r\n    [],\r\n    config\r\n  );\r\n\r\n  return newRenderNode;\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\r\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\r\nimport { small } from 'utils/reactselect';\r\n\r\nimport {\r\n  DELIMITER_OPTIONS,\r\n  FIELD_NUMBER_OPTIONS,\r\n  getDelimiterOption,\r\n  getFieldOption,\r\n  nodeToState,\r\n  stateToNode\r\n} from './helpers';\r\nimport styles from './ResultRouterForm.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { TembaSelectStyle } from 'temba/TembaSelect';\r\n\r\nexport interface ResultRouterFormState extends FormState {\r\n  result: AssetEntry;\r\n  cases: CaseProps[];\r\n  resultName: StringEntry;\r\n  shouldDelimit: boolean;\r\n\r\n  fieldNumber: number;\r\n  delimiter: string;\r\n}\r\n\r\nexport const leadInSpecId = 'lead-in';\r\n\r\nexport default class ResultRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  ResultRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleResultChanged(selected: Asset[], submitting = false): boolean {\r\n    const updates: Partial<ResultRouterFormState> = {\r\n      result: validate(i18n.t('forms.result_to_split_on', 'Result to split on'), selected[0], [\r\n        shouldRequireIf(submitting)\r\n      ])\r\n    };\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleCasesUpdated(cases: CaseProps[]): void {\r\n    this.setState({ cases });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    const valid = this.handleResultChanged([this.state.result.value], true);\r\n    if (valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private handleShouldDelimitChanged(checked: boolean): void {\r\n    this.setState({ shouldDelimit: checked });\r\n  }\r\n\r\n  private handleFieldNumberChanged(selected: SelectOption): void {\r\n    this.setState({ fieldNumber: parseInt(selected.value, 10) });\r\n  }\r\n\r\n  private handleDelimiterChanged(selected: SelectOption): void {\r\n    this.setState({ delimiter: selected.value });\r\n  }\r\n\r\n  private renderField(): JSX.Element {\r\n    return (\r\n      <div className={styles.non_delimited}>\r\n        <div className={styles.lead_in}>If the flow result</div>\r\n        <div className={styles.result_select}>\r\n          <AssetSelector\r\n            entry={this.state.result}\r\n            styles={small as any}\r\n            name={i18n.t('forms.flow_result', 'Flow Result')}\r\n            placeholder=\"Select Result\"\r\n            searchable={false}\r\n            assets={this.props.assetStore.results}\r\n            onChange={this.handleResultChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderFieldDelimited(): JSX.Element {\r\n    return (\r\n      <div className={styles.delimited}>\r\n        <div className={styles.lead_in}>If the</div>\r\n        <div className={styles.field_number}>\r\n          <SelectElement\r\n            key=\"field_number_select\"\r\n            style={TembaSelectStyle.small}\r\n            name={i18n.t('forms.field_number', 'Field Number')}\r\n            entry={{ value: getFieldOption(this.state.fieldNumber) }}\r\n            onChange={this.handleFieldNumberChanged}\r\n            options={FIELD_NUMBER_OPTIONS}\r\n          />\r\n        </div>\r\n        <div className={styles.lead_in_sub}>field of</div>\r\n        <div className={styles.result_select_delimited}>\r\n          <AssetSelector\r\n            entry={this.state.result}\r\n            styles={small as any}\r\n            name={i18n.t('forms.flow_result', 'Flow Result')}\r\n            placeholder={i18n.t('forms.select_result', 'Select Result')}\r\n            searchable={false}\r\n            assets={this.props.assetStore.results}\r\n            onChange={this.handleResultChanged}\r\n          />\r\n        </div>\r\n        <div className={styles.lead_in_sub}>delimited by</div>\r\n        <div className={styles.delimiter}>\r\n          <SelectElement\r\n            key=\"delimiter_select\"\r\n            style={TembaSelectStyle.small}\r\n            name={i18n.t('forms.delimiter', 'Delimiter')}\r\n            entry={{ value: getDelimiterOption(this.state.delimiter) }}\r\n            onChange={this.handleDelimiterChanged}\r\n            options={DELIMITER_OPTIONS}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n    const advanced: Tab = {\r\n      name: 'Advanced',\r\n      body: (\r\n        <div className={styles.should_delimit}>\r\n          <CheckboxElement\r\n            name={i18n.t('forms.delimit', 'Delimit')}\r\n            title={i18n.t('forms.delimit_result', 'Delimit Result')}\r\n            checked={this.state.shouldDelimit}\r\n            description={i18n.t(\r\n              'forms.delimit_result_description',\r\n              'Evaluate your rules against a delimited part of your result'\r\n            )}\r\n            onChange={this.handleShouldDelimitChanged}\r\n          />\r\n        </div>\r\n      ),\r\n      checked: this.state.shouldDelimit\r\n    };\r\n\r\n    return (\r\n      <Dialog\r\n        title={typeConfig.name}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        tabs={[advanced]}\r\n      >\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n\r\n        {this.state.shouldDelimit ? this.renderFieldDelimited() : this.renderField()}\r\n\r\n        <CaseList\r\n          data-spec=\"cases\"\r\n          cases={this.state.cases}\r\n          onCasesUpdated={this.handleCasesUpdated}\r\n        />\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { createRenderNode } from 'components/flow/routers/helpers';\r\nimport { SubflowRouterFormState } from 'components/flow/routers/subflow/SubflowRouterForm';\r\nimport { SUBFLOW_OPERAND } from 'components/nodeeditor/constants';\r\nimport { Operators, Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport {\r\n  Case,\r\n  Category,\r\n  Exit,\r\n  Flow,\r\n  RouterTypes,\r\n  StartFlow,\r\n  StartFlowExitNames,\r\n  SwitchRouter,\r\n  SetRunResult,\r\n  AnyAction,\r\n  Action\r\n} from 'flowTypes';\r\nimport { Asset, AssetType, RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\nimport { createUUID } from 'utils';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): SubflowRouterFormState => {\r\n  const params: { [key: string]: StringEntry } = {};\r\n  if (\r\n    getType(settings.originalNode) === Types.split_by_subflow ||\r\n    (settings.originalAction && settings.originalAction.type === Types.enter_flow)\r\n  ) {\r\n    let action = settings.originalAction as StartFlow;\r\n    if (!action || action.type !== Types.enter_flow) {\r\n      action = settings.originalNode.node.actions.find(\r\n        (action: Action) => action.type === Types.enter_flow\r\n      ) as StartFlow;\r\n    }\r\n\r\n    // look for any run result actions\r\n    settings.originalNode.node.actions.forEach((action: AnyAction) => {\r\n      if (action.type === Types.set_run_result) {\r\n        const setRunResult = action as SetRunResult;\r\n        params[setRunResult.name] = { value: setRunResult.value };\r\n      }\r\n    });\r\n\r\n    return { flow: { value: flowToAsset(action.flow) }, params, valid: true };\r\n  }\r\n\r\n  return {\r\n    flow: { value: null },\r\n    params: {},\r\n    valid: false\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: SubflowRouterFormState\r\n): RenderNode => {\r\n  const action =\r\n    settings.originalAction ||\r\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\r\n\r\n  const startFlowAction: StartFlow = {\r\n    uuid: action.uuid || createUUID(),\r\n    type: Types.enter_flow,\r\n    flow: assetToFlow(state.flow.value)\r\n  };\r\n\r\n  // If we're already a subflow, lean on those exits and cases\r\n  let exits: Exit[];\r\n  let cases: Case[];\r\n  let categories: Category[];\r\n\r\n  if (getType(settings.originalNode) === Types.split_by_subflow) {\r\n    ({ exits } = settings.originalNode.node);\r\n    ({ cases, categories } = settings.originalNode.node.router as SwitchRouter);\r\n  } else {\r\n    // Otherwise, let's create some new ones\r\n    exits = [\r\n      {\r\n        uuid: createUUID(),\r\n        destination_uuid: null\r\n      },\r\n      {\r\n        uuid: createUUID(),\r\n        destination_uuid: null\r\n      }\r\n    ];\r\n\r\n    categories = [\r\n      {\r\n        uuid: createUUID(),\r\n        name: StartFlowExitNames.Complete,\r\n        exit_uuid: exits[0].uuid\r\n      },\r\n      {\r\n        uuid: createUUID(),\r\n        name: StartFlowExitNames.Expired,\r\n        exit_uuid: exits[1].uuid\r\n      }\r\n    ];\r\n\r\n    cases = [\r\n      {\r\n        uuid: createUUID(),\r\n        type: Operators.has_only_text,\r\n        arguments: ['completed'],\r\n        category_uuid: categories[0].uuid\r\n      },\r\n      {\r\n        uuid: createUUID(),\r\n        arguments: ['expired'],\r\n        type: Operators.has_only_text,\r\n        category_uuid: categories[1].uuid\r\n      }\r\n    ];\r\n  }\r\n\r\n  const actions = [];\r\n\r\n  // add some set result actions if needed\r\n  Object.keys(state.params).forEach((key: string) => {\r\n    const value = state.params[key] ? state.params[key].value || '' : '';\r\n    if (value.trim().length > 0) {\r\n      const setResultAction: SetRunResult = {\r\n        uuid: createUUID(),\r\n        name: key,\r\n        value,\r\n        type: Types.set_run_result\r\n      };\r\n      actions.push(setResultAction);\r\n    }\r\n  });\r\n\r\n  actions.push(startFlowAction);\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    operand: SUBFLOW_OPERAND,\r\n    cases,\r\n    categories,\r\n    default_category_uuid: categories[categories.length - 1].uuid\r\n  };\r\n\r\n  const newRenderNode = createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.split_by_subflow,\r\n    actions\r\n  );\r\n\r\n  return newRenderNode;\r\n};\r\n\r\nconst flowToAsset = (field: Flow = { uuid: '', name: '' }): Asset => ({\r\n  id: field.uuid,\r\n  name: field.name,\r\n  type: AssetType.Flow\r\n});\r\n\r\nconst assetToFlow = (asset: Asset): Flow => ({\r\n  uuid: asset.id,\r\n  name: asset.name\r\n});\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport { nodeToState, stateToNode } from 'components/flow/routers/subflow/helpers';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport * as React from 'react';\r\nimport { Asset } from 'store/flowContext';\r\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\r\nimport { shouldRequireIf, validate } from 'store/validators';\r\nimport i18n from 'config/i18n';\r\nimport { fetchAsset } from 'external';\r\nimport styles from './SubflowRouterForm.module.scss';\r\nimport { Trans } from 'react-i18next';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\n\r\n// TODO: Remove use of Function\r\nexport interface SubflowRouterFormState extends FormState {\r\n  flow: AssetEntry;\r\n  params: { [name: string]: StringEntry };\r\n}\r\n\r\nexport default class SubflowRouterForm extends React.PureComponent<\r\n  RouterFormProps,\r\n  SubflowRouterFormState\r\n> {\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public componentDidMount() {\r\n    // we need to resolve our flow for it's parent refs\r\n    if (this.state.flow.value) {\r\n      fetchAsset(this.props.assetStore.flows, this.state.flow.value.id).then((flow: Asset) => {\r\n        this.handleFlowChanged([flow]);\r\n      });\r\n    }\r\n  }\r\n\r\n  public handleFlowChanged(flows: Asset[], submitting = false): boolean {\r\n    const flow = flows[0];\r\n\r\n    const updates: Partial<SubflowRouterFormState> = {\r\n      flow: validate(i18n.t('forms.flow', 'Flow'), flow, [shouldRequireIf(submitting)])\r\n    };\r\n\r\n    const params: { [key: string]: StringEntry } = {};\r\n    // ensure our parameters are initialized\r\n    if (flow && flow.content && flow.content.parent_refs) {\r\n      for (const key of flow.content.parent_refs) {\r\n        if (this.state.params[key]) {\r\n          params[key] = { ...this.state.params[key] };\r\n        } else {\r\n          params[key] = { value: '' };\r\n        }\r\n      }\r\n      updates.params = params;\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // validate our flow in case they haven't interacted\r\n    this.handleFlowChanged([this.state.flow.value], true);\r\n\r\n    const hasFieldErrors = Object.keys(this.state.params).find((key: string) =>\r\n      hasErrors(this.state.params[key])\r\n    );\r\n\r\n    if (this.state.valid && !hasFieldErrors) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private handleFilter(asset: Asset): boolean {\r\n    // only show flows that match our flow type\r\n    return asset.content.type === this.context.config.flowType;\r\n  }\r\n\r\n  private handleParamChanged(text: string, name: string) {\r\n    const params = { ...this.state.params };\r\n    params[name] = { value: text };\r\n    this.setState({ params });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    const tabs: Tab[] = [];\r\n    const flow = this.state.flow.value;\r\n\r\n    const hasFieldErrors = !!Object.keys(this.state.params).find((key: string) =>\r\n      hasErrors(this.state.params[key])\r\n    );\r\n\r\n    if (flow && flow.content && flow.content.parent_refs.length > 0) {\r\n      tabs.push({\r\n        name: i18n.t('forms.enter_flow_parameters_tab', 'Parameters'),\r\n        body: (\r\n          <div>\r\n            <p className={styles.info}>\r\n              <Trans\r\n                i18nKey=\"forms.enter_flow_parameters_summary\"\r\n                values={{\r\n                  flow: this.state.flow.value.name,\r\n                  url: this.context.config.endpoints.editor + '/' + this.state.flow.value.id\r\n                }}\r\n              >\r\n                <a\r\n                  target=\"_\"\r\n                  href={this.context.config.endpoints.editor + '/' + this.state.flow.value.id}\r\n                >\r\n                  [[flow]]\r\n                </a>{' '}\r\n                expects the following parameters to be set by this flow. These can be set using a{' '}\r\n                <span>Save Flow Result</span> action or directly below.\r\n              </Trans>\r\n            </p>\r\n            <table className={styles.params}>\r\n              <tbody>\r\n                {flow.content.parent_refs.map((name: string) => {\r\n                  return (\r\n                    <tr key={'param_' + name} className={styles.param}>\r\n                      <td className={styles.param_name}>{name}</td>\r\n                      <td className={styles.param_input}>\r\n                        <TextInputElement\r\n                          name={name}\r\n                          showLabel={false}\r\n                          placeholder={name}\r\n                          onChange={(updatedText: string) => {\r\n                            this.handleParamChanged(updatedText, name);\r\n                          }}\r\n                          entry={this.state.params[name]}\r\n                          autocomplete={true}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ),\r\n        hasErrors: hasFieldErrors,\r\n        checked: !!Object.keys(this.state.params).find(\r\n          (key: string) => this.state.params[key] && this.state.params[key].value.trim().length > 0\r\n        )\r\n      });\r\n    }\r\n\r\n    return (\r\n      <Dialog\r\n        title={typeConfig.name}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        tabs={tabs}\r\n      >\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <AssetSelector\r\n          name={i18n.t('forms.flow', 'Flow')}\r\n          placeholder=\"Select the flow to start\"\r\n          assets={this.props.assetStore.flows}\r\n          entry={this.state.flow}\r\n          searchable={true}\r\n          onFilter={this.handleFilter}\r\n          onChange={this.handleFlowChanged}\r\n        />\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\r\nimport { WaitRouterFormState } from 'components/flow/routers/wait/WaitRouterForm';\r\nimport { DEFAULT_OPERAND, MEDIA_OPERAND } from 'components/nodeeditor/constants';\r\nimport { Type, Types } from 'config/interfaces';\r\nimport { HintTypes, Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): WaitRouterFormState => {\r\n  let resultName: StringEntry = { value: 'Result' };\r\n\r\n  // look at the actual ui type instead of the hint here, we want results for any kind of wait\r\n  if (settings.originalNode && settings.originalNode.ui.type === Types.wait_for_response) {\r\n    const router = settings.originalNode.node.router as SwitchRouter;\r\n    if (router) {\r\n      resultName = { value: router.result_name || '' };\r\n    }\r\n  }\r\n\r\n  return {\r\n    resultName,\r\n    valid: true\r\n  };\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: WaitRouterFormState,\r\n  typeConfig: Type\r\n): RenderNode => {\r\n  const { exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\r\n    [],\r\n    false,\r\n    settings.originalNode.node\r\n  );\r\n\r\n  const optionalRouter: Pick<Router, 'result_name'> = {};\r\n  if (state.resultName.value) {\r\n    optionalRouter.result_name = state.resultName.value;\r\n  }\r\n\r\n  let operand = DEFAULT_OPERAND;\r\n  const wait = { type: WaitTypes.msg } as Wait;\r\n  switch (typeConfig.type) {\r\n    case Types.wait_for_audio:\r\n      wait.hint = { type: HintTypes.audio };\r\n      operand = MEDIA_OPERAND;\r\n      break;\r\n    case Types.wait_for_image:\r\n      wait.hint = { type: HintTypes.image };\r\n      operand = MEDIA_OPERAND;\r\n      break;\r\n    case Types.wait_for_location:\r\n      wait.hint = { type: HintTypes.location };\r\n      operand = MEDIA_OPERAND;\r\n      break;\r\n    case Types.wait_for_video:\r\n      wait.hint = { type: HintTypes.video };\r\n      operand = MEDIA_OPERAND;\r\n      break;\r\n  }\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    default_category_uuid: defaultExit,\r\n    cases: [],\r\n    categories,\r\n    wait,\r\n    operand,\r\n    ...optionalRouter\r\n  };\r\n\r\n  const newRenderNode = createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.wait_for_response,\r\n    [],\r\n    { cases: caseConfig }\r\n  );\r\n\r\n  return newRenderNode;\r\n};\r\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\r\nimport { WebhookRouterFormState } from 'components/flow/routers/webhook/WebhookRouterForm';\r\nimport { DEFAULT_BODY } from 'components/nodeeditor/constants';\r\nimport { Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { CallWebhook } from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\r\nimport { createUUID } from 'utils';\r\n\r\nexport enum Methods {\r\n  GET = 'GET',\r\n  POST = 'POST',\r\n  PUT = 'PUT',\r\n  DELETE = 'DELETE',\r\n  HEAD = 'HEAD',\r\n  PATCH = 'PATCH'\r\n}\r\n\r\nexport interface MethodOption {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface HeaderMap {\r\n  [name: string]: string;\r\n}\r\n\r\nexport const GET_METHOD: MethodOption = {\r\n  value: Methods.GET,\r\n  label: Methods.GET\r\n};\r\n\r\nexport const METHOD_OPTIONS: MethodOption[] = [\r\n  GET_METHOD,\r\n  { value: Methods.POST, label: Methods.POST },\r\n  { value: Methods.PUT, label: Methods.PUT },\r\n  { value: Methods.DELETE, label: Methods.DELETE },\r\n  { value: Methods.HEAD, label: Methods.HEAD },\r\n  { value: Methods.PATCH, label: Methods.PATCH }\r\n];\r\n\r\nexport const getOriginalAction = (settings: NodeEditorSettings): CallWebhook => {\r\n  const action =\r\n    settings.originalAction ||\r\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\r\n\r\n  if (action.type === Types.call_webhook) {\r\n    return action as CallWebhook;\r\n  }\r\n};\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): WebhookRouterFormState => {\r\n  // TODO: work out an incremental result name\r\n  const resultName: StringEntry = { value: 'Result' };\r\n\r\n  const state: WebhookRouterFormState = {\r\n    headers: [],\r\n    resultName,\r\n    method: { value: GET_METHOD },\r\n    url: { value: '' },\r\n    body: { value: getDefaultBody(Methods.GET) },\r\n    valid: false\r\n  };\r\n\r\n  if (getType(settings.originalNode) === Types.split_by_webhook) {\r\n    const action = getOriginalAction(settings) as CallWebhook;\r\n\r\n    // add in our headers\r\n    for (const name of Object.keys(action.headers || []).sort()) {\r\n      state.headers.push({\r\n        value: {\r\n          uuid: createUUID(),\r\n          value: action.headers[name],\r\n          name\r\n        }\r\n      });\r\n    }\r\n\r\n    state.resultName = { value: action.result_name };\r\n    state.url = { value: action.url };\r\n    state.method = { value: { label: action.method, value: action.method } };\r\n    state.body = { value: action.body };\r\n    state.valid = true;\r\n  } else {\r\n    state.headers.push({\r\n      value: {\r\n        uuid: createUUID(),\r\n        name: 'Accept',\r\n        value: 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  // one empty header\r\n  state.headers.push({\r\n    value: {\r\n      uuid: createUUID(),\r\n      name: '',\r\n      value: ''\r\n    }\r\n  });\r\n\r\n  return state;\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: WebhookRouterFormState\r\n): RenderNode => {\r\n  const headers: HeaderMap = {};\r\n\r\n  for (const entry of state.headers) {\r\n    if (entry.value.name.trim().length !== 0) {\r\n      headers[entry.value.name] = entry.value.value;\r\n    }\r\n  }\r\n\r\n  let uuid = createUUID();\r\n\r\n  const originalAction = getOriginalAction(settings);\r\n  if (originalAction) {\r\n    uuid = originalAction.uuid;\r\n  }\r\n\r\n  const newAction: CallWebhook = {\r\n    uuid,\r\n    headers,\r\n    type: Types.call_webhook,\r\n    url: state.url.value,\r\n    body: state.body.value,\r\n    method: state.method.value.value as Methods,\r\n    result_name: state.resultName.value\r\n  };\r\n\r\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\r\n};\r\n\r\nexport const getDefaultBody = (method: string): string => {\r\n  return method === Methods.GET ? '' : DEFAULT_BODY;\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { FormState, StringEntry } from 'store/nodeEditor';\r\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\r\n\r\nimport { nodeToState, stateToNode } from './helpers';\r\nimport styles from './WaitRouterForm.module.scss';\r\nimport i18n from 'config/i18n';\r\n\r\nexport interface WaitRouterFormState extends FormState {\r\n  resultName: StringEntry;\r\n}\r\n\r\nexport default class WaitRouterForm extends React.Component<RouterFormProps, WaitRouterFormState> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    if (this.state.valid) {\r\n      this.props.updateRouter(\r\n        stateToNode(this.props.nodeSettings, this.state, this.props.typeConfig)\r\n      );\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <div className={styles.result_name}>\r\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        </div>\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport { getAllErrors } from 'components/flow/actions/helpers';\r\nimport { HeaderEntry } from 'components/flow/routers/webhook/WebhookRouterForm';\r\nimport styles from 'components/flow/routers/webhook/WebhookRouterForm.module.scss';\r\nimport FormElement from 'components/form/FormElement';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport * as React from 'react';\r\nimport { StringEntry, ValidationFailure } from 'store/nodeEditor';\r\nimport { HeaderName, validate } from 'store/validators';\r\nimport i18n from 'config/i18n';\r\n\r\n// TODO: move this into webhook router component\r\nexport interface Header {\r\n  uuid: string;\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport interface HeaderElementProps {\r\n  entry: HeaderEntry;\r\n  index: number;\r\n  onRemove: (header: Header) => void;\r\n  onChange: (header: Header, validationFailures: ValidationFailure[]) => void;\r\n  empty?: boolean;\r\n}\r\n\r\ninterface HeaderElementState {\r\n  name: StringEntry;\r\n  value: StringEntry;\r\n}\r\n\r\nexport const headerContainerSpecId = 'header-container';\r\nexport const nameContainerSpecId = 'name-container';\r\nexport const valueConatainerSpecId = 'value-container';\r\nexport const removeIcoSpecId = 'remove-icon';\r\n\r\nexport const HEADER_NAME_ERROR = i18n.t(\r\n  'errors.http_header_missing_name',\r\n  'HTTP headers must have a name'\r\n);\r\nexport const NAME_PLACEHOLDER = i18n.t('forms.webhook_header_name', 'Header Name');\r\nexport const VALUE_PLACEHOLDER = i18n.t('forms.value', 'Value');\r\n\r\nexport default class HeaderElement extends React.Component<HeaderElementProps, HeaderElementState> {\r\n  constructor(props: HeaderElementProps) {\r\n    super(props);\r\n\r\n    const header = this.props.entry.value;\r\n    const name = header.name || '';\r\n    const value = header.value || '';\r\n\r\n    this.state = {\r\n      name: { value: name },\r\n      value: { value }\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private getHeader(): Header {\r\n    return {\r\n      name: this.state.name.value,\r\n      value: this.state.value.value,\r\n      uuid: this.props.entry.value.uuid\r\n    };\r\n  }\r\n\r\n  private handleChangeName(value: string): void {\r\n    const name = validate(i18n.t('forms.header_name', 'Header name'), value, [HeaderName]);\r\n    this.setState({ name: { value: name.value } }, () =>\r\n      this.props.onChange(\r\n        this.getHeader(),\r\n        getAllErrors(this.state.value).concat(getAllErrors(name))\r\n      )\r\n    );\r\n  }\r\n\r\n  private handleChangeValue(value: string): void {\r\n    this.setState({ value: { value } }, () => {\r\n      const name = validate(i18n.t('forms.header_name', 'Header name'), this.state.name.value, [\r\n        HeaderName\r\n      ]);\r\n      this.props.onChange(\r\n        this.getHeader(),\r\n        getAllErrors(this.state.value).concat(getAllErrors(name))\r\n      );\r\n    });\r\n  }\r\n\r\n  private handleRemove(): void {\r\n    this.props.onRemove(this.getHeader());\r\n  }\r\n\r\n  private getRemoveIco(): JSX.Element {\r\n    return (\r\n      <div className={styles.remove_ico} onClick={this.handleRemove} data-spec={removeIcoSpecId}>\r\n        <span className=\"fe-x\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const removeIco: JSX.Element = this.getRemoveIco();\r\n    return (\r\n      <FormElement name={i18n.t('forms.webhook_header', 'Header')} entry={this.props.entry}>\r\n        <div className={styles.header} data-spec={headerContainerSpecId}>\r\n          <div className={styles.header_name} data-spec={nameContainerSpecId}>\r\n            <TextInputElement\r\n              placeholder={NAME_PLACEHOLDER}\r\n              name={NAME_PLACEHOLDER}\r\n              onChange={this.handleChangeName}\r\n              entry={this.state.name}\r\n            />\r\n          </div>\r\n          <div className={styles.header_value} data-spec={valueConatainerSpecId}>\r\n            <TextInputElement\r\n              placeholder={VALUE_PLACEHOLDER}\r\n              name={VALUE_PLACEHOLDER}\r\n              onChange={this.handleChangeValue}\r\n              entry={this.state.value}\r\n              autocomplete={true}\r\n            />\r\n          </div>\r\n          {removeIco}\r\n        </div>\r\n      </FormElement>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport HeaderElement, { Header } from 'components/flow/routers/webhook/header/HeaderElement';\r\nimport {\r\n  METHOD_OPTIONS,\r\n  MethodOption,\r\n  Methods,\r\n  nodeToState,\r\n  stateToNode,\r\n  getDefaultBody\r\n} from 'components/flow/routers/webhook/helpers';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport SelectElement from 'components/form/select/SelectElement';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { FormEntry, FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\r\nimport {\r\n  Alphanumeric,\r\n  Required,\r\n  shouldRequireIf,\r\n  StartIsNonNumeric,\r\n  validate,\r\n  ValidURL,\r\n  validateIf\r\n} from 'store/validators';\r\nimport { createUUID } from 'utils';\r\n\r\nimport styles from './WebhookRouterForm.module.scss';\r\nimport { Trans } from 'react-i18next';\r\nimport i18n from 'config/i18n';\r\n\r\nexport interface HeaderEntry extends FormEntry {\r\n  value: Header;\r\n}\r\n\r\nexport interface MethodEntry extends FormEntry {\r\n  value: MethodOption;\r\n}\r\n\r\nexport interface WebhookRouterFormState extends FormState {\r\n  headers: HeaderEntry[];\r\n  method: MethodEntry;\r\n  url: StringEntry;\r\n  body: StringEntry;\r\n  resultName: StringEntry;\r\n}\r\n\r\nexport default class WebhookRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  WebhookRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private handleUpdate(\r\n    keys: {\r\n      method?: MethodOption;\r\n      url?: string;\r\n      body?: string;\r\n      header?: Header;\r\n      removeHeader?: Header;\r\n      validationFailures?: ValidationFailure[];\r\n      resultName?: string;\r\n    },\r\n    submitting = false\r\n  ): boolean {\r\n    const updates: Partial<WebhookRouterFormState> = {};\r\n\r\n    let ensureEmptyHeader = false;\r\n    let toRemove: any[] = [];\r\n\r\n    if (keys.hasOwnProperty('method')) {\r\n      updates.method = { value: keys.method };\r\n\r\n      const oldMethod = this.state.method.value.value;\r\n      const newMethod = keys.method.value;\r\n\r\n      if (oldMethod !== newMethod) {\r\n        const existingContentTypeHeader = this.state.headers.find(\r\n          (header: HeaderEntry) => header.value.name.toLowerCase() === 'content-type'\r\n        );\r\n\r\n        // whenever our method changes, update the default body\r\n        updates.body = { value: getDefaultBody(newMethod) };\r\n\r\n        // switching from a GET, add a content-type\r\n        if (oldMethod === Methods.GET && newMethod !== Methods.GET) {\r\n          if (!existingContentTypeHeader) {\r\n            let uuid = createUUID();\r\n            // if we have an empty header, use that one\r\n            const lastHeader =\r\n              this.state.headers.length > 0\r\n                ? this.state.headers[this.state.headers.length - 1]\r\n                : null;\r\n            if (lastHeader && !lastHeader.value.name) {\r\n              uuid = lastHeader.value.uuid;\r\n            }\r\n            keys.header = { uuid, name: 'Content-Type', value: 'application/json' };\r\n          }\r\n        } else if (oldMethod !== Methods.GET && newMethod === Methods.GET) {\r\n          // remove content type if switching to a GET\r\n          if (existingContentTypeHeader) {\r\n            toRemove = [{ headers: [{ value: existingContentTypeHeader.value }] }];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (keys.hasOwnProperty('url')) {\r\n      updates.url = validate(i18n.t('forms.url', 'URL'), keys.url, [\r\n        shouldRequireIf(submitting),\r\n        validateIf(ValidURL, keys.url.indexOf('@') === -1)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('resultName')) {\r\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('body')) {\r\n      updates.body = { value: keys.body };\r\n    }\r\n\r\n    if (keys.hasOwnProperty('header')) {\r\n      updates.headers = [{ value: keys.header, validationFailures: keys.validationFailures }];\r\n      ensureEmptyHeader = true;\r\n    }\r\n\r\n    if (keys.hasOwnProperty('removeHeader')) {\r\n      toRemove = [{ headers: [{ value: keys.removeHeader }] }];\r\n      ensureEmptyHeader = true;\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates, toRemove);\r\n\r\n    // update our form\r\n    this.setState(updated, () => {\r\n      // if we updated headers, check if we need a new one\r\n      if (ensureEmptyHeader) {\r\n        let needsHeader = true;\r\n        for (const header of this.state.headers) {\r\n          if (header.value.name.trim() === '') {\r\n            needsHeader = false;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (needsHeader) {\r\n          this.handleCreateHeader();\r\n        }\r\n      }\r\n    });\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Required,\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleMethodUpdate(method: MethodOption): boolean {\r\n    return this.handleUpdate({ method });\r\n  }\r\n\r\n  private handleUrlUpdate(url: string, name: string, submitting = false): boolean {\r\n    return this.handleUpdate({ url }, submitting);\r\n  }\r\n\r\n  private handleHeaderRemoved(removeHeader: Header): boolean {\r\n    return this.handleUpdate({ removeHeader });\r\n  }\r\n\r\n  private handleHeaderUpdated(header: Header, validationFailures: ValidationFailure[]): boolean {\r\n    return this.handleUpdate({ header, validationFailures });\r\n  }\r\n\r\n  private handleCreateHeader(): boolean {\r\n    return this.handleUpdate({\r\n      header: {\r\n        uuid: createUUID(),\r\n        name: '',\r\n        value: ''\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleBodyUpdate(body: string): boolean {\r\n    return this.handleUpdate({ body });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // validate our url in case they haven't interacted\r\n    const valid = this.handleUpdate(\r\n      { url: this.state.url.value, resultName: this.state.resultName.value },\r\n      true\r\n    );\r\n\r\n    if (valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    const headerElements: JSX.Element[] = this.state.headers.map(\r\n      (header: HeaderEntry, index: number, arr: HeaderEntry[]) => {\r\n        return (\r\n          <div key={`header_${header.value.uuid}`}>\r\n            <HeaderElement\r\n              entry={header}\r\n              onRemove={this.handleHeaderRemoved}\r\n              onChange={this.handleHeaderUpdated}\r\n              index={index}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    );\r\n\r\n    const tabs: Tab[] = [];\r\n    tabs.push({\r\n      name: 'HTTP Headers',\r\n      hasErrors: !!this.state.headers.find((header: HeaderEntry) => hasErrors(header)),\r\n      body: (\r\n        <>\r\n          <p className={styles.info}>\r\n            <Trans i18nKey=\"forms.webhook_header_summary\">\r\n              Add any additional headers below that you would like to send along with your request.\r\n            </Trans>\r\n          </p>\r\n          {headerElements}\r\n        </>\r\n      ),\r\n      checked: this.state.headers.length > 1\r\n    });\r\n\r\n    const method = this.state.method.value.value;\r\n    const name = this.state.method.value.label + ' ' + i18n.t('body', 'Body');\r\n    tabs.push({\r\n      name,\r\n      body: (\r\n        <div key=\"post_body\" className={styles.body_form}>\r\n          <h4>{name}</h4>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"forms.webhook_body_summary\"\r\n              values={{ method: this.state.method.value.label }}\r\n            >\r\n              Modify the body of the [[method]] request that will be sent to your webhook.\r\n            </Trans>\r\n          </p>\r\n          <TextInputElement\r\n            __className={styles.req_body}\r\n            name={name}\r\n            showLabel={false}\r\n            entry={this.state.body}\r\n            onChange={this.handleBodyUpdate}\r\n            helpText={\r\n              <Trans\r\n                i18nKey=\"forms.webhook_body_summary\"\r\n                values={{ method: this.state.method.value.label }}\r\n              >\r\n                Modify the body of the [[method]] request that will be sent to your webhook.\r\n              </Trans>\r\n            }\r\n            autocomplete={true}\r\n            textarea={true}\r\n          />\r\n        </div>\r\n      ),\r\n      checked: this.state.body.value !== getDefaultBody(method)\r\n    });\r\n\r\n    return (\r\n      <Dialog\r\n        title={typeConfig.name}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        tabs={tabs}\r\n      >\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <div style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n          <div className={styles.method}>\r\n            <SelectElement\r\n              key=\"method_select\"\r\n              name={i18n.t('forms.method', 'Method')}\r\n              entry={this.state.method}\r\n              onChange={this.handleMethodUpdate}\r\n              options={METHOD_OPTIONS}\r\n            />\r\n          </div>\r\n          <div className={styles.url}>\r\n            <TextInputElement\r\n              name={i18n.t('forms.url', 'URL')}\r\n              placeholder={i18n.t('forms.enter_a_url', 'Enter a URL')}\r\n              entry={this.state.url}\r\n              onChange={this.handleUrlUpdate}\r\n              autocomplete={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles.instructions}>\r\n          <p>\r\n            <Trans i18nKey=\"forms.webhook_help\">\r\n              If your server responds with JSON, each property will be added to the Flow.\r\n            </Trans>\r\n          </p>\r\n          <pre className={styles.code}>\r\n            {'{ \"product\": \"Solar Charging Kit\", \"stock level\": 32 }'}\r\n          </pre>\r\n          <p>\r\n            <Trans i18nKey=\"forms.webhook_example\">\r\n              This response would add <span className={styles.example}>@webhook.product</span> and{' '}\r\n              <span className={styles.example}>@webhook[\"stock level\"]</span> for use in the flow.\r\n            </Trans>\r\n          </p>\r\n        </div>\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { CallClassifier } from 'flowTypes';\r\nimport { renderAsset } from '../helpers';\r\nimport { AssetType } from 'store/flowContext';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\n\r\nconst CallClassifierComp: React.SFC<CallClassifier> = (\r\n  { classifier },\r\n  context: any\r\n): JSX.Element => {\r\n  return renderAsset(\r\n    {\r\n      id: classifier.uuid,\r\n      name: classifier.name,\r\n      type: AssetType.Classifier\r\n    },\r\n    context.config.endpoints\r\n  );\r\n};\r\n\r\nCallClassifierComp.contextTypes = {\r\n  config: fakePropType\r\n};\r\n\r\nexport default CallClassifierComp;\r\n","import ConfigProvider from 'config/ConfigProvider';\r\nimport { getOperatorConfig, operatorConfigList } from 'config/operatorConfigs';\r\nimport { getTypeConfig, typeConfigList } from 'config/typeConfigs';\r\n\r\nexport { typeConfigList, getTypeConfig, operatorConfigList, getOperatorConfig };\r\n\r\nexport default ConfigProvider;\r\n","import {\r\n  hasCases,\r\n  createCaseProps,\r\n  resolveRoutes,\r\n  ResolvedRoutes,\r\n  createRenderNode\r\n} from 'components/flow/routers/helpers';\r\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\r\nimport { Types, Operators, HIDDEN } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { CallClassifier, SwitchRouter, Case, Exit, Category, RouterTypes } from 'flowTypes';\r\nimport { RenderNode, AssetType } from 'store/flowContext';\r\nimport { NodeEditorSettings, StringEntry, AssetEntry } from 'store/nodeEditor';\r\nimport { createUUID, scalarArrayEquals, snakify } from 'utils';\r\nimport { ClassifyRouterFormState } from 'components/flow/routers/classify/ClassifyRouterForm';\r\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport { getOperatorConfig } from 'config';\r\n\r\nexport const getOriginalAction = (settings: NodeEditorSettings): CallClassifier => {\r\n  const action =\r\n    settings.originalAction ||\r\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\r\n\r\n  if (action.type === Types.call_classifier) {\r\n    return action as CallClassifier;\r\n  }\r\n};\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): ClassifyRouterFormState => {\r\n  // TODO: work out an incremental result name\r\n  const resultName: StringEntry = { value: 'Result' };\r\n  let initialCases: CaseProps[] = [];\r\n\r\n  let operand = DEFAULT_OPERAND;\r\n  let classifier: AssetEntry = { value: null };\r\n\r\n  let hiddenCases: CaseProps[] = [];\r\n\r\n  if (getType(settings.originalNode) === Types.split_by_intent) {\r\n    const router = settings.originalNode.node.router as SwitchRouter;\r\n\r\n    if (hasCases(settings.originalNode.node)) {\r\n      initialCases = createCaseProps(router.cases, settings.originalNode);\r\n\r\n      hiddenCases = initialCases.filter(\r\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility === HIDDEN\r\n      );\r\n\r\n      initialCases = initialCases.filter(\r\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility !== HIDDEN\r\n      );\r\n    }\r\n\r\n    const action = getOriginalAction(settings) as CallClassifier;\r\n    const { uuid: id, name } = action.classifier;\r\n    classifier = { value: { id, name, type: AssetType.Classifier } };\r\n    operand = action.input;\r\n  }\r\n\r\n  const state: ClassifyRouterFormState = {\r\n    hiddenCases,\r\n    resultName,\r\n    classifier,\r\n    operand: { value: operand },\r\n    cases: initialCases,\r\n    valid: true\r\n  };\r\n\r\n  return state;\r\n};\r\n\r\nexport interface Route {\r\n  type: Operators;\r\n  arguments: string[];\r\n  name: 'Other';\r\n}\r\n\r\nexport const ensureRoute = (routes: ResolvedRoutes, route: Route) => {\r\n  const existingCasePosition = routes.cases.findIndex(\r\n    kase => kase.type === route.type && scalarArrayEquals(kase.arguments, route.arguments)\r\n  );\r\n\r\n  // if it already exists, make sure it's at the end\r\n  if (existingCasePosition >= 0) {\r\n    // already in the right place we are done\r\n    if (existingCasePosition === routes.cases.length - 1) {\r\n      return;\r\n    }\r\n\r\n    const [existingCase] = routes.cases.splice(existingCasePosition, 1);\r\n    routes.cases.push(existingCase);\r\n\r\n    return;\r\n  }\r\n\r\n  const exit: Exit = {\r\n    uuid: createUUID()\r\n  };\r\n\r\n  const category: Category = {\r\n    uuid: createUUID(),\r\n    name: route.name,\r\n    exit_uuid: exit.uuid\r\n  };\r\n\r\n  // otherwise let's add it\r\n  const kase: Case = {\r\n    uuid: createUUID(),\r\n    type: route.type,\r\n    arguments: route.arguments,\r\n    category_uuid: category.uuid\r\n  };\r\n\r\n  routes.categories.push(category);\r\n  routes.cases.push(kase);\r\n\r\n  // our new exit should go right in front of the default exit\r\n  routes.exits.splice(routes.exits.length - 1, 0, exit);\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: ClassifyRouterFormState\r\n): RenderNode => {\r\n  let uuid = createUUID();\r\n\r\n  const routes = resolveRoutes(\r\n    [...state.cases, ...state.hiddenCases],\r\n    false,\r\n    settings.originalNode.node,\r\n    'Failure'\r\n  );\r\n\r\n  // make sure we have an other route since failure is our default\r\n  ensureRoute(routes, {\r\n    type: Operators.has_category,\r\n    arguments: ['Success', 'Skipped'],\r\n    name: 'Other'\r\n  });\r\n\r\n  const originalAction = getOriginalAction(settings);\r\n  if (originalAction) {\r\n    uuid = originalAction.uuid;\r\n  }\r\n\r\n  const routerResultName = state.resultName.value;\r\n  const actionResultName = '_' + routerResultName + ' Classification';\r\n\r\n  const newAction: CallClassifier = {\r\n    uuid,\r\n    type: Types.call_classifier,\r\n    result_name: actionResultName,\r\n    input: state.operand.value,\r\n    classifier: {\r\n      uuid: state.classifier.value.id,\r\n      name: state.classifier.value.name\r\n    }\r\n  };\r\n\r\n  const router: SwitchRouter = {\r\n    cases: routes.cases,\r\n    operand: `@results.${snakify(actionResultName)}`,\r\n    categories: routes.categories,\r\n    type: RouterTypes.switch,\r\n    default_category_uuid: routes.defaultCategory,\r\n    result_name: routerResultName\r\n  };\r\n\r\n  return createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    routes.exits,\r\n    Types.split_by_intent,\r\n    [newAction]\r\n  );\r\n};\r\n\r\nexport const createEmptyCase = (): CaseProps => {\r\n  const uuid = createUUID();\r\n  return {\r\n    uuid,\r\n    kase: {\r\n      uuid,\r\n      type: Operators.has_top_intent,\r\n      arguments: ['', ''],\r\n      category_uuid: null\r\n    },\r\n    categoryName: '',\r\n    valid: true\r\n  };\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport { nodeToState, stateToNode, createEmptyCase } from './helpers';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { FormState, mergeForm, StringEntry, AssetEntry } from 'store/nodeEditor';\r\nimport {\r\n  Alphanumeric,\r\n  Required,\r\n  shouldRequireIf,\r\n  StartIsNonNumeric,\r\n  validate\r\n} from 'store/validators';\r\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport { Asset } from 'store/flowContext';\r\nimport { renderIf } from 'utils';\r\nimport { intentOperatorList } from 'config/operatorConfigs';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\r\nimport { fetchAsset } from 'external';\r\nimport styles from './ClassifyRouterForm.module.scss';\r\nimport i18n from 'config/i18n';\r\n\r\nexport interface ClassifyRouterFormState extends FormState {\r\n  hiddenCases: CaseProps[];\r\n  resultName: StringEntry;\r\n  classifier: AssetEntry;\r\n  cases: CaseProps[];\r\n  operand: StringEntry;\r\n}\r\n\r\nexport default class ClassifyRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  ClassifyRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n\r\n    // we need to resolve our classifier for intent selection\r\n    if (this.state.classifier.value) {\r\n      fetchAsset(this.props.assetStore.classifiers, this.state.classifier.value.id).then(\r\n        (classifier: Asset) => {\r\n          this.handleUpdate({ classifier: classifier });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private handleUpdate(\r\n    keys: {\r\n      resultName?: string;\r\n      classifier?: Asset;\r\n    },\r\n    submitting = false\r\n  ): boolean {\r\n    const updates: Partial<ClassifyRouterFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('resultName')) {\r\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('classifier')) {\r\n      updates.classifier = validate(i18n.t('forms.classifier', 'Classifier'), keys.classifier, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n\r\n    // update our form\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleCasesUpdated(cases: CaseProps[]): void {\r\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\r\n    this.setState({ cases, valid: !invalidCase });\r\n  }\r\n\r\n  private handleUpdateResultName(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Required,\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // if we still have invalid cases, don't move forward\r\n    const invalidCase = this.state.cases.find((caseProps: CaseProps) => !caseProps.valid);\r\n    if (invalidCase) {\r\n      return;\r\n    }\r\n\r\n    // validate our result name in case they haven't interacted\r\n    const valid = this.handleUpdate(\r\n      {\r\n        resultName: this.state.resultName.value,\r\n        classifier: this.state.classifier.value\r\n      },\r\n      true\r\n    );\r\n\r\n    if (valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private handleClassifierUpdated(selected: Asset[]): void {\r\n    this.handleUpdate({ classifier: selected[0] });\r\n  }\r\n\r\n  private handleOperandUpdated(value: string): void {\r\n    this.setState({\r\n      operand: validate(i18n.t('forms.operand', 'Operand'), value, [Required])\r\n    });\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private dialog: Dialog;\r\n\r\n  private renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    const tabs: Tab[] = [\r\n      {\r\n        name: 'Classifier Input',\r\n        checked: this.state.operand.value !== DEFAULT_OPERAND,\r\n        body: (\r\n          <>\r\n            <p>\r\n              Enter an expression to use as the input to your classifier. To classify the last\r\n              response from the contact use <code>{DEFAULT_OPERAND}</code>.\r\n            </p>\r\n            <TextInputElement\r\n              name={i18n.t('forms.operand', 'Operand')}\r\n              showLabel={false}\r\n              autocomplete={true}\r\n              onChange={this.handleOperandUpdated}\r\n              entry={this.state.operand}\r\n            />\r\n          </>\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Dialog\r\n        title={typeConfig.name}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        tabs={tabs}\r\n        ref={ele => {\r\n          this.dialog = ele;\r\n        }}\r\n      >\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p>\r\n          <span>Run </span>\r\n          <span\r\n            className={styles.link}\r\n            onClick={() => {\r\n              this.dialog.showTab(0);\r\n            }}\r\n          >\r\n            {this.state.operand.value === DEFAULT_OPERAND\r\n              ? 'the last response'\r\n              : this.state.operand.value}\r\n          </span>\r\n          <span> through the classifier...</span>\r\n        </p>\r\n        <AssetSelector\r\n          key=\"select_classifier\"\r\n          name={i18n.t('forms.classifier', 'Classifier')}\r\n          placeholder=\"Select the classifier to use\"\r\n          assets={this.props.assetStore.classifiers}\r\n          onChange={this.handleClassifierUpdated}\r\n          entry={this.state.classifier}\r\n        />\r\n\r\n        {renderIf(!!this.state.classifier.value)(\r\n          <CaseList\r\n            data-spec=\"cases\"\r\n            cases={this.state.cases}\r\n            onCasesUpdated={this.handleCasesUpdated}\r\n            operators={intentOperatorList}\r\n            createEmptyCase={createEmptyCase}\r\n            classifier={this.state.classifier.value}\r\n          />\r\n        )}\r\n\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import { SCHEMES, Scheme, getType } from 'config/typeConfigs';\r\nimport { SelectOption } from 'components/form/select/SelectElement';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\nimport { SchemeRouterFormState } from './SchemeRouterForm';\r\nimport { getSwitchRouter, resolveRoutes, createRenderNode } from '../helpers';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { SwitchRouter, FlowNode, RouterTypes, Case } from 'flowTypes';\r\nimport { CaseProps } from '../caselist/CaseList';\r\nimport { createUUID } from 'utils';\r\nimport { Operators, Types } from 'config/interfaces';\r\nimport { SCHEMES_OPERAND } from 'components/nodeeditor/constants';\r\n\r\nexport const getChannelTypeOptions = (): SelectOption[] => {\r\n  // get our scheme list as select options, ignore hidden schemes\r\n  return SCHEMES.filter((scheme: Scheme) => !scheme.excludeFromSplit).map((scheme: Scheme) => {\r\n    return { value: scheme.scheme, label: scheme.name };\r\n  });\r\n};\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): SchemeRouterFormState => {\r\n  const state: SchemeRouterFormState = {\r\n    schemes: { value: [] },\r\n    resultName: { value: '' },\r\n    valid: false\r\n  };\r\n\r\n  if (getType(settings.originalNode) === Types.split_by_scheme) {\r\n    state.schemes.value = extractSchemes(settings.originalNode.node);\r\n    state.resultName = {\r\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\r\n    };\r\n    state.valid = true;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: SchemeRouterFormState\r\n): RenderNode => {\r\n  let orginalCases: Case[] = [];\r\n  if (getType(settings.originalNode) === Types.split_by_scheme) {\r\n    orginalCases = getSwitchRouter(settings.originalNode.node).cases;\r\n  }\r\n\r\n  const currentCases = schemesToCases(state.schemes.value, orginalCases);\r\n\r\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\r\n    currentCases,\r\n    false,\r\n    settings.originalNode.node\r\n  );\r\n\r\n  const router: SwitchRouter = {\r\n    type: RouterTypes.switch,\r\n    cases,\r\n    categories,\r\n    default_category_uuid: defaultExit,\r\n    operand: SCHEMES_OPERAND,\r\n    result_name: state.resultName.value\r\n  };\r\n\r\n  return createRenderNode(\r\n    settings.originalNode.node.uuid,\r\n    router,\r\n    exits,\r\n    Types.split_by_scheme,\r\n    [],\r\n    { cases: caseConfig }\r\n  );\r\n};\r\n\r\nexport const extractSchemes = (node: FlowNode): SelectOption[] => {\r\n  let schemes: SelectOption[] = [];\r\n  const router = getSwitchRouter(node);\r\n  const selectOptions = getChannelTypeOptions();\r\n\r\n  if (router) {\r\n    schemes = (router as SwitchRouter).cases\r\n      .map(kase => {\r\n        if (kase.arguments) {\r\n          const [scheme] = kase.arguments;\r\n          return selectOptions.find((option: SelectOption) => option.value === scheme);\r\n        }\r\n        return null;\r\n      })\r\n      .filter((option: SelectOption) => option !== null);\r\n  }\r\n  return schemes;\r\n};\r\n\r\nexport const schemesToCases = (\r\n  schemes: SelectOption[] = [],\r\n  originalCases: Case[]\r\n): CaseProps[] => {\r\n  return schemes.map(({ value, label }: SelectOption) => {\r\n    // try to use the same case uuids for consistency\r\n    const originalCase = originalCases.find((kase: Case) => kase.arguments[0] === value);\r\n    const uuid = originalCase ? originalCase.uuid : createUUID();\r\n    return {\r\n      uuid: createUUID(),\r\n      kase: {\r\n        uuid,\r\n        type: Operators.has_only_phrase,\r\n        arguments: [value],\r\n        category_uuid: ''\r\n      },\r\n      categoryName: label,\r\n      valid: true\r\n    };\r\n  });\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { FormState, mergeForm, StringEntry, SelectOptionArrayEntry } from 'store/nodeEditor';\r\nimport { Required, validate } from 'store/validators';\r\nimport i18n from 'config/i18n';\r\nimport { getChannelTypeOptions, nodeToState, stateToNode } from './helpers';\r\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\r\nimport { renderIssues } from 'components/flow/actions/helpers';\r\n\r\nexport interface SchemeRouterFormState extends FormState {\r\n  schemes: SelectOptionArrayEntry;\r\n  resultName: StringEntry;\r\n}\r\n\r\nexport default class SchemeRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  SchemeRouterFormState\r\n> {\r\n  public static contextTypes = {\r\n    endpoints: fakePropType,\r\n    assetService: fakePropType\r\n  };\r\n\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private handleSchemesChanged(schemes: SelectOption[]): void {\r\n    this.handleUpdate({ schemes });\r\n  }\r\n\r\n  private handleUpdateResultName(resultName: string): void {\r\n    this.handleUpdate({ resultName });\r\n  }\r\n\r\n  private handleUpdate(keys: { schemes?: SelectOption[]; resultName?: string }): boolean {\r\n    const updates: Partial<SchemeRouterFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('schemes')) {\r\n      updates.schemes = validate(i18n.t('forms.split_by_scheme', 'Channel types'), keys.schemes, [\r\n        Required\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('resultName')) {\r\n      updates.resultName = { value: keys.resultName };\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleSave(): void {\r\n    if (this.state.valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p>\r\n          {i18n.t(\r\n            'forms.split_by_scheme_summary',\r\n            \"The contact's URN is the address they used to reach you such as their phone number or a Facebook ID. Select which URN types to split by below.\"\r\n          )}\r\n        </p>\r\n        <SelectElement\r\n          key=\"channel_type_select\"\r\n          name={i18n.t('forms.channel_type', 'Channel Type')}\r\n          placeholder={i18n.t(\r\n            'forms.split_by_channel_placeholder',\r\n            'Select the channels to split by'\r\n          )}\r\n          entry={this.state.schemes}\r\n          onChange={this.handleSchemesChanged}\r\n          options={getChannelTypeOptions()}\r\n          multi={true}\r\n        />\r\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\r\nimport { Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { OpenTicket } from 'flowTypes';\r\nimport { RenderNode, AssetType } from 'store/flowContext';\r\nimport { NodeEditorSettings, AssetEntry } from 'store/nodeEditor';\r\nimport { createUUID } from 'utils';\r\nimport { TicketRouterFormState } from 'components/flow/routers/ticket/TicketRouterForm';\r\n\r\nexport const nodeToState = (settings: NodeEditorSettings): TicketRouterFormState => {\r\n  let ticketer: AssetEntry = { value: null };\r\n  let subject = { value: '@run.flow.name' };\r\n  let body = { value: '@results' };\r\n  let resultName = { value: 'Result' };\r\n\r\n  if (getType(settings.originalNode) === Types.split_by_ticket) {\r\n    const action = getOriginalAction(settings) as OpenTicket;\r\n\r\n    const { uuid: id, name } = action.ticketer;\r\n    ticketer = { value: { id, name, type: AssetType.Ticketer } };\r\n    subject = { value: action.subject };\r\n    body = { value: action.body };\r\n    resultName = { value: action.result_name };\r\n  }\r\n\r\n  const state: TicketRouterFormState = {\r\n    ticketer,\r\n    subject,\r\n    body,\r\n    resultName,\r\n    valid: true\r\n  };\r\n\r\n  return state;\r\n};\r\n\r\nexport const stateToNode = (\r\n  settings: NodeEditorSettings,\r\n  state: TicketRouterFormState\r\n): RenderNode => {\r\n  let uuid = createUUID();\r\n  const originalAction = getOriginalAction(settings);\r\n  if (originalAction) {\r\n    uuid = originalAction.uuid;\r\n  }\r\n\r\n  const newAction: OpenTicket = {\r\n    uuid,\r\n    type: Types.open_ticket,\r\n    ticketer: {\r\n      uuid: state.ticketer.value.id,\r\n      name: state.ticketer.value.name\r\n    },\r\n    subject: state.subject.value,\r\n    body: state.body.value,\r\n    result_name: state.resultName.value\r\n  };\r\n\r\n  return createWebhookBasedNode(newAction, settings.originalNode, true);\r\n};\r\n\r\nexport const getOriginalAction = (settings: NodeEditorSettings): OpenTicket => {\r\n  const action =\r\n    settings.originalAction ||\r\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\r\n\r\n  if (action.type === Types.open_ticket) {\r\n    return action as OpenTicket;\r\n  }\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\r\nimport { RouterFormProps } from 'components/flow/props';\r\nimport { nodeToState, stateToNode } from './helpers';\r\nimport { createResultNameInput } from 'components/flow/routers/widgets';\r\nimport TypeList from 'components/nodeeditor/TypeList';\r\nimport * as React from 'react';\r\nimport { FormState, mergeForm, StringEntry, AssetEntry } from 'store/nodeEditor';\r\nimport {\r\n  Alphanumeric,\r\n  Required,\r\n  shouldRequireIf,\r\n  StartIsNonNumeric,\r\n  validate\r\n} from 'store/validators';\r\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\r\nimport { Asset } from 'store/flowContext';\r\nimport { fetchAsset } from 'external';\r\nimport styles from './TicketRouterForm.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport TextInputElement from 'components/form/textinput/TextInputElement';\r\n\r\nexport interface TicketRouterFormState extends FormState {\r\n  ticketer: AssetEntry;\r\n  subject: StringEntry;\r\n  body: StringEntry;\r\n  resultName: StringEntry;\r\n}\r\n\r\nexport default class TicketRouterForm extends React.Component<\r\n  RouterFormProps,\r\n  TicketRouterFormState\r\n> {\r\n  constructor(props: RouterFormProps) {\r\n    super(props);\r\n\r\n    this.state = nodeToState(this.props.nodeSettings);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n\r\n    // we need to resolve our ticketer asset\r\n    if (this.state.ticketer.value) {\r\n      fetchAsset(this.props.assetStore.ticketers, this.state.ticketer.value.id).then(\r\n        (ticketer: Asset) => {\r\n          this.handleUpdate({ ticketer });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private handleUpdate(\r\n    keys: {\r\n      ticketer?: Asset;\r\n      subject?: string;\r\n      body?: string;\r\n      resultName?: string;\r\n    },\r\n    submitting = false\r\n  ): boolean {\r\n    const updates: Partial<TicketRouterFormState> = {};\r\n\r\n    if (keys.hasOwnProperty('ticketer')) {\r\n      updates.ticketer = validate(i18n.t('forms.ticketer', 'Ticketer'), keys.ticketer, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('subject')) {\r\n      updates.subject = validate(i18n.t('forms.subject', 'Subject'), keys.subject, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('body')) {\r\n      updates.body = validate(i18n.t('forms.body', 'Body'), keys.body, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    if (keys.hasOwnProperty('resultName')) {\r\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\r\n        shouldRequireIf(submitting)\r\n      ]);\r\n    }\r\n\r\n    const updated = mergeForm(this.state, updates);\r\n\r\n    // update our form\r\n    this.setState(updated);\r\n    return updated.valid;\r\n  }\r\n\r\n  private handleTicketerUpdate(selected: Asset[]): void {\r\n    this.handleUpdate({ ticketer: selected[0] });\r\n  }\r\n\r\n  private handleSubjectUpdate(subject: string, name: string, submitting = false): boolean {\r\n    return this.handleUpdate({ subject }, submitting);\r\n  }\r\n\r\n  private handleBodyUpdate(body: string): boolean {\r\n    return this.handleUpdate({ body });\r\n  }\r\n\r\n  private handleResultNameUpdate(value: string): void {\r\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\r\n      Required,\r\n      Alphanumeric,\r\n      StartIsNonNumeric\r\n    ]);\r\n    this.setState({\r\n      resultName,\r\n      valid: this.state.valid && !hasErrors(resultName)\r\n    });\r\n  }\r\n\r\n  private handleSave(): void {\r\n    // validate all fields in case they haven't interacted\r\n    const valid = this.handleUpdate(\r\n      {\r\n        ticketer: this.state.ticketer.value,\r\n        subject: this.state.subject.value,\r\n        body: this.state.body.value,\r\n        resultName: this.state.resultName.value\r\n      },\r\n      true\r\n    );\r\n\r\n    if (valid) {\r\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\r\n      this.props.onClose(false);\r\n    }\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\r\n      secondary: {\r\n        name: i18n.t('buttons.cancel', 'Cancel'),\r\n        onClick: () => this.props.onClose(true)\r\n      }\r\n    };\r\n  }\r\n\r\n  private dialog: Dialog;\r\n\r\n  private renderEdit(): JSX.Element {\r\n    const typeConfig = this.props.typeConfig;\r\n\r\n    return (\r\n      <Dialog\r\n        title={typeConfig.name}\r\n        headerClass={typeConfig.type}\r\n        buttons={this.getButtons()}\r\n        ref={ele => {\r\n          this.dialog = ele;\r\n        }}\r\n      >\r\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\r\n        <p>\r\n          <span>Open ticket via... </span>\r\n        </p>\r\n        <AssetSelector\r\n          key=\"select_ticketer\"\r\n          name={i18n.t('forms.ticketer', 'Ticketer')}\r\n          placeholder=\"Select the ticketing service to use\"\r\n          assets={this.props.assetStore.ticketers}\r\n          onChange={this.handleTicketerUpdate}\r\n          entry={this.state.ticketer}\r\n        />\r\n        <div className={styles.subject}>\r\n          <TextInputElement\r\n            name={i18n.t('forms.subject', 'Subject')}\r\n            placeholder={i18n.t('forms.enter_a_subject', 'Enter a subject')}\r\n            entry={this.state.subject}\r\n            onChange={this.handleSubjectUpdate}\r\n            autocomplete={true}\r\n          />\r\n        </div>\r\n        <div className={styles.body}>\r\n          <TextInputElement\r\n            name={i18n.t('forms.body', 'Body')}\r\n            placeholder={i18n.t('forms.enter_a_body', 'Enter a body')}\r\n            entry={this.state.body}\r\n            onChange={this.handleBodyUpdate}\r\n            autocomplete={true}\r\n            textarea={true}\r\n          />\r\n        </div>\r\n\r\n        {createResultNameInput(this.state.resultName, this.handleResultNameUpdate)}\r\n        {renderIssues(this.props)}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return this.renderEdit();\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { OpenTicket } from 'flowTypes';\r\nimport { renderAsset } from '../helpers';\r\nimport { AssetType } from 'store/flowContext';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\n\r\nconst OpenTicketComp: React.SFC<OpenTicket> = ({ ticketer }, context: any): JSX.Element => {\r\n  return renderAsset(\r\n    {\r\n      id: ticketer.uuid,\r\n      name: ticketer.name,\r\n      type: AssetType.Ticketer\r\n    },\r\n    context.config.endpoints\r\n  );\r\n};\r\n\r\nOpenTicketComp.contextTypes = {\r\n  config: fakePropType\r\n};\r\n\r\nexport default OpenTicketComp;\r\n","import AddLabelsComp from 'components/flow/actions/addlabels/AddLabels';\r\nimport AddLabelsForm from 'components/flow/actions/addlabels/AddLabelsForm';\r\nimport AddURNComp from 'components/flow/actions/addurn/AddURN';\r\nimport AddURNForm from 'components/flow/actions/addurn/AddURNForm';\r\nimport CallResthookComp from 'components/flow/actions/callresthook/CallResthook';\r\nimport CallWebhookComp from 'components/flow/actions/callwebhook/CallWebhook';\r\nimport AddGroupsForm from 'components/flow/actions/changegroups/addgroups/AddGroupsForm';\r\nimport ChangeGroupsComp from 'components/flow/actions/changegroups/ChangeGroups';\r\nimport RemoveGroupsForm from 'components/flow/actions/changegroups/removegroups/RemoveGroupsForm';\r\nimport KeyLocalizationForm from 'components/flow/actions/localization/KeyLocalizationForm';\r\nimport MsgLocalizationForm from 'components/flow/actions/localization/MsgLocalizationForm';\r\nimport MissingComp from 'components/flow/actions/missing/Missing';\r\nimport PlayAudioComp from 'components/flow/actions/playaudio/PlayAudio';\r\nimport PlayAudioForm from 'components/flow/actions/playaudio/PlayAudioForm';\r\nimport SayMsgComp from 'components/flow/actions/saymsg/SayMsg';\r\nimport SayMsgForm from 'components/flow/actions/saymsg/SayMsgForm';\r\nimport SendBroadcastComp from 'components/flow/actions/sendbroadcast/SendBroadcast';\r\nimport SendBroadcastForm from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\r\nimport SendEmailComp from 'components/flow/actions/sendemail/SendEmail';\r\nimport SendEmailForm from 'components/flow/actions/sendemail/SendEmailForm';\r\nimport SendMsgComp from 'components/flow/actions/sendmsg/SendMsg';\r\nimport SendMsgForm from 'components/flow/actions/sendmsg/SendMsgForm';\r\nimport SetRunResultComp from 'components/flow/actions/setrunresult/SetRunResult';\r\nimport SetRunResultForm from 'components/flow/actions/setrunresult/SetRunResultForm';\r\nimport StartFlowComp from 'components/flow/actions/startflow/StartFlow';\r\nimport StartSessionComp from 'components/flow/actions/startsession/StartSession';\r\nimport StartSessionForm from 'components/flow/actions/startsession/StartSessionForm';\r\nimport TransferAirtimeComp from 'components/flow/actions/transferairtime/TransferAirtime';\r\nimport UpdateContactComp from 'components/flow/actions/updatecontact/UpdateContact';\r\nimport UpdateContactForm from 'components/flow/actions/updatecontact/UpdateContactForm';\r\nimport AirtimeRouterForm from 'components/flow/routers/airtime/AirtimeRouterForm';\r\nimport DigitsRouterForm from 'components/flow/routers/digits/DigitsRouterForm';\r\nimport ExpressionRouterForm from 'components/flow/routers/expression/ExpressionRouterForm';\r\nimport FieldRouterForm from 'components/flow/routers/field/FieldRouterForm';\r\nimport GroupsRouterForm from 'components/flow/routers/groups/GroupsRouterForm';\r\nimport RouterLocalizationForm from 'components/flow/routers/localization/RouterLocalizationForm';\r\nimport MenuRouterForm from 'components/flow/routers/menu/MenuRouterForm';\r\nimport RandomRouterForm from 'components/flow/routers/random/RandomRouterForm';\r\nimport ResponseRouterForm from 'components/flow/routers/response/ResponseRouterForm';\r\nimport ResthookRouterForm from 'components/flow/routers/resthook/ResthookRouterForm';\r\nimport ResultRouterForm from 'components/flow/routers/result/ResultRouterForm';\r\nimport SubflowRouterForm from 'components/flow/routers/subflow/SubflowRouterForm';\r\nimport WaitRouterForm from 'components/flow/routers/wait/WaitRouterForm';\r\nimport WebhookRouterForm from 'components/flow/routers/webhook/WebhookRouterForm';\r\nimport {\r\n  FlowTypes,\r\n  HIDDEN,\r\n  ONLINE,\r\n  SURVEY,\r\n  TEXT_TYPES,\r\n  Type,\r\n  Types,\r\n  VOICE,\r\n  FeatureFilter\r\n} from 'config/interfaces';\r\nimport { HintTypes, RouterTypes, FlowEditorConfig, SendMsg } from 'flowTypes';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport CallClassifierComp from 'components/flow/actions/callclassifier/CallClassifier';\r\nimport ClassifyRouterForm from 'components/flow/routers/classify/ClassifyRouterForm';\r\nimport i18n from 'config/i18n';\r\nimport SchemeRouterForm from 'components/flow/routers/scheme/SchemeRouterForm';\r\nimport TicketRouterForm from 'components/flow/routers/ticket/TicketRouterForm';\r\nimport OpenTicketComp from 'components/flow/actions/openticket/OpenTicket';\r\n\r\nconst dedupeTypeConfigs = (typeConfigs: Type[]) => {\r\n  const map: any = {};\r\n  return typeConfigs.filter(config => {\r\n    if (config.type === 'missing') {\r\n      return false;\r\n    }\r\n    const { name: key } = config;\r\n    return map[key] ? false : (map[key] = true);\r\n  });\r\n};\r\n\r\nexport interface TypeMap {\r\n  [propName: string]: Type;\r\n}\r\n\r\nexport type GetTypeConfig = (type: string) => Type;\r\n\r\nexport interface Scheme {\r\n  scheme: string;\r\n  name: string;\r\n  path: string;\r\n  excludeFromSplit?: boolean;\r\n}\r\n\r\nexport const SCHEMES: Scheme[] = [\r\n  {\r\n    scheme: 'tel',\r\n    name: i18n.t('schemes.phone.name', 'SMS'),\r\n    path: i18n.t('schemes.phone.path', 'Phone Number')\r\n  },\r\n  {\r\n    scheme: 'whatsapp',\r\n    name: i18n.t('schemes.whatsapp.name', 'WhatsApp'),\r\n    path: i18n.t('schemes.whatsapp.path', 'WhatsApp Number')\r\n  },\r\n  {\r\n    scheme: 'facebook',\r\n    name: i18n.t('schemes.facebook.path', 'Facebook'),\r\n    path: i18n.t('schemes.facebook.path', 'Facebook ID')\r\n  },\r\n  {\r\n    scheme: 'twitterid',\r\n    name: i18n.t('schemes.twitterid.name', 'Twitter'),\r\n    path: i18n.t('schemes.twitterid.path', 'Twitter ID')\r\n  },\r\n  {\r\n    scheme: 'telegram',\r\n    name: i18n.t('schemes.telegram.name', 'Telegram'),\r\n    path: i18n.t('schemes.telegram.path', 'Telegram ID')\r\n  },\r\n  {\r\n    scheme: 'viber',\r\n    name: i18n.t('schemes.viber.name', 'Viber'),\r\n    path: i18n.t('schemes.viber.path', 'Viber ID')\r\n  },\r\n  {\r\n    scheme: 'line',\r\n    name: i18n.t('schemes.line.name', 'Line'),\r\n    path: i18n.t('schemes.line.path', 'Line ID')\r\n  },\r\n  {\r\n    scheme: 'wechat',\r\n    name: i18n.t('schemes.wechat.name', 'Wechat'),\r\n    path: i18n.t('schemes.wechat.path', 'Wechat ID')\r\n  },\r\n  {\r\n    scheme: 'fcm',\r\n    name: i18n.t('schemes.firebase.name', 'Firebase'),\r\n    path: i18n.t('schemes.firebase.path', 'Firebase ID')\r\n  },\r\n  {\r\n    scheme: 'jiochat',\r\n    name: i18n.t('schemes.jiojach.name', 'Jiochat'),\r\n    path: i18n.t('schemes.jiochat.path', 'Jiochat ID')\r\n  },\r\n  {\r\n    scheme: 'freshchat',\r\n    name: i18n.t('schemes.freschat.name', 'Freshchat'),\r\n    path: i18n.t('schemes.freshchat.path', 'Freshchat ID')\r\n  },\r\n  {\r\n    scheme: 'mailto',\r\n    name: i18n.t('schemes.email.name', 'Email'),\r\n    path: i18n.t('schemes.email.path', 'Email Address'),\r\n    excludeFromSplit: true\r\n  },\r\n  {\r\n    scheme: 'twitter',\r\n    name: i18n.t('schemes.twitter.name', 'Twitter'),\r\n    path: i18n.t('schemes.twitter.path', 'Twitter Handle'),\r\n    excludeFromSplit: true\r\n  },\r\n  {\r\n    scheme: 'ext',\r\n    name: i18n.t('schemes.external.name', 'External'),\r\n    path: i18n.t('schemes.external.path', 'External ID')\r\n  }\r\n];\r\n\r\nexport const typeConfigList: Type[] = [\r\n  {\r\n    type: Types.missing,\r\n    name: 'Missing',\r\n    description: ' ** Unsupported ** ',\r\n    component: MissingComp,\r\n    visibility: HIDDEN\r\n  },\r\n  {\r\n    type: Types.say_msg,\r\n    name: i18n.t('actions.play_message.name', 'Play Message'),\r\n    description: i18n.t('actions.play_message.description', 'Play a message'),\r\n    form: SayMsgForm,\r\n    localization: MsgLocalizationForm,\r\n    localizeableKeys: ['text', 'audio_url'],\r\n    component: SayMsgComp,\r\n    visibility: VOICE\r\n  },\r\n\r\n  {\r\n    type: Types.wait_for_menu,\r\n    name: i18n.t('actions.wait_for_menu.name', 'Wait for Menu Selection'),\r\n    description: i18n.t('actions.wait_for_menu.description', 'Wait for menu selection'),\r\n    form: MenuRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    visibility: VOICE\r\n  },\r\n  {\r\n    type: Types.wait_for_digits,\r\n    name: i18n.t('actions.wait_for_digits.name', 'Wait for Digits'),\r\n    description: i18n.t('actions.wait_for_digits.description', 'Wait for multiple digits'),\r\n    form: DigitsRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits', 'cases'],\r\n    visibility: VOICE\r\n  },\r\n\r\n  {\r\n    type: Types.wait_for_audio,\r\n    name: i18n.t('actions.wait_for_audio.name', 'Wait for Audio'),\r\n    description: i18n.t('actions.wait_for_audio.description', 'Wait for an audio recording'),\r\n    form: WaitRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    visibility: [FlowTypes.SURVEY, FlowTypes.VOICE]\r\n  },\r\n\r\n  {\r\n    type: Types.send_msg,\r\n    name: i18n.t('actions.send_msg.name', 'Send Message'),\r\n    description: i18n.t('actions.send_msg.description', 'Send the contact a message'),\r\n    form: SendMsgForm,\r\n    localization: MsgLocalizationForm,\r\n    localizeableKeys: ['text', 'quick_replies', 'templating.variables'],\r\n    component: SendMsgComp,\r\n    massageForDisplay: (action: SendMsg) => {\r\n      // quick replies are optional in the definition, make sure we have\r\n      // at least an empty array so the localization has a proper cue\r\n      action.quick_replies = action.quick_replies || [];\r\n    }\r\n  },\r\n  {\r\n    type: Types.wait_for_response,\r\n    name: i18n.t('actions.wait_for_response.name', 'Wait for Response'),\r\n    description: i18n.t('actions.wait_for_response.description', 'Wait for the contact to respond'),\r\n    form: ResponseRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['categories', 'cases'],\r\n    aliases: [RouterTypes.switch],\r\n    visibility: TEXT_TYPES\r\n  },\r\n\r\n  {\r\n    type: Types.send_broadcast,\r\n    name: i18n.t('actions.send_broadcast.name', 'Send Broadcast'),\r\n    description: i18n.t('actions.send_broadcast.description', 'Send somebody else a message'),\r\n    form: SendBroadcastForm,\r\n    localization: KeyLocalizationForm,\r\n    localizeableKeys: ['text'],\r\n    component: SendBroadcastComp\r\n  },\r\n  {\r\n    type: Types.add_input_labels,\r\n    name: i18n.t('actions.add_input.name', 'Add Labels'),\r\n    description: i18n.t('actions.add_input.description', 'Label the incoming message'),\r\n    form: AddLabelsForm,\r\n    component: AddLabelsComp\r\n  },\r\n  {\r\n    type: Types.add_contact_urn,\r\n    name: i18n.t('actions.add_contact_urn.name', 'Add URN'),\r\n    description: i18n.t('actions.add_contact_urn.description', 'Add a URN for the contact'),\r\n    form: AddURNForm,\r\n    component: AddURNComp\r\n  },\r\n  {\r\n    type: Types.add_contact_groups,\r\n    name: i18n.t('actions.add_contact_groups.name', 'Add to Group'),\r\n    description: i18n.t('actions.add_contact_groups.description', 'Add the contact to a group'),\r\n    form: AddGroupsForm,\r\n    component: ChangeGroupsComp\r\n  },\r\n  {\r\n    type: Types.remove_contact_groups,\r\n    name: i18n.t('actions.remove_contact_groups.name', 'Remove from Group'),\r\n    description: i18n.t(\r\n      'actions.remove_contact_groups.description',\r\n      'Remove the contact from a group'\r\n    ),\r\n    form: RemoveGroupsForm,\r\n    component: ChangeGroupsComp\r\n  },\r\n  {\r\n    type: Types.set_contact_field,\r\n    aliases: [\r\n      Types.set_contact_name,\r\n      Types.set_contact_language,\r\n      Types.set_contact_channel,\r\n      Types.set_contact_status\r\n    ],\r\n    name: i18n.t('actions.set_contact_field.name', 'Update Contact'),\r\n    description: i18n.t('actions.set_contact_field.description', 'Update the contact'),\r\n    form: UpdateContactForm,\r\n    component: UpdateContactComp\r\n  },\r\n  {\r\n    type: Types.send_email,\r\n    name: i18n.t('actions.send_email.name', 'Send Email'),\r\n    description: i18n.t('actions.send_email.description', 'Send an email'),\r\n    form: SendEmailForm,\r\n    localization: KeyLocalizationForm,\r\n    localizeableKeys: ['subject', 'body'],\r\n    component: SendEmailComp,\r\n    visibility: ONLINE\r\n  },\r\n  {\r\n    type: Types.set_run_result,\r\n    name: i18n.t('actions.set_run_result.name', 'Save Flow Result'),\r\n    description: i18n.t('actions.set_run_result.description', 'Save a result for this flow'),\r\n    form: SetRunResultForm,\r\n    component: SetRunResultComp\r\n  },\r\n\r\n  {\r\n    type: Types.play_audio,\r\n    name: i18n.t('actions.play_audio.name', 'Play Recording'),\r\n    description: i18n.t('actions.play_audio.description', 'Play a contact recording'),\r\n    form: PlayAudioForm,\r\n    component: PlayAudioComp,\r\n    visibility: VOICE\r\n  },\r\n\r\n  {\r\n    type: Types.call_webhook,\r\n    name: i18n.t('actions.call_webhook.name', 'Call Webhook'),\r\n    description: i18n.t('actions.call_webhook.description', 'Call a webhook'),\r\n    form: WebhookRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    component: CallWebhookComp,\r\n    aliases: [Types.split_by_webhook],\r\n    visibility: ONLINE\r\n  },\r\n  {\r\n    type: Types.call_resthook,\r\n    name: i18n.t('actions.call_resthook.name', 'Call Zapier'),\r\n    description: i18n.t('actions.call_resthook.description', 'Call Zapier'),\r\n    form: ResthookRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    component: CallResthookComp,\r\n    aliases: [Types.split_by_resthook],\r\n    filter: FeatureFilter.HAS_RESTHOOK,\r\n    visibility: ONLINE\r\n  },\r\n  {\r\n    type: Types.enter_flow,\r\n    name: i18n.t('actions.enter_flow.name', 'Enter a Flow'),\r\n    description: i18n.t('actions.enter_flow.description', 'Enter another flow'),\r\n    form: SubflowRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    component: StartFlowComp,\r\n    aliases: [Types.split_by_subflow]\r\n  },\r\n  {\r\n    type: Types.start_session,\r\n    name: i18n.t('actions.start_session.name', 'Start Somebody Else'),\r\n    description: i18n.t('actions.start_session.description', 'Start somebody else in a flow'),\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    form: StartSessionForm,\r\n    component: StartSessionComp,\r\n    visibility: ONLINE\r\n  },\r\n  {\r\n    type: Types.open_ticket,\r\n    name: i18n.t('actions.open_ticket.name', 'Open Ticket'),\r\n    description: i18n.t('actions.open_ticket.description', 'Open a ticket with a human agent'),\r\n    form: TicketRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    component: OpenTicketComp,\r\n    aliases: [Types.split_by_ticket],\r\n    visibility: ONLINE,\r\n    filter: FeatureFilter.HAS_TICKETER\r\n  },\r\n  {\r\n    type: Types.transfer_airtime,\r\n    name: i18n.t('actions.transfer_airtime.name', 'Send Airtime'),\r\n    description: i18n.t('actions.transfer_airtime.description', 'Send the contact airtime'),\r\n    form: AirtimeRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    component: TransferAirtimeComp,\r\n    aliases: [Types.split_by_airtime],\r\n    visibility: ONLINE,\r\n    filter: FeatureFilter.HAS_AIRTIME\r\n  },\r\n\r\n  /** Routers */\r\n\r\n  {\r\n    type: Types.wait_for_image,\r\n    name: i18n.t('actions.wait_for_image.name', 'Wait for Image'),\r\n    description: i18n.t('actions.wait_for_image.description', 'Wait for an image'),\r\n    form: WaitRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    visibility: SURVEY\r\n  },\r\n  {\r\n    type: Types.wait_for_video,\r\n    name: i18n.t('actions.wait_for_video.name', 'Wait for Video'),\r\n    description: i18n.t('actions.wait_for_video.description', 'Wait for a video'),\r\n    form: WaitRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    visibility: SURVEY\r\n  },\r\n  {\r\n    type: Types.wait_for_location,\r\n    name: i18n.t('actions.wait_for_location.name', 'Wait for Location'),\r\n    description: i18n.t(\r\n      'actions.wait_for_location.description',\r\n      'Wait for location GPS coordinates'\r\n    ),\r\n    form: WaitRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    visibility: SURVEY\r\n  },\r\n  {\r\n    type: Types.split_by_intent,\r\n    name: i18n.t('actions.split_by_intent.name', 'Split by Intent'),\r\n    description: i18n.t('actions.split_by_intent.description', 'Split by intent'),\r\n    form: ClassifyRouterForm,\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    component: CallClassifierComp,\r\n    aliases: [Types.call_classifier],\r\n    visibility: ONLINE,\r\n    filter: FeatureFilter.HAS_CLASSIFIER\r\n  },\r\n  {\r\n    type: Types.split_by_expression,\r\n    name: i18n.t('actions.split_by_expression.name', 'Split by Expression'),\r\n    description: i18n.t('actions.split_by_expression.description', 'Split by a custom expression'),\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits', 'cases'],\r\n    form: ExpressionRouterForm\r\n  },\r\n  {\r\n    type: Types.split_by_contact_field,\r\n    name: i18n.t('actions.split_by_contact_field.name', 'Split by Contact Field'),\r\n    description: i18n.t('actions.split_by_contact_field.description', 'Split by a contact field'),\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits', 'cases'],\r\n    form: FieldRouterForm\r\n  },\r\n  {\r\n    type: Types.split_by_run_result,\r\n    aliases: [Types.split_by_run_result_delimited],\r\n    name: i18n.t('actions.split_by_run_result.name', 'Split by Flow Result'),\r\n    description: i18n.t('actions.split_by_run_result.description', 'Split by a result in the flow'),\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits', 'cases'],\r\n    form: ResultRouterForm\r\n  },\r\n  {\r\n    type: Types.split_by_random,\r\n    name: i18n.t('actions.split_by_random.name', 'Split Randomly'),\r\n    description: i18n.t('actions.split_by_random.description', 'Split by random chance'),\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    form: RandomRouterForm\r\n  },\r\n  {\r\n    type: Types.split_by_groups,\r\n    name: i18n.t('actions.split_by_groups.name', 'Split by Group Membership'),\r\n    description: i18n.t('actions.split_by_groups.description', 'Split by group membership'),\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    form: GroupsRouterForm\r\n  },\r\n  {\r\n    type: Types.split_by_scheme,\r\n    name: i18n.t('actions.split_by_scheme.name', 'Split by URN Type'),\r\n    description: i18n.t('actions.split_by_scheme.description', 'Split by URN type'),\r\n    localization: RouterLocalizationForm,\r\n    localizeableKeys: ['exits'],\r\n    form: SchemeRouterForm\r\n  }\r\n  // {type: 'random', name: 'Random Split', description: 'Split them up randomly', form: RandomRouterForm}\r\n];\r\n\r\nexport const configsToDisplay = dedupeTypeConfigs(typeConfigList);\r\n\r\nexport const typeConfigMap: TypeMap = typeConfigList.reduce((map: TypeMap, typeConfig: Type) => {\r\n  map[typeConfig.type] = typeConfig;\r\n  if (typeConfig.aliases) {\r\n    typeConfig.aliases.forEach((alias: string) => (map[alias] = typeConfig));\r\n  }\r\n  return map;\r\n}, {});\r\n\r\n/**\r\n * Shortcut for constant lookup of type config in type configs map\r\n * @param {string} type - The type of the type config to return, e.g. 'send_msg'\r\n * @returns {Object} - The type config found at typeConfigs[type] or -1\r\n */\r\nexport const getTypeConfig = (type: Types | RouterTypes): Type => {\r\n  let config = typeConfigMap[type];\r\n\r\n  if (!config) {\r\n    config = typeConfigMap.missing;\r\n  }\r\n  return config;\r\n};\r\n\r\nexport const getType = (renderNode: RenderNode): any => {\r\n  const wait = renderNode.node.router && renderNode.node.router.wait;\r\n  if (wait && wait.hint) {\r\n    switch (wait.hint.type) {\r\n      case HintTypes.digits:\r\n        if (wait.hint.count === 1) {\r\n          return Types.wait_for_menu;\r\n        }\r\n        return Types.wait_for_digits;\r\n      case HintTypes.audio:\r\n        return Types.wait_for_audio;\r\n      case HintTypes.image:\r\n        return Types.wait_for_image;\r\n      case HintTypes.location:\r\n        return Types.wait_for_location;\r\n      case HintTypes.video:\r\n        return Types.wait_for_video;\r\n    }\r\n  }\r\n\r\n  // if we are splitting by field, but don't know the name, force it into split by expression\r\n  if (renderNode.ui.type === Types.split_by_contact_field && !renderNode.ui.config.operand.name) {\r\n    return Types.split_by_expression;\r\n  }\r\n\r\n  return renderNode.ui.type;\r\n};\r\n\r\nexport const hasFeature = (config: FlowEditorConfig, filter: FeatureFilter) => {\r\n  return !!(config.filters || []).find((name: string) => name === filter);\r\n};\r\n","import { getActionUUID } from 'components/flow/actions/helpers';\r\nimport {\r\n  CHANNEL_PROPERTY,\r\n  LANGUAGE_PROPERTY,\r\n  NAME_PROPERTY,\r\n  STATUS_PROPERTY\r\n} from 'components/flow/props';\r\nimport { Types, ContactStatus } from 'config/interfaces';\r\nimport { getTypeConfig } from 'config/typeConfigs';\r\nimport {\r\n  Channel,\r\n  Field,\r\n  Language,\r\n  SetContactAttribute,\r\n  SetContactChannel,\r\n  SetContactField,\r\n  SetContactLanguage,\r\n  SetContactName,\r\n  SetContactStatus\r\n} from 'flowTypes';\r\nimport { Asset, AssetMap, AssetStore, AssetType, REMOVE_VALUE_ASSET } from 'store/flowContext';\r\nimport {\r\n  AssetEntry,\r\n  FormState,\r\n  NodeEditorSettings,\r\n  StringEntry,\r\n  SelectOptionEntry\r\n} from 'store/nodeEditor';\r\nimport {\r\n  CONTACT_STATUS_OPTIONS,\r\n  CONTACT_STATUS_ACTIVE\r\n} from 'components/flow/actions/updatecontact/UpdateContactForm';\r\n\r\nexport interface UpdateContactFormState extends FormState {\r\n  type: Types;\r\n  name: StringEntry;\r\n  channel: AssetEntry;\r\n  language: AssetEntry;\r\n  status: SelectOptionEntry;\r\n  field: AssetEntry;\r\n  fieldValue: StringEntry;\r\n}\r\n\r\nexport const initializeForm = (\r\n  settings: NodeEditorSettings,\r\n  assetStore: AssetStore\r\n): UpdateContactFormState => {\r\n  const state: UpdateContactFormState = {\r\n    type: Types.set_contact_name,\r\n    valid: false,\r\n    name: { value: '' },\r\n    channel: { value: null },\r\n    language: { value: null },\r\n    status: { value: CONTACT_STATUS_ACTIVE },\r\n    field: { value: NAME_PROPERTY },\r\n    fieldValue: { value: '' }\r\n  };\r\n\r\n  if (settings.originalAction) {\r\n    const originalType = settings.originalAction.type;\r\n    // these have aliases, so compare the config we resolve to\r\n    if (getTypeConfig(originalType) === getTypeConfig(Types.set_contact_field)) {\r\n      state.type = originalType;\r\n\r\n      switch (originalType) {\r\n        case Types.set_contact_field:\r\n          const fieldAction = settings.originalAction as SetContactField;\r\n          state.field = { value: fieldToAsset(fieldAction.field) };\r\n          state.fieldValue = { value: fieldAction.value };\r\n          state.valid = true;\r\n          return state;\r\n        case Types.set_contact_channel:\r\n          const channelAction = settings.originalAction as SetContactChannel;\r\n          state.field = { value: CHANNEL_PROPERTY };\r\n          state.channel = { value: channelToAsset(channelAction.channel) };\r\n          state.valid = true;\r\n          return state;\r\n        case Types.set_contact_language:\r\n          const languageAction = settings.originalAction as SetContactLanguage;\r\n          state.field = { value: LANGUAGE_PROPERTY };\r\n          state.valid = true;\r\n          state.language = {\r\n            value: languageToAsset({\r\n              iso: languageAction.language,\r\n              name: getLanguageForCode(languageAction.language, assetStore.languages.items)\r\n            })\r\n          };\r\n          return state;\r\n        case Types.set_contact_status:\r\n          const statusAction = settings.originalAction as SetContactStatus;\r\n          state.field = { value: STATUS_PROPERTY };\r\n          state.valid = true;\r\n          state.status = {\r\n            value: CONTACT_STATUS_OPTIONS.find(o => o.value === statusAction.status)\r\n          };\r\n          return state;\r\n        case Types.set_contact_name:\r\n          const nameAction = settings.originalAction as SetContactName;\r\n          state.valid = true;\r\n          state.name = {\r\n            value: nameAction.name\r\n          };\r\n          return state;\r\n      }\r\n    }\r\n  }\r\n\r\n  // default is updating name\r\n  return state;\r\n};\r\n\r\nexport const stateToAction = (\r\n  settings: NodeEditorSettings,\r\n  state: UpdateContactFormState\r\n): SetContactAttribute => {\r\n  /* istanbul ignore else */\r\n  if (state.type === Types.set_contact_field) {\r\n    return {\r\n      uuid: getActionUUID(settings, Types.set_contact_field),\r\n      type: state.type,\r\n      field: assetToField(state.field.value),\r\n      value: state.fieldValue.value\r\n    };\r\n  } else if (state.type === Types.set_contact_channel) {\r\n    return {\r\n      uuid: getActionUUID(settings, Types.set_contact_channel),\r\n      type: state.type,\r\n      channel: assetToChannel(state.channel.value)\r\n    };\r\n  } else if (state.type === Types.set_contact_language) {\r\n    return {\r\n      uuid: getActionUUID(settings, Types.set_contact_language),\r\n      type: state.type,\r\n      language: assetToLanguage(state.language.value)\r\n    };\r\n  } else if (state.type === Types.set_contact_status) {\r\n    return {\r\n      uuid: getActionUUID(settings, Types.set_contact_status),\r\n      type: state.type,\r\n      status: state.status.value.value as ContactStatus\r\n    };\r\n  } else if (state.type === Types.set_contact_name) {\r\n    return {\r\n      uuid: getActionUUID(settings, Types.set_contact_name),\r\n      type: state.type,\r\n      name: state.name.value\r\n    };\r\n  }\r\n};\r\n\r\nexport const sortFieldsAndProperties = (a: Asset, b: Asset): number => {\r\n  // Name always goes first\r\n  /* istanbul ignore else */\r\n  if (a === NAME_PROPERTY && b !== NAME_PROPERTY) {\r\n    return -1;\r\n  } else if (b === NAME_PROPERTY && a !== NAME_PROPERTY) {\r\n    return 1;\r\n  }\r\n\r\n  if (a.type === b.type) {\r\n    return a.name.localeCompare(b.name);\r\n  }\r\n\r\n  if (a.type === AssetType.Scheme) {\r\n    return 1;\r\n  }\r\n\r\n  // go with alpha-sort for everthing else\r\n  else if (a.type !== b.type) {\r\n    if (a.type === AssetType.ContactProperty) {\r\n      return -1;\r\n    }\r\n\r\n    if (b.type === AssetType.ContactProperty) {\r\n      return 1;\r\n    }\r\n  }\r\n  // non-name non-fields go last\r\n  return a.name.localeCompare(b.name);\r\n};\r\n\r\nexport const fieldToAsset = (field: Field = { key: '', name: '' }): Asset => ({\r\n  id: field.key,\r\n  name: field.name,\r\n  type: AssetType.Field\r\n});\r\n\r\nexport const assetToField = (asset: Asset): Field => ({\r\n  key: asset.id,\r\n  name: asset.name\r\n});\r\n\r\nexport const assetToChannel = (asset: Asset): any => {\r\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\r\n    return {};\r\n  }\r\n\r\n  return {\r\n    uuid: asset.id,\r\n    name: asset.name\r\n  };\r\n};\r\n\r\nexport const assetToLanguage = (asset: Asset): string => {\r\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\r\n    return '';\r\n  }\r\n  return asset.id;\r\n};\r\n\r\nexport const languageToAsset = ({ iso, name }: Language) => {\r\n  if (!iso || iso.length === 0) {\r\n    return REMOVE_VALUE_ASSET;\r\n  }\r\n\r\n  return {\r\n    id: iso,\r\n    name,\r\n    type: AssetType.Language\r\n  };\r\n};\r\n\r\nexport const channelToAsset = ({ uuid, name }: Channel) => {\r\n  if (!uuid) {\r\n    return REMOVE_VALUE_ASSET;\r\n  }\r\n  return {\r\n    id: uuid,\r\n    name,\r\n    type: AssetType.Language\r\n  };\r\n};\r\n\r\nexport const getLanguageForCode = (code: string, languages: AssetMap) => {\r\n  let lang = code;\r\n  if (languages && lang in languages) {\r\n    lang = languages[lang].name;\r\n  }\r\n  return lang;\r\n};\r\n","import { FlowPosition } from 'flowTypes';\r\nimport ActionTypes, { UpdateEditorState } from 'store/actionTypes';\r\nimport Constants from 'store/constants';\r\nimport { Asset, RenderNode, CompletionOption } from 'store/flowContext';\r\nimport { CompletionSchema } from 'utils/completion';\r\n\r\n// tslint:disable:no-shadowed-variable\r\nexport interface DragSelection {\r\n  startX?: number;\r\n  startY?: number;\r\n  currentX?: number;\r\n  currentY?: number;\r\n}\r\n\r\nexport interface DebugState {\r\n  showUUIDs: boolean;\r\n}\r\n\r\nexport interface CanvasPositions {\r\n  [uuid: string]: FlowPosition;\r\n}\r\n\r\nexport interface Activity {\r\n  nodes: { [uuid: string]: number };\r\n  segments: { [exitToNodeKey: string]: number };\r\n  recentMessages?: { [key: string]: RecentMessage[] };\r\n  is_starting?: boolean;\r\n}\r\n\r\nexport interface RecentMessage {\r\n  sent: string;\r\n  text: string;\r\n}\r\n\r\nexport interface Warning {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport type Warnings = { [uuid: string]: Warning };\r\n\r\nexport interface EditorState {\r\n  currentRevision: number | null;\r\n  simulating: boolean;\r\n  language: Asset | null;\r\n  translating: boolean;\r\n  fetchingFlow: boolean;\r\n  ghostNode: RenderNode | null;\r\n  dragActive: boolean;\r\n  dragStartTime: number;\r\n  dragDownPosition: FlowPosition | null;\r\n  dragNodeUUID: string | null;\r\n  dragGroup: boolean;\r\n  dragSelection: DragSelection | null;\r\n  debug?: DebugState | null;\r\n\r\n  // which poptab is popped\r\n  popped: string;\r\n\r\n  warnings: Warnings;\r\n\r\n  modalMessage?: ModalMessage;\r\n  saving?: boolean;\r\n\r\n  // our schema for peform dot completion\r\n  completionSchema: CompletionSchema;\r\n\r\n  // our function list for completion\r\n  functions: CompletionOption[];\r\n\r\n  // the currently shown activity, can be\r\n  // simulation or live\r\n  activity: Activity;\r\n\r\n  // the current live activity\r\n  liveActivity: Activity;\r\n\r\n  // interval in millis we should refresh activity\r\n  activityInterval: number;\r\n\r\n  // is our page visible or tabbed away\r\n  visible: boolean;\r\n\r\n  scrollToNode: string;\r\n  scrollToAction: string;\r\n}\r\n\r\nexport interface ModalMessage {\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nexport const EMPTY_DRAG_STATE: any = {\r\n  dragStartTime: 0,\r\n  dragDownPosition: null,\r\n  dragActive: false,\r\n  dragNodeUUID: null,\r\n  dragGroup: false,\r\n  dragSelection: null\r\n};\r\n\r\n// Initial state\r\nexport const initialState: EditorState = {\r\n  completionSchema: { types: [], root: [] },\r\n  functions: [],\r\n  currentRevision: null,\r\n  simulating: false,\r\n  translating: false,\r\n  language: null,\r\n  fetchingFlow: false,\r\n  dragStartTime: 0,\r\n  dragDownPosition: null,\r\n  dragActive: false,\r\n  dragNodeUUID: null,\r\n  dragGroup: false,\r\n  dragSelection: null,\r\n  ghostNode: null,\r\n  debug: null,\r\n  warnings: {},\r\n\r\n  popped: null,\r\n\r\n  activity: { segments: {}, nodes: {} },\r\n  liveActivity: { segments: {}, nodes: {} },\r\n  activityInterval: 5000,\r\n  visible: true,\r\n\r\n  scrollToNode: null,\r\n  scrollToAction: null\r\n};\r\n\r\n// Action Creator\r\nexport const updateEditorState = (editorState: EditorState): UpdateEditorState => ({\r\n  type: Constants.UPDATE_EDITOR_STATE,\r\n  payload: {\r\n    editorState\r\n  }\r\n});\r\n\r\n/* Reducer */\r\nexport const editorState = (editorState: EditorState = initialState, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_EDITOR_STATE:\r\n      return action.payload!.editorState;\r\n    default:\r\n      return editorState;\r\n  }\r\n};\r\n\r\n// export our reducer\r\nexport default editorState;\r\n","import { determineTypeConfig } from 'components/flow/helpers';\r\nimport { getResultName } from 'components/flow/node/helpers';\r\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\r\nimport { SaveResult } from 'components/revisions/RevisionExplorer';\r\nimport { FlowTypes, Type, Types } from 'config/interfaces';\r\nimport { getTypeConfig } from 'config/typeConfigs';\r\nimport {\r\n  createAssetStore,\r\n  getCompletionSchema,\r\n  getFlowDetails,\r\n  saveRevision,\r\n  getFunctions\r\n} from 'external';\r\nimport isEqual from 'fast-deep-equal';\r\nimport {\r\n  Action,\r\n  AnyAction,\r\n  Category,\r\n  Dimensions,\r\n  Endpoints,\r\n  Exit,\r\n  FlowDefinition,\r\n  FlowNode,\r\n  SendMsg,\r\n  SetContactField,\r\n  SetRunResult,\r\n  StickyNote,\r\n  FlowDetails\r\n} from 'flowTypes';\r\nimport mutate from 'immutability-helper';\r\nimport { Dispatch } from 'redux';\r\nimport { CanvasPositions, EditorState, EMPTY_DRAG_STATE, updateEditorState } from 'store/editor';\r\nimport {\r\n  Asset,\r\n  AssetStore,\r\n  DEFAULT_LANGUAGE,\r\n  RenderNode,\r\n  RenderNodeMap,\r\n  updateAssets,\r\n  updateBaseLanguage,\r\n  updateContactFields,\r\n  updateDefinition,\r\n  updateNodes,\r\n  updateMetadata,\r\n  updateIssues\r\n} from 'store/flowContext';\r\nimport {\r\n  createEmptyNode,\r\n  fetchFlowActivity,\r\n  getActionIndex,\r\n  getCurrentDefinition,\r\n  getFlowComponents,\r\n  getLocalizations,\r\n  getNode,\r\n  guessNodeType,\r\n  mergeAssetMaps,\r\n  createFlowIssueMap\r\n} from 'store/helpers';\r\nimport * as mutators from 'store/mutators';\r\nimport {\r\n  NodeEditorSettings,\r\n  updateNodeEditorSettings,\r\n  updateTypeConfig,\r\n  updateUserAddingAction\r\n} from 'store/nodeEditor';\r\nimport AppState from 'store/state';\r\nimport { createUUID, hasString, NODE_SPACING, timeEnd, timeStart, ACTIVITY_INTERVAL } from 'utils';\r\nimport { AxiosError } from 'axios';\r\nimport i18n from 'config/i18n';\r\n\r\n// TODO: Remove use of Function\r\n// tslint:disable:ban-types\r\nexport type DispatchWithState = Dispatch<AppState>;\r\n\r\nexport type GetState = () => AppState;\r\n\r\nexport type Thunk<T> = (dispatch: Dispatch<AppState>, getState?: GetState) => T;\r\n\r\nexport type AsyncThunk = Thunk<Promise<void>>;\r\n\r\nexport type OnAddToNode = (node: FlowNode) => Thunk<void>;\r\n\r\nexport type HandleTypeConfigChange = (typeConfig: Type) => Thunk<void>;\r\n\r\nexport type UpdateTranslationFilters = (translationFilters: {\r\n  categories: boolean;\r\n  rules: boolean;\r\n}) => Thunk<void>;\r\n\r\nexport type OnOpenNodeEditor = (settings: NodeEditorSettings) => Thunk<void>;\r\n\r\nexport type OnUpdateCanvasPositions = (positions: CanvasPositions) => Thunk<RenderNodeMap>;\r\n\r\nexport type OnRemoveNodes = (nodeUUIDs: string[]) => Thunk<RenderNodeMap>;\r\n\r\nexport type AddAsset = (assetType: string, asset: Asset) => Thunk<void>;\r\n\r\nexport type RemoveNode = (nodeToRemove: FlowNode) => Thunk<RenderNodeMap>;\r\n\r\nexport type UpdateDimensions = (uuid: string, dimensions: Dimensions) => Thunk<void>;\r\n\r\nexport type FetchFlow = (\r\n  endpoints: Endpoints,\r\n  uuid: string,\r\n  forceSave: boolean\r\n) => Thunk<Promise<void>>;\r\n\r\nexport type LoadFlowDefinition = (details: FlowDetails, assetStore: AssetStore) => Thunk<void>;\r\n\r\nexport type CreateNewRevision = () => Thunk<void>;\r\n\r\nexport type NoParamsAC = () => Thunk<void>;\r\n\r\nexport type UpdateConnection = (source: string, target: string) => Thunk<RenderNodeMap>;\r\n\r\nexport type OnConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => Thunk<void>;\r\n\r\nexport type OnUpdateLocalizations = (\r\n  language: string,\r\n  changes: LocalizationUpdates\r\n) => Thunk<FlowDefinition>;\r\n\r\nexport type UpdateSticky = (stickyUUID: string, sticky: StickyNote) => Thunk<void>;\r\n\r\nexport type OnUpdateAction = (\r\n  action: AnyAction,\r\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\r\n) => Thunk<RenderNodeMap>;\r\n\r\nexport type ActionAC = (nodeUUID: string, action: AnyAction) => Thunk<RenderNodeMap>;\r\n\r\nexport type DisconnectExit = (nodeUUID: string, exitUUID: string) => Thunk<RenderNodeMap>;\r\n\r\nexport type HandleLanguageChange = (language: Asset) => Thunk<void>;\r\n\r\nexport type MergeEditorState = (state: Partial<EditorState>) => Thunk<EditorState>;\r\n\r\nexport interface ReplaceAction {\r\n  nodeUUID: string;\r\n  actionUUID: string;\r\n}\r\n\r\nexport type OnUpdateRouter = (node: RenderNode) => Thunk<RenderNodeMap>;\r\n\r\nexport interface Connection {\r\n  previousConnection: Connection;\r\n}\r\n\r\nexport interface ConnectionEvent {\r\n  connection: Connection;\r\n  source: Element;\r\n  target: Element;\r\n  sourceId: string;\r\n  targetId: string;\r\n  suspendedElementId: string;\r\n  endpoints: any[];\r\n}\r\n\r\nexport interface ErrorMessage {\r\n  status: string;\r\n  description: string;\r\n}\r\n\r\nexport type LocalizationUpdates = Array<{ uuid: string; translations?: any }>;\r\nconst QUIET_SAVE = 1000;\r\nconst SAVE_ALERT_MILLIS = 1000 * 60;\r\n\r\nlet markDirty: (quiet?: number) => void = () => {};\r\nlet lastDirtyAttemptTimeout: any = null;\r\nlet postingRevision = false;\r\n\r\nlet lastDirtyMillis: number = 0;\r\nlet lastSuccessfulMillis: number = 0;\r\n\r\nconst NETWORK_ERROR = i18n.t(\r\n  'errors.network',\r\n  'Hmm, we ran into a problem trying to save your changes. It could just be that your internet connection is not working well at the moment. Please wait a minute or so and try again.'\r\n);\r\n\r\nexport const createSaveMonitor = (dispatch: DispatchWithState) => {\r\n  window.setInterval(() => {\r\n    if (\r\n      lastSuccessfulMillis < lastDirtyMillis &&\r\n      new Date().getTime() - lastDirtyMillis > SAVE_ALERT_MILLIS\r\n    ) {\r\n      dispatch(\r\n        mergeEditorState({\r\n          modalMessage: {\r\n            title: \"Uh oh, we couldn't save your changes\",\r\n            body: NETWORK_ERROR\r\n          },\r\n          saving: false\r\n        })\r\n      );\r\n    }\r\n  }, 5000);\r\n};\r\n\r\nexport const createDirty = (\r\n  revisionsEndpoint: string,\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n) => (quiet: number = QUIET_SAVE) => {\r\n  lastDirtyMillis = new Date().getTime();\r\n\r\n  if (lastDirtyAttemptTimeout) {\r\n    window.clearTimeout(lastDirtyAttemptTimeout);\r\n  }\r\n\r\n  const {\r\n    flowContext: { definition, nodes, assetStore, issues },\r\n    editorState: { currentRevision }\r\n  } = getState();\r\n\r\n  dispatch(mergeEditorState({ saving: true }));\r\n\r\n  // make sure we have the most current revision number we know about\r\n  const newDefinition = getCurrentDefinition(definition, nodes, true);\r\n  newDefinition.revision = currentRevision;\r\n\r\n  if (postingRevision) {\r\n    lastDirtyAttemptTimeout = window.setTimeout(() => {\r\n      markDirty();\r\n    }, QUIET_SAVE);\r\n    return;\r\n  }\r\n\r\n  lastDirtyAttemptTimeout = window.setTimeout(() => {\r\n    postingRevision = true;\r\n    saveRevision(revisionsEndpoint, newDefinition).then(\r\n      (result: SaveResult) => {\r\n        const revision = result.revision;\r\n        definition.revision = revision.revision;\r\n        dispatch(updateDefinition(definition));\r\n\r\n        if (result.metadata) {\r\n          dispatch(updateMetadata(result.metadata));\r\n          dispatch(updateIssues(createFlowIssueMap(issues, result.metadata.issues)));\r\n        }\r\n\r\n        const updatedAssets = mutators.addRevision(assetStore, revision);\r\n        dispatch(updateAssets(updatedAssets));\r\n        dispatch(\r\n          mergeEditorState({\r\n            currentRevision: revision.revision,\r\n            saving: false,\r\n            activityInterval: ACTIVITY_INTERVAL\r\n          })\r\n        );\r\n\r\n        lastSuccessfulMillis = new Date().getTime();\r\n        postingRevision = false;\r\n      },\r\n      (error: AxiosError) => {\r\n        const errorMessage = error.response\r\n          ? (error.response.data as ErrorMessage).description\r\n          : NETWORK_ERROR;\r\n\r\n        const body = errorMessage;\r\n        dispatch(\r\n          mergeEditorState({\r\n            modalMessage: {\r\n              title: \"Uh oh, we couldn't save your changes\",\r\n              body\r\n            },\r\n            saving: false\r\n          })\r\n        );\r\n        postingRevision = false;\r\n      }\r\n    );\r\n  }, quiet);\r\n};\r\n\r\nexport const mergeEditorState = (changes: Partial<EditorState>) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): EditorState => {\r\n  const { editorState } = getState();\r\n  const updated = mutate(editorState, { $merge: changes });\r\n  dispatch(updateEditorState(updated));\r\n  return updated;\r\n};\r\n\r\nexport const createNewRevision = () => (dispatch: DispatchWithState, getState: GetState): void => {\r\n  // mark us dirty with no quiet period\r\n  markDirty(0);\r\n};\r\n\r\nexport const loadFlowDefinition = (details: FlowDetails, assetStore: AssetStore) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): void => {\r\n  // first see if we need our asset store initialized\r\n\r\n  const definition = details.definition;\r\n\r\n  const {\r\n    flowContext: { issues },\r\n    editorState: { fetchingFlow }\r\n  } = getState();\r\n\r\n  if (!fetchingFlow) {\r\n    // mark us as underway\r\n    dispatch(mergeEditorState({ fetchingFlow: true }));\r\n  }\r\n\r\n  // while we don't officially support doing it, lets make a best effort to load\r\n  // definitions that don't have _ui information (created outside of the editor)\r\n  definition.localization = definition.localization || {};\r\n  definition._ui = definition._ui || { nodes: {}, languages: [], stickies: {} };\r\n\r\n  // make sure we have a ui entry for each node\r\n  let currentTop = 0;\r\n  for (const node of definition.nodes) {\r\n    if (!definition._ui.nodes[node.uuid]) {\r\n      definition._ui.nodes[node.uuid] = {\r\n        position: { left: 0, top: currentTop },\r\n        type: guessNodeType(node)\r\n      };\r\n      currentTop += 150;\r\n    }\r\n  }\r\n\r\n  // add assets we found in our flow to our asset store\r\n  const components = getFlowComponents(definition);\r\n  mergeAssetMaps(assetStore.fields.items, components.fields);\r\n  mergeAssetMaps(assetStore.groups.items, components.groups);\r\n  mergeAssetMaps(assetStore.labels.items, components.labels);\r\n  mergeAssetMaps(assetStore.results.items, components.results);\r\n\r\n  // initialize our language\r\n  let language: Asset;\r\n  if (definition.language) {\r\n    language = assetStore.languages.items[definition.language];\r\n  }\r\n\r\n  if (!language) {\r\n    language = DEFAULT_LANGUAGE;\r\n    dispatch(mergeEditorState({ language: DEFAULT_LANGUAGE }));\r\n    mergeAssetMaps(assetStore.languages.items, { base: DEFAULT_LANGUAGE });\r\n  }\r\n\r\n  if (details.metadata && details.metadata.issues) {\r\n    dispatch(updateIssues(createFlowIssueMap(issues, details.metadata.issues)));\r\n  } else {\r\n    dispatch(updateIssues({}));\r\n  }\r\n\r\n  dispatch(updateBaseLanguage(language));\r\n  dispatch(updateMetadata(details.metadata));\r\n\r\n  // store our flow definition without any nodes\r\n  dispatch(updateDefinition(mutators.pruneDefinition(definition)));\r\n  dispatch(updateNodes(components.renderNodeMap));\r\n\r\n  // finally update our assets, and mark us as fetched\r\n  dispatch(updateAssets(assetStore));\r\n  dispatch(mergeEditorState({ language, fetchingFlow: false }));\r\n};\r\n\r\n/**\r\n * Fetches a flow. Fetches all assets as well if the haven't been initialized yet\r\n * @param endpoints where our assets live\r\n * @param uuid the uuid for the flow to fetch\r\n */\r\nexport const fetchFlow = (endpoints: Endpoints, uuid: string, forceSave = false) => async (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n) => {\r\n  // mark us as underway\r\n  dispatch(mergeEditorState({ fetchingFlow: true }));\r\n\r\n  // first see if we need our asset store initialized\r\n  let {\r\n    flowContext: { assetStore }\r\n  } = getState();\r\n\r\n  if (!Object.keys(assetStore).length) {\r\n    assetStore = await createAssetStore(endpoints);\r\n  }\r\n\r\n  fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\r\n  (window as any).triggerActivityUpdate = () => {\r\n    fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\r\n  };\r\n\r\n  const completionSchema = await getCompletionSchema(endpoints.completion);\r\n  const functions = await getFunctions(endpoints.functions);\r\n\r\n  getFlowDetails(assetStore.revisions)\r\n    .then((response: any) => {\r\n      // backwards compatibitly for during deployment\r\n      const details: FlowDetails = response.definition\r\n        ? response\r\n        : { definition: response as FlowDefinition, metadata: { issues: [] } };\r\n\r\n      dispatch(loadFlowDefinition(details, assetStore));\r\n      dispatch(\r\n        mergeEditorState({\r\n          currentRevision: details.definition.revision,\r\n          completionSchema,\r\n          functions\r\n        })\r\n      );\r\n\r\n      markDirty = createDirty(assetStore.revisions.endpoint, dispatch, getState);\r\n      if (forceSave) {\r\n        markDirty(0);\r\n      }\r\n\r\n      createSaveMonitor(dispatch);\r\n    })\r\n    .catch(error => {\r\n      // not much we can do without our flow definition\r\n      // log it to the console, this should really only happen if\r\n      // misconfigured or the endpoint is unavailable\r\n      console.error(error);\r\n    });\r\n};\r\n\r\nexport const addAsset: AddAsset = (assetType: string, asset: Asset) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): void => {\r\n  const {\r\n    flowContext: { assetStore }\r\n  } = getState();\r\n\r\n  const updated = mutate(assetStore, {\r\n    [assetType]: { items: { $merge: { [asset.id]: asset } } }\r\n  });\r\n\r\n  dispatch(updateAssets(updated));\r\n};\r\n\r\nexport const handleLanguageChange: HandleLanguageChange = language => (dispatch, getState) => {\r\n  const {\r\n    flowContext: { baseLanguage },\r\n    editorState: { translating, language: currentLanguage }\r\n  } = getState();\r\n\r\n  // determine translating state\r\n  if (!isEqual(language, baseLanguage)) {\r\n    if (!translating) {\r\n      dispatch(mergeEditorState({ translating: true }));\r\n    }\r\n  } else {\r\n    dispatch(mergeEditorState({ translating: false }));\r\n  }\r\n\r\n  // update language\r\n  if (!isEqual(language, currentLanguage)) {\r\n    dispatch(mergeEditorState({ language }));\r\n  }\r\n};\r\n\r\nexport const onUpdateLocalizations = (language: string, changes: LocalizationUpdates) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): FlowDefinition => {\r\n  const {\r\n    flowContext: { definition }\r\n  } = getState();\r\n  const updated = mutators.updateLocalization(definition, language, changes);\r\n  dispatch(updateDefinition(updated));\r\n\r\n  markDirty();\r\n  return updated;\r\n};\r\n\r\nexport const updateExitDestination = (nodeUUID: string, exitUUID: string, destination: string) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): RenderNodeMap => {\r\n  const {\r\n    flowContext: { nodes }\r\n  } = getState();\r\n  const updated = mutators.updateConnection(nodes, nodeUUID, exitUUID, destination);\r\n  dispatch(updateNodes(updated));\r\n  markDirty();\r\n  return updated;\r\n};\r\n\r\nexport const disconnectExit = (nodeUUID: string, exitUUID: string) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): RenderNodeMap => dispatch(updateExitDestination(nodeUUID, exitUUID, null));\r\n\r\nexport const updateConnection = (source: string, target: string) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): RenderNodeMap => {\r\n  const [nodeUUID, exitUUID] = source.split(':');\r\n  return dispatch(updateExitDestination(nodeUUID, exitUUID, target));\r\n};\r\n\r\nexport const removeNode = (node: FlowNode) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): RenderNodeMap => {\r\n  // Remove result name if node has one\r\n  const {\r\n    flowContext: { nodes, assetStore }\r\n  } = getState();\r\n\r\n  // update asset store to remove results that no longer exist\r\n  if (node.router && node.router.result_name) {\r\n    const updatedAssets = mutators.removeResultFromStore(node.router.result_name, assetStore, {\r\n      nodeUUID: node.uuid\r\n    });\r\n    dispatch(updateAssets(updatedAssets));\r\n  }\r\n\r\n  const updated = mutators.removeNode(nodes, node.uuid);\r\n  dispatch(updateNodes(updated));\r\n  markDirty();\r\n  return updated;\r\n};\r\n\r\nexport const removeAction = (nodeUUID: string, action: AnyAction) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): RenderNodeMap => {\r\n  const {\r\n    flowContext: { nodes, assetStore }\r\n  } = getState();\r\n  const renderNode = nodes[nodeUUID];\r\n\r\n  // update asset store to remove results that no longer exist\r\n  if (action.type === Types.set_run_result) {\r\n    const resultAction = action as SetRunResult;\r\n    const updatedAssets = mutators.removeResultFromStore(resultAction.name, assetStore, {\r\n      nodeUUID,\r\n      actionUUID: action.uuid\r\n    });\r\n    dispatch(updateAssets(updatedAssets));\r\n  }\r\n\r\n  // If it's our last action, then nuke the node\r\n  if (renderNode.node.actions.length === 1) {\r\n    const updated = dispatch(removeNode(renderNode.node));\r\n    markDirty();\r\n    return updated;\r\n  } else {\r\n    // Otherwise, just remove that action\r\n    const updated = mutators.removeAction(nodes, nodeUUID, action.uuid);\r\n    dispatch(updateNodes(updated));\r\n    markDirty();\r\n    return updated;\r\n  }\r\n};\r\n\r\nexport const moveActionUp = (nodeUUID: string, action: AnyAction) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): RenderNodeMap => {\r\n  const {\r\n    flowContext: { nodes }\r\n  } = getState();\r\n  const updated = mutators.moveActionUp(nodes, nodeUUID, action.uuid);\r\n  dispatch(updateNodes(updated));\r\n  markDirty();\r\n  return updated;\r\n};\r\n\r\n/**\r\n * Splices a router into a list of actions creating up to three nodes where there\r\n * was once one node.\r\n * @param nodeUUID the node to replace\r\n * @param node the new node being added (shares the previous node uuid)\r\n * @param type the type of the new router\r\n * @param previousAction the previous action that is being replaced with our router\r\n * @returns a list of RenderNodes that were created\r\n */\r\nexport const spliceInRouter = (\r\n  newRouterNode: RenderNode,\r\n  previousAction: { nodeUUID: string; actionUUID: string }\r\n) => (dispatch: DispatchWithState, getState: GetState): RenderNodeMap => {\r\n  const {\r\n    flowContext: { nodes }\r\n  } = getState();\r\n  const previousNode = nodes[previousAction.nodeUUID];\r\n\r\n  // remove our old node, we'll make new ones\r\n  let updatedNodes = nodes;\r\n  updatedNodes = mutators.removeNode(updatedNodes, previousNode.node.uuid, false);\r\n\r\n  newRouterNode.node = mutators.uniquifyNode(newRouterNode.node);\r\n\r\n  const actionIdx = getActionIndex(previousNode.node, previousAction.actionUUID);\r\n\r\n  // we need to splice a wait node where our previousAction was\r\n  const topActions: Action[] =\r\n    actionIdx > 0 ? [...previousNode.node.actions.slice(0, actionIdx)] : [];\r\n  const bottomActions: Action[] = previousNode.node.actions.slice(\r\n    actionIdx + 1,\r\n    previousNode.node.actions.length\r\n  );\r\n\r\n  // tslint:disable-next-line:prefer-const\r\n  let { left, top } = previousNode.ui.position;\r\n\r\n  let topNode: RenderNode;\r\n  let bottomNode: RenderNode;\r\n\r\n  // add our top node if we have one\r\n  if (topActions.length > 0) {\r\n    topNode = {\r\n      node: {\r\n        uuid: createUUID(),\r\n        actions: topActions,\r\n        exits: [\r\n          {\r\n            uuid: createUUID(),\r\n            destination_uuid: null\r\n          }\r\n        ]\r\n      },\r\n      ui: { position: { left, top } },\r\n      inboundConnections: { ...previousNode.inboundConnections }\r\n    };\r\n\r\n    updatedNodes = mutators.mergeNode(updatedNodes, topNode);\r\n    top += NODE_SPACING;\r\n\r\n    // update our routerNode for the presence of a top node\r\n    newRouterNode.inboundConnections = {\r\n      [topNode.node.exits[0].uuid]: topNode.node.uuid\r\n    };\r\n    newRouterNode.ui.position.top += NODE_SPACING;\r\n  } else {\r\n    newRouterNode.inboundConnections = { ...previousNode.inboundConnections };\r\n  }\r\n\r\n  // now add our routerNode\r\n  updatedNodes = mutators.mergeNode(updatedNodes, newRouterNode);\r\n\r\n  // add our bottom\r\n  if (bottomActions.length > 0) {\r\n    bottomNode = {\r\n      node: {\r\n        uuid: createUUID(),\r\n        actions: bottomActions,\r\n        exits: [\r\n          {\r\n            uuid: createUUID(),\r\n            destination_uuid: previousNode.node.exits[0].destination_uuid\r\n          }\r\n        ]\r\n      },\r\n      ui: {\r\n        position: { left, top }\r\n      },\r\n      inboundConnections: {\r\n        [newRouterNode.node.exits[0].uuid]: newRouterNode.node.uuid\r\n      }\r\n    };\r\n    updatedNodes = mutators.mergeNode(updatedNodes, bottomNode);\r\n  } else {\r\n    // if we don't have a bottom, route our routerNode to the previous destination\r\n    updatedNodes = mutators.updateConnection(\r\n      updatedNodes,\r\n      newRouterNode.node.uuid,\r\n      newRouterNode.node.exits[0].uuid,\r\n      previousNode.node.exits[0].destination_uuid\r\n    );\r\n  }\r\n\r\n  dispatch(updateNodes(updatedNodes));\r\n\r\n  markDirty();\r\n  return updatedNodes;\r\n};\r\n\r\nexport const handleTypeConfigChange = (typeConfig: Type) => (dispatch: DispatchWithState) => {\r\n  // TODO: Generate suggested result name if user is changing to a `wait_for_response` router.\r\n  dispatch(updateTypeConfig(typeConfig));\r\n};\r\n\r\nexport const resetNodeEditingState = () => (dispatch: DispatchWithState, getState: GetState) => {\r\n  dispatch(mergeEditorState({ ghostNode: null }));\r\n  dispatch(updateNodeEditorSettings(null));\r\n};\r\n\r\nexport const onUpdateAction = (\r\n  action: AnyAction,\r\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\r\n) => (dispatch: DispatchWithState, getState: GetState) => {\r\n  timeStart('onUpdateAction');\r\n\r\n  const {\r\n    nodeEditor: { userAddingAction, settings },\r\n    flowContext: { nodes, contactFields, assetStore }\r\n  } = getState();\r\n\r\n  if (settings == null || settings.originalNode == null) {\r\n    throw new Error('Need originalNode in settings to update an action');\r\n  }\r\n  const { originalNode, originalAction } = settings;\r\n\r\n  let updatedAssets = assetStore;\r\n\r\n  // remove our result reference\r\n  if (originalAction && originalAction.type === Types.set_run_result) {\r\n    const { name: resultName } = originalAction as SetRunResult;\r\n    updatedAssets = mutators.removeResultFromStore(resultName, updatedAssets, {\r\n      nodeUUID: originalNode.node.uuid,\r\n      actionUUID: action.uuid\r\n    });\r\n  }\r\n\r\n  let updatedNodes = nodes;\r\n  const creatingNewNode = !!(originalNode !== null && originalNode.ghost);\r\n\r\n  let nodeUUID: string = null;\r\n\r\n  if (creatingNewNode) {\r\n    const newNode: RenderNode = {\r\n      node: {\r\n        uuid: createUUID(),\r\n        actions: [action],\r\n        exits: [{ uuid: createUUID(), destination_uuid: null }]\r\n      },\r\n      ui: { position: originalNode.ui.position, type: Types.execute_actions },\r\n      inboundConnections: originalNode.inboundConnections\r\n    };\r\n    updatedNodes = mutators.mergeNode(nodes, newNode);\r\n\r\n    nodeUUID = newNode.node.uuid;\r\n  } else {\r\n    nodeUUID = originalNode.node.uuid;\r\n\r\n    if (userAddingAction) {\r\n      updatedNodes = mutators.addAction(nodes, originalNode.node.uuid, action);\r\n    } else if (originalNode.node.hasOwnProperty('router')) {\r\n      updatedNodes = mutators.spliceInAction(nodes, originalNode.node.uuid, action);\r\n    } else {\r\n      updatedNodes = mutators.updateAction(nodes, originalNode.node.uuid, action, originalAction);\r\n    }\r\n  }\r\n\r\n  dispatch(updateNodes(updatedNodes));\r\n  dispatch(updateUserAddingAction(false));\r\n\r\n  // Add result to store.\r\n  if (action.type === Types.set_run_result) {\r\n    const { name: resultName } = action as SetRunResult;\r\n    updatedAssets = mutators.addResultToStore(resultName, updatedAssets, {\r\n      nodeUUID,\r\n      actionUUID: action.uuid\r\n    });\r\n    dispatch(updateAssets(updatedAssets));\r\n  }\r\n\r\n  // Add contact field to our store.\r\n  if (action.type === Types.set_contact_field) {\r\n    const { field } = action as SetContactField;\r\n    dispatch(updateContactFields({ ...contactFields, [field.key]: field.name }));\r\n  }\r\n\r\n  markDirty(0);\r\n\r\n  timeEnd('onUpdateAction');\r\n\r\n  if (onUpdated) {\r\n    onUpdated(dispatch, getState);\r\n  }\r\n  return updatedNodes;\r\n};\r\n\r\n/**\r\n * Opens the NodeEditor in the state for adding to a provided node\r\n * @param node the node to add to\r\n */\r\nexport const onAddToNode = (node: FlowNode) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n) => {\r\n  const {\r\n    flowContext: { nodes }\r\n  } = getState();\r\n\r\n  // TODO: remove the need for this once we all have formHelpers\r\n  const newAction: SendMsg = {\r\n    uuid: createUUID(),\r\n    type: Types.send_msg,\r\n    text: ''\r\n  };\r\n\r\n  dispatch(\r\n    updateNodeEditorSettings({\r\n      originalNode: getNode(nodes, node.uuid),\r\n      originalAction: newAction,\r\n      showAdvanced: false\r\n    })\r\n  );\r\n\r\n  markDirty();\r\n  dispatch(updateUserAddingAction(true));\r\n  dispatch(handleTypeConfigChange(getTypeConfig(Types.send_msg)));\r\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\r\n};\r\n\r\nexport const onRemoveNodes = (uuids: string[]) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): RenderNodeMap => {\r\n  const {\r\n    flowContext: { nodes, definition }\r\n  } = getState();\r\n\r\n  let updatedNodes = nodes;\r\n  let updatedDefinition = definition;\r\n  let didNodes = false;\r\n  let didDef = false;\r\n\r\n  uuids.forEach((uuid: string) => {\r\n    if (uuid in updatedNodes) {\r\n      updatedNodes = mutators.removeNode(updatedNodes, uuid, true);\r\n      didNodes = true;\r\n    } else if (uuid in updatedDefinition._ui.stickies) {\r\n      updatedDefinition = mutators.updateStickyNote(updatedDefinition, uuid, null);\r\n      didDef = true;\r\n    }\r\n  });\r\n\r\n  if (didNodes) {\r\n    dispatch(updateNodes(updatedNodes));\r\n  }\r\n\r\n  if (didDef) {\r\n    dispatch(updateDefinition(updatedDefinition));\r\n  }\r\n\r\n  if (didDef || didNodes) {\r\n    markDirty();\r\n  }\r\n\r\n  return nodes;\r\n};\r\n\r\nexport const onUpdateCanvasPositions = (positions: CanvasPositions) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): RenderNodeMap => {\r\n  const {\r\n    flowContext: { nodes, definition }\r\n  } = getState();\r\n\r\n  let updatedDefinition = definition;\r\n  let updatedNodes = nodes;\r\n\r\n  let updatedNodePosition = false;\r\n  let updatedStickyPosition = false;\r\n\r\n  for (const uuid in positions) {\r\n    if (updatedNodes[uuid]) {\r\n      updatedNodes = mutators.updatePosition(updatedNodes, uuid, positions[uuid]);\r\n      updatedNodePosition = true;\r\n    } else if (updatedDefinition._ui.stickies[uuid]) {\r\n      updatedDefinition = mutators.updateStickyNotePosition(\r\n        updatedDefinition,\r\n        uuid,\r\n        positions[uuid]\r\n      );\r\n      updatedStickyPosition = true;\r\n    }\r\n  }\r\n\r\n  let updated = false;\r\n\r\n  if (updatedNodePosition) {\r\n    updated = true;\r\n    dispatch(updateNodes(updatedNodes));\r\n  }\r\n\r\n  if (updatedStickyPosition) {\r\n    updated = true;\r\n    dispatch(updateDefinition(updatedDefinition));\r\n  }\r\n\r\n  if (updated) {\r\n    markDirty();\r\n  }\r\n\r\n  return updatedNodes;\r\n};\r\n\r\n/**\r\n * Called when a connection begins to be dragged from an endpoint both\r\n * when a new connection is desired or when an existing one is being moved.\r\n * @param event\r\n */\r\nexport const onConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n) => {\r\n  const {\r\n    flowContext: { nodes, assetStore }\r\n  } = getState();\r\n\r\n  // We finished dragging a ghost node, create the spec for our new ghost component\r\n  const [fromNodeUUID, fromExitUUID] = event.sourceId.split(':');\r\n\r\n  const fromNode = nodes[fromNodeUUID];\r\n\r\n  const names = Object.keys(assetStore.results ? assetStore.results.items : {});\r\n\r\n  let resultCount = names.length + 1;\r\n  let key = `result_${resultCount}`;\r\n\r\n  while (hasString(names, key)) {\r\n    resultCount++;\r\n    key = `result_${resultCount}`;\r\n  }\r\n\r\n  // set our ghost node\r\n  const ghostNode = createEmptyNode(fromNode, fromExitUUID, resultCount, flowType);\r\n  ghostNode.inboundConnections = { [fromExitUUID]: fromNodeUUID };\r\n  dispatch(mergeEditorState({ ghostNode }));\r\n};\r\n\r\nexport const updateSticky = (uuid: string, sticky: StickyNote) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): void => {\r\n  const {\r\n    flowContext: { definition }\r\n  } = getState();\r\n\r\n  const updated = mutators.updateStickyNote(definition, uuid, sticky);\r\n  dispatch(updateDefinition(updated));\r\n  markDirty();\r\n};\r\n\r\nexport const onUpdateRouter = (renderNode: RenderNode) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n): RenderNodeMap => {\r\n  const {\r\n    flowContext: { nodes, assetStore },\r\n    nodeEditor: {\r\n      settings: { originalNode, originalAction }\r\n    }\r\n  } = getState();\r\n\r\n  let updated = nodes;\r\n  if (originalNode) {\r\n    const previousPosition = originalNode.ui.position;\r\n    renderNode.ui.position = previousPosition;\r\n    renderNode.inboundConnections = originalNode.inboundConnections;\r\n  }\r\n\r\n  if (originalNode.ghost) {\r\n    renderNode.inboundConnections = originalNode.inboundConnections;\r\n    const { left, top } = originalNode.ui.position;\r\n    renderNode.ui.position = { left, top };\r\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\r\n  }\r\n\r\n  // update our results\r\n  const resultName = getResultName(renderNode.node);\r\n  if (resultName) {\r\n    let updatedAssets = assetStore;\r\n\r\n    // remove our original result name\r\n    const originalResultName = getResultName(originalNode.node);\r\n    if (originalResultName) {\r\n      updatedAssets = mutators.removeResultFromStore(originalResultName, updatedAssets, {\r\n        nodeUUID: originalNode.node.uuid\r\n      });\r\n    }\r\n\r\n    updatedAssets = mutators.addFlowResult(updatedAssets, renderNode.node);\r\n    dispatch(updateAssets(updatedAssets));\r\n  }\r\n\r\n  if (\r\n    originalNode &&\r\n    originalAction &&\r\n    !originalNode.ghost &&\r\n    !getSwitchRouter(originalNode.node)\r\n  ) {\r\n    const actionToSplice = originalNode.node.actions.find(\r\n      (action: Action) => action.uuid === originalAction.uuid\r\n    );\r\n\r\n    if (actionToSplice) {\r\n      // if we are splicing using the original top\r\n      renderNode.ui.position.top = originalNode.ui.position.top;\r\n\r\n      return dispatch(\r\n        spliceInRouter(renderNode, {\r\n          nodeUUID: originalNode.node.uuid,\r\n          actionUUID: actionToSplice.uuid\r\n        })\r\n      );\r\n    }\r\n\r\n    // didn't recognize that action, let's add a new router node\r\n    // if we are appendeng in, see if we need to route through\r\n    const switchRouter = getSwitchRouter(renderNode.node);\r\n    if (switchRouter) {\r\n      const defaultCategory = switchRouter.categories.find(\r\n        (cat: Category) => cat.uuid === switchRouter.default_category_uuid\r\n      );\r\n      const exitToUpdate = renderNode.node.exits.find(\r\n        (exit: Exit) => exit.uuid === defaultCategory.exit_uuid\r\n      );\r\n\r\n      exitToUpdate.destination_uuid = originalNode.node.exits[0].destination_uuid;\r\n    }\r\n\r\n    renderNode.inboundConnections = {\r\n      [originalNode.node.exits[0].uuid]: originalNode.node.uuid\r\n    };\r\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\r\n    renderNode.ui.position.top += NODE_SPACING;\r\n    updated = mutators.mergeNode(updated, renderNode);\r\n  } else {\r\n    updated = mutators.mergeNode(updated, renderNode);\r\n  }\r\n\r\n  dispatch(updateNodes(updated));\r\n\r\n  markDirty(0);\r\n  return updated;\r\n};\r\n\r\nexport const onOpenNodeEditor = (settings: NodeEditorSettings) => (\r\n  dispatch: DispatchWithState,\r\n  getState: GetState\r\n) => {\r\n  const {\r\n    flowContext: {\r\n      definition: { localization }\r\n    },\r\n    editorState: { language, translating }\r\n  } = getState();\r\n\r\n  const { originalNode: renderNode } = settings;\r\n  let { originalAction: action } = settings;\r\n\r\n  const node = renderNode.node;\r\n\r\n  // stuff our localization objects in our settings\r\n  settings.localizations = [];\r\n  if (translating) {\r\n    let actionToTranslate = action;\r\n\r\n    // TODO: this is a hack, would be nice to find how to make that area respond differently\r\n    // if they clicked just below the actions, treat it as the last action\r\n    if (!actionToTranslate && node.actions.length > 0) {\r\n      actionToTranslate = node.actions[node.actions.length - 1];\r\n      if (\r\n        actionToTranslate.type !== Types.send_msg &&\r\n        actionToTranslate.type !== Types.send_broadcast\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const translations = localization[language.id];\r\n    settings.localizations.push(\r\n      ...getLocalizations(node, actionToTranslate, language, translations)\r\n    );\r\n  }\r\n\r\n  // Account for hybrids or clicking on the empty exit table\r\n  if (!action && node.actions.length > 0) {\r\n    action = node.actions[node.actions.length - 1];\r\n  }\r\n\r\n  const typeConfig = determineTypeConfig(settings);\r\n  dispatch(handleTypeConfigChange(typeConfig));\r\n  dispatch(updateNodeEditorSettings(settings));\r\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\r\n};\r\n\r\nexport const updateTranslationFilters = (translationFilters: {\r\n  categories: boolean;\r\n  rules: boolean;\r\n}) => (dispatch: DispatchWithState, getState: GetState): void => {\r\n  const {\r\n    flowContext: { definition }\r\n  } = getState();\r\n\r\n  definition._ui.translation_filters = translationFilters;\r\n  dispatch(updateDefinition(definition));\r\n  markDirty();\r\n};\r\n","import { fieldToAsset } from 'components/flow/actions/updatecontact/helpers';\r\nimport { getResultName } from 'components/flow/node/helpers';\r\nimport { DefaultExitNames } from 'components/flow/routers/constants';\r\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\r\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\r\nimport { FlowTypes, Types } from 'config/interfaces';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { getActivity } from 'external';\r\nimport {\r\n  AddLabels,\r\n  AnyAction,\r\n  Category,\r\n  ChangeGroups,\r\n  FlowDefinition,\r\n  FlowNode,\r\n  FlowPosition,\r\n  HintTypes,\r\n  RouterTypes,\r\n  SetContactField,\r\n  SetRunResult,\r\n  StickyNote,\r\n  SwitchRouter,\r\n  UIMetaData,\r\n  Wait,\r\n  WaitTypes,\r\n  SendMsg,\r\n  FlowIssue,\r\n  FlowIssueType\r\n} from 'flowTypes';\r\nimport Localization, { LocalizedObject } from 'services/Localization';\r\nimport { Activity, EditorState, Warnings } from 'store/editor';\r\nimport {\r\n  Asset,\r\n  AssetMap,\r\n  AssetType,\r\n  RenderNode,\r\n  RenderNodeMap,\r\n  FlowIssueMap\r\n} from 'store/flowContext';\r\nimport { addResult } from 'store/mutators';\r\nimport { DispatchWithState, GetState, mergeEditorState } from 'store/thunks';\r\nimport { createUUID, snakify } from 'utils';\r\n\r\nexport interface Bounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n}\r\n\r\ninterface Reflow {\r\n  uuid: string;\r\n  bounds: Bounds;\r\n}\r\n\r\n// track if we have an active timeout before issuing a new one\r\nlet activityTimeout: any = null;\r\n\r\nexport const getNodeWithAction = (nodes: RenderNodeMap, actionUUID: string): RenderNode => {\r\n  for (const nodeUUID of Object.keys(nodes)) {\r\n    const renderNode = nodes[nodeUUID];\r\n    for (const action of renderNode.node.actions) {\r\n      if (action.uuid === actionUUID) {\r\n        return renderNode;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const getNode = (nodes: RenderNodeMap, nodeUUID: string) => {\r\n  const node = nodes[nodeUUID];\r\n  if (!node) {\r\n    throw new Error('Cannot find node ' + nodeUUID);\r\n  }\r\n  return node;\r\n};\r\n\r\nexport const getExitIndex = (node: FlowNode, exitUUID: string) => {\r\n  for (const [exitIdx, exit] of node.exits.entries()) {\r\n    if (exit.uuid === exitUUID) {\r\n      return exitIdx;\r\n    }\r\n  }\r\n  throw new Error('Cannot find exit ' + exitUUID);\r\n};\r\n\r\nexport const getActionIndex = (node: FlowNode, actionUUID: string) => {\r\n  for (const [actionIdx, action] of node.actions.entries()) {\r\n    if (action.uuid === actionUUID) {\r\n      return actionIdx;\r\n    }\r\n  }\r\n  throw new Error('Cannot find action ' + actionUUID);\r\n};\r\n\r\nexport const getSuggestedResultName = (count: number) => `Result ${count}`;\r\n\r\nexport const hasRouter = (renderNode: RenderNode): boolean => {\r\n  return !!(renderNode && renderNode.node.router);\r\n};\r\n\r\nexport const hasWait = (renderNode: RenderNode): boolean => {\r\n  return !!(renderNode.node.router && renderNode.node.router.wait);\r\n};\r\n\r\nexport const hasLoopSplit = (renderNode: RenderNode): boolean => {\r\n  const type = getType(renderNode);\r\n\r\n  return (\r\n    hasWait(renderNode) || type === Types.split_by_expression || type === Types.split_by_subflow\r\n  );\r\n};\r\n\r\n/**\r\n * Follows every path from fromNodeUUID to toNodeUUID and throws\r\n * an error if we hit ourselves again without hitting a wait\r\n * @param nodes the entire node map\r\n * @param fromNodeUUID which node we are originating from\r\n * @param toNodeUUID where we are trying to go\r\n * @param path the path we have tried so far\r\n */\r\nexport const detectLoops = (\r\n  nodes: RenderNodeMap,\r\n  fromNodeUUID: string,\r\n  toNodeUUID: string,\r\n  path: string[] = []\r\n): void => {\r\n  const fromNode = nodes[fromNodeUUID];\r\n  const toNode = nodes[toNodeUUID];\r\n\r\n  if (fromNodeUUID === toNodeUUID) {\r\n    throw new Error(\"Flow loop detected, can't point to self\");\r\n  }\r\n\r\n  if (hasLoopSplit(toNode) || hasLoopSplit(fromNode)) {\r\n    return;\r\n  }\r\n\r\n  if (path.length === 0) {\r\n    path.push(fromNodeUUID);\r\n    for (const exit of toNode.node.exits) {\r\n      if (exit.destination_uuid) {\r\n        detectLoops(nodes, toNode.node.uuid, exit.destination_uuid, path);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  // we're back where we started\r\n  if (toNodeUUID === path[0]) {\r\n    throw new Error('Flow loop detected, route through a wait first');\r\n  }\r\n\r\n  // add us to the path\r\n  path.push(toNodeUUID);\r\n\r\n  // follow each of our exits\r\n  for (const exit of toNode.node.exits) {\r\n    if (exit.destination_uuid) {\r\n      detectLoops(nodes, toNodeUUID, exit.destination_uuid, path);\r\n    }\r\n  }\r\n\r\n  return;\r\n};\r\n\r\nexport const getLocalizations = (\r\n  node: FlowNode,\r\n  action: AnyAction,\r\n  language: Asset,\r\n  translations?: { [uuid: string]: any }\r\n): LocalizedObject[] => {\r\n  const localizations: LocalizedObject[] = [];\r\n\r\n  // Account for localized cases\r\n  if (node.router && node.router.type === RouterTypes.switch) {\r\n    const router = node.router as SwitchRouter;\r\n\r\n    router.cases.forEach(kase =>\r\n      localizations.push(Localization.translate(kase, language, translations))\r\n    );\r\n  }\r\n\r\n  if (action) {\r\n    localizations.push(Localization.translate(action, language, translations));\r\n    // check for localized template variables]\r\n    if (action.type === Types.send_msg) {\r\n      const sendMsgAction = action as SendMsg;\r\n      if (sendMsgAction.templating) {\r\n        localizations.push(\r\n          Localization.translate(sendMsgAction.templating, language, translations)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // Account for localized categories\r\n  if (node.router) {\r\n    node.router.categories.forEach(category => {\r\n      if (category.name) {\r\n        localizations.push(Localization.translate(category, language, translations));\r\n      }\r\n    });\r\n  }\r\n\r\n  return localizations;\r\n};\r\n\r\nexport const getUniqueDestinations = (node: FlowNode): string[] => {\r\n  const destinations: any = {};\r\n  for (const exit of node.exits) {\r\n    if (exit.destination_uuid) {\r\n      destinations[exit.destination_uuid] = true;\r\n    }\r\n  }\r\n  return Object.keys(destinations);\r\n};\r\n\r\nexport const getCurrentDefinition = (\r\n  definition: FlowDefinition,\r\n  nodeMap: RenderNodeMap,\r\n  includeUI: boolean = true\r\n): FlowDefinition => {\r\n  const renderNodes = getOrderedNodes(nodeMap);\r\n  const nodes: FlowNode[] = [];\r\n  renderNodes.forEach((renderNode: RenderNode) => nodes.push(renderNode.node));\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  const uiNodes: any = {};\r\n  for (const uuid of Object.keys(nodeMap)) {\r\n    uiNodes[uuid] = nodeMap[uuid].ui;\r\n  }\r\n\r\n  const result = {\r\n    ...definition,\r\n    nodes\r\n  };\r\n\r\n  if (includeUI) {\r\n    // tslint:disable-next-line:variable-name\r\n    result._ui = {\r\n      nodes: uiNodes,\r\n      stickies: definition._ui.stickies,\r\n      languages: definition._ui.languages,\r\n      translation_filters: definition._ui.translation_filters\r\n    } as UIMetaData;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const newPosition = (left: number, top: number): FlowPosition => {\r\n  return { left, top };\r\n};\r\n\r\nexport const addPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\r\n  const width = a.right - a.left;\r\n  const height = a.bottom - a.top;\r\n\r\n  // we allow dragging out of bounds\r\n  const top = a.top + b.top;\r\n  const left = a.left + b.left;\r\n\r\n  if (width && height) {\r\n    return {\r\n      left,\r\n      top,\r\n      right: left + width,\r\n      bottom: top + height\r\n    };\r\n  }\r\n\r\n  return { top, left };\r\n};\r\n\r\nexport const subtractPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\r\n  return { left: a.left - b.left, top: a.top - b.top };\r\n};\r\n\r\nexport const getOrderedNodes = (nodes: RenderNodeMap): RenderNode[] => {\r\n  const sorted: RenderNode[] = [];\r\n  Object.keys(nodes).forEach((nodeUUID: string) => {\r\n    sorted.push(nodes[nodeUUID]);\r\n  });\r\n  return sorted.sort((a: RenderNode, b: RenderNode) => {\r\n    let diff = a.ui.position.top - b.ui.position.top;\r\n    if (diff === 0) {\r\n      diff = a.ui.position.left - b.ui.position.left;\r\n    }\r\n    return diff;\r\n  });\r\n};\r\n\r\nexport const getCollisions = (\r\n  nodes: RenderNodeMap,\r\n  stickies: { [key: string]: StickyNote },\r\n  box: FlowPosition\r\n): { [uuid: string]: FlowPosition } => {\r\n  const collisions: any = {};\r\n  for (const nodeUUID of Object.keys(nodes)) {\r\n    const node = nodes[nodeUUID];\r\n    if (collides(box, node.ui.position)) {\r\n      collisions[node.node.uuid] = node.ui.position;\r\n    }\r\n  }\r\n\r\n  for (const uuid in stickies) {\r\n    const sticky = stickies[uuid];\r\n    if (collides(box, sticky.position)) {\r\n      collisions[uuid] = sticky.position;\r\n    }\r\n  }\r\n\r\n  return collisions;\r\n};\r\n\r\nexport const collides = (a: FlowPosition, b: FlowPosition) => {\r\n  // don't bother with collision if we don't have full dimensions\r\n  /* istanbul ignore next */\r\n  if (!a.bottom || !b.bottom) {\r\n    return false;\r\n  }\r\n\r\n  return !(b.left > a.right || b.right < a.left || b.top > a.bottom || b.bottom < a.top);\r\n};\r\n\r\n/**\r\n * Gets the first collsion in the node map returning the original node,\r\n * the node it collides with and optionally an additional node it\r\n * collides with if inserting between two nodes\r\n * @param nodes\r\n */\r\nexport const getCollision = (nodes: RenderNodeMap): RenderNode[] => {\r\n  const sortedNodes = getOrderedNodes(nodes);\r\n\r\n  for (let i = 0; i < sortedNodes.length; i++) {\r\n    const current = sortedNodes[i];\r\n    if (i + 1 < sortedNodes.length) {\r\n      for (let j = i + 1; j < sortedNodes.length; j++) {\r\n        const other = sortedNodes[j];\r\n        if (collides(current.ui.position, other.ui.position)) {\r\n          // if the next node collides too, include it\r\n          // to deal with inserting between two closely\r\n          // positioned nodes\r\n          if (j + 1 < sortedNodes.length) {\r\n            const cascaded = sortedNodes[j + 1];\r\n            if (collides(other.ui.position, cascaded.ui.position)) {\r\n              return [current, other, cascaded];\r\n            }\r\n          }\r\n          return [current, other];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const createEmptyNode = (\r\n  fromNode: RenderNode,\r\n  fromExitUUID: string,\r\n  suggestedResultNameCount: number,\r\n  flowType: FlowTypes\r\n): RenderNode => {\r\n  const emptyNode: FlowNode = {\r\n    uuid: createUUID(),\r\n    actions: [],\r\n    exits: [\r\n      {\r\n        uuid: createUUID(),\r\n        destination_uuid: null\r\n      }\r\n    ]\r\n  };\r\n\r\n  let type = Types.execute_actions;\r\n\r\n  // Add an action next if we are coming from a router\r\n  if (!fromNode || hasRouter(fromNode)) {\r\n    const replyType = flowType === FlowTypes.VOICE ? Types.say_msg : Types.send_msg;\r\n    const replyAction = {\r\n      uuid: createUUID(),\r\n      text: '',\r\n      type: replyType\r\n    };\r\n\r\n    emptyNode.actions.push(replyAction);\r\n  } else {\r\n    // Otherwise we are going to a switch\r\n    const categories: Category[] = [\r\n      {\r\n        uuid: createUUID(),\r\n        name: DefaultExitNames.All_Responses,\r\n        exit_uuid: emptyNode.exits[0].uuid\r\n      }\r\n    ];\r\n\r\n    const wait: Wait = { type: WaitTypes.msg };\r\n    type = Types.wait_for_response;\r\n    if (flowType === FlowTypes.VOICE) {\r\n      wait.hint = { type: HintTypes.digits, count: 1 };\r\n    }\r\n\r\n    emptyNode.router = {\r\n      type: RouterTypes.switch,\r\n      result_name: getSuggestedResultName(suggestedResultNameCount),\r\n      default_category_uuid: categories[0].uuid,\r\n      categories,\r\n      wait,\r\n      cases: []\r\n    } as SwitchRouter;\r\n  }\r\n\r\n  let inboundConnections = {};\r\n  if (fromNode) {\r\n    inboundConnections = { [fromExitUUID]: fromNode.node.uuid };\r\n  }\r\n\r\n  return {\r\n    node: emptyNode,\r\n    ui: { position: { left: 0, top: 0 }, type },\r\n    inboundConnections,\r\n    ghost: true\r\n  };\r\n};\r\n\r\nexport interface FlowComponents {\r\n  renderNodeMap: RenderNodeMap;\r\n  groups: AssetMap;\r\n  fields: AssetMap;\r\n  labels: AssetMap;\r\n  results: AssetMap;\r\n  warnings: Warnings;\r\n}\r\n\r\nexport const isGroupAction = (actionType: string) => {\r\n  return (\r\n    actionType === Types.add_contact_groups ||\r\n    actionType === Types.remove_contact_groups ||\r\n    actionType === Types.send_broadcast\r\n  );\r\n};\r\n\r\n/**\r\n * This isn't necessarily supported, but lets make a best effort to guess node\r\n * types from cues within the definition if somebody loads a flow without _ui details.\r\n * @param node\r\n */\r\nexport const guessNodeType = (node: FlowNode) => {\r\n  // router based nodes\r\n  if (node.router) {\r\n    // hybrid nodes\r\n    if (node.actions.length === 1) {\r\n      if (node.actions[0].type === Types.call_webhook) {\r\n        return Types.split_by_webhook;\r\n      }\r\n\r\n      if (node.actions[0].type === Types.transfer_airtime) {\r\n        return Types.split_by_airtime;\r\n      }\r\n\r\n      if (node.actions[0].type === Types.call_resthook) {\r\n        return Types.split_by_resthook;\r\n      }\r\n\r\n      if (node.actions[0].type === Types.enter_flow) {\r\n        return Types.split_by_subflow;\r\n      }\r\n    }\r\n\r\n    if (node.router.wait) {\r\n      return Types.wait_for_response;\r\n    }\r\n\r\n    if (node.router.type === RouterTypes.random) {\r\n      return Types.split_by_random;\r\n    }\r\n\r\n    const switchRouter = getSwitchRouter(node);\r\n    if (switchRouter) {\r\n      if (switchRouter.operand === GROUPS_OPERAND) {\r\n        return Types.split_by_groups;\r\n      }\r\n    }\r\n\r\n    return Types.split_by_expression;\r\n  }\r\n\r\n  return Types.execute_actions;\r\n};\r\n\r\nexport const generateResultQuery = (resultName: string) => `@run.results.${snakify(resultName)}`;\r\n\r\n/**\r\n * Converts a list of assets to a map keyed by their id\r\n */\r\nexport const assetListToMap = (assets: Asset[]): AssetMap => {\r\n  const assetMap: any = {};\r\n  for (const asset of assets) {\r\n    assetMap[asset.id] = asset;\r\n  }\r\n  return assetMap;\r\n};\r\n\r\nexport const assetMapToList = (assets: AssetMap): any[] => {\r\n  return Object.keys(assets).map(key => {\r\n    const asset = assets[key];\r\n    return { uuid: asset.id, name: asset.name };\r\n  });\r\n};\r\n\r\n/**\r\n * Processes an initial FlowDefinition for details necessary for the editor\r\n */\r\nexport const getFlowComponents = (definition: FlowDefinition): FlowComponents => {\r\n  const renderNodeMap: RenderNodeMap = {};\r\n  const warnings: Warnings = {};\r\n  const { nodes, _ui } = definition;\r\n\r\n  // initialize our nodes\r\n  const pointerMap: { [uuid: string]: { [uuid: string]: string } } = {};\r\n\r\n  const groups: AssetMap = {};\r\n  const fields: AssetMap = {};\r\n  const labels: AssetMap = {};\r\n  let results: AssetMap = {};\r\n\r\n  for (const node of nodes) {\r\n    if (!node.actions) {\r\n      node.actions = [];\r\n    }\r\n\r\n    const ui = _ui.nodes[node.uuid];\r\n    const renderNode: RenderNode = {\r\n      node,\r\n      ui,\r\n      inboundConnections: {}\r\n    };\r\n\r\n    renderNodeMap[node.uuid] = renderNode;\r\n\r\n    const resultName = getResultName(node);\r\n    if (resultName) {\r\n      results = addResult(resultName, results, { nodeUUID: node.uuid });\r\n    }\r\n\r\n    const type = getType(renderNode);\r\n\r\n    // if we are split by group, look at our categories for groups\r\n    if (type === Types.split_by_groups) {\r\n      const router = getSwitchRouter(node);\r\n\r\n      for (const kase of router.cases) {\r\n        const groupUUID = kase.arguments[0];\r\n        const category = router.categories.find((cat: Category) => {\r\n          return cat.uuid === kase.category_uuid;\r\n        });\r\n\r\n        /* istanbul ignore else */\r\n        if (category) {\r\n          groups[groupUUID] = {\r\n            name: category.name,\r\n            id: groupUUID,\r\n            type: AssetType.Group\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const action of node.actions) {\r\n      if (isGroupAction(action.type)) {\r\n        const groupsToChange = (action as ChangeGroups).groups;\r\n        if (groupsToChange) {\r\n          for (const group of groupsToChange) {\r\n            groups[group.uuid] = {\r\n              name: group.name,\r\n              id: group.uuid,\r\n              type: AssetType.Group\r\n            };\r\n          }\r\n        }\r\n      } else if (action.type === Types.set_contact_field) {\r\n        const fieldAction = action as SetContactField;\r\n        fields[fieldAction.field.key] = {\r\n          name: fieldAction.field.name,\r\n          id: fieldAction.field.key,\r\n          type: AssetType.Field\r\n        };\r\n      } else if (action.type === Types.add_input_labels) {\r\n        for (const label of (action as AddLabels).labels) {\r\n          labels[label.uuid] = {\r\n            name: label.name,\r\n            id: label.uuid,\r\n            type: AssetType.Label\r\n          };\r\n        }\r\n      } else if (action.type === Types.set_run_result) {\r\n        const resultAction = action as SetRunResult;\r\n        const key = snakify(resultAction.name);\r\n\r\n        if (key in results) {\r\n          results[key].references.push({\r\n            nodeUUID: node.uuid,\r\n            actionUUID: action.uuid\r\n          });\r\n        } else {\r\n          results[key] = {\r\n            name: resultAction.name,\r\n            id: key,\r\n            type: AssetType.Result,\r\n            references: [{ nodeUUID: node.uuid, actionUUID: action.uuid }]\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const exit of node.exits) {\r\n      if (exit.destination_uuid) {\r\n        let pointers: { [uuid: string]: string } = pointerMap[exit.destination_uuid];\r\n\r\n        if (!pointers) {\r\n          pointers = {};\r\n        }\r\n\r\n        pointers[exit.uuid] = node.uuid;\r\n        pointerMap[exit.destination_uuid] = pointers;\r\n      }\r\n    }\r\n  }\r\n\r\n  // store our pointers with their associated nodes\r\n  for (const nodeUUID of Object.keys(pointerMap)) {\r\n    renderNodeMap[nodeUUID].inboundConnections = pointerMap[nodeUUID];\r\n  }\r\n\r\n  return { renderNodeMap, groups, fields, labels, results, warnings };\r\n};\r\n\r\n/**\r\n * Extracts contact fields from a list of nodes\r\n */\r\nexport const extractContactFields = (nodes: FlowNode[]): Asset[] =>\r\n  nodes.reduce((fieldList, { actions }) => {\r\n    actions.forEach(action => {\r\n      if (action.type === Types.set_contact_field) {\r\n        fieldList.push(fieldToAsset((action as SetContactField).field));\r\n      }\r\n    });\r\n    return fieldList;\r\n  }, []);\r\n\r\n/** Adds all the items from toAdd if that don't already exist in assets */\r\nexport const mergeAssetMaps = (assets: AssetMap, toAdd: AssetMap): void => {\r\n  Object.keys(toAdd).forEach((key: string) => {\r\n    assets[key] = assets[key] || toAdd[key];\r\n  });\r\n};\r\n\r\nexport const createFlowIssueMap = (\r\n  previousIssues: FlowIssueMap,\r\n  issues: FlowIssue[]\r\n): FlowIssueMap => {\r\n  const issueMap: FlowIssueMap = (issues || [])\r\n    .filter((issue: FlowIssue) => issue.type !== FlowIssueType.LEGACY_EXTRA)\r\n    .reduce((issueMap: FlowIssueMap, issue: FlowIssue) => {\r\n      const nodeIssues: FlowIssue[] = issueMap[issue.node_uuid] || [];\r\n      nodeIssues.push(issue);\r\n      issueMap[issue.node_uuid] = nodeIssues;\r\n      return issueMap;\r\n    }, {});\r\n\r\n  for (const [nodeUUID, nodeIssues] of Object.entries(issueMap)) {\r\n    // would be nice not to use stringify as a deepequals here\r\n    if (JSON.stringify(previousIssues[nodeUUID]) === JSON.stringify(nodeIssues)) {\r\n      issueMap[nodeUUID] = previousIssues[nodeUUID];\r\n    }\r\n  }\r\n  return issueMap;\r\n};\r\n\r\nexport const fetchFlowActivity = (\r\n  endpoint: string,\r\n  dispatch: DispatchWithState,\r\n  getState: GetState,\r\n  uuid: string\r\n): void => {\r\n  const {\r\n    editorState: { simulating, activityInterval, visible }\r\n  } = getState();\r\n\r\n  if (visible) {\r\n    getActivity(endpoint, uuid).then((activity: Activity) => {\r\n      // every interval we back off a bit up to 5 minutes\r\n      if (activity) {\r\n        const updates: Partial<EditorState> = {\r\n          liveActivity: activity,\r\n          activityInterval: Math.min(60000 * 5, activityInterval + 200)\r\n        };\r\n\r\n        if (!simulating) {\r\n          updates.activity = activity;\r\n        }\r\n\r\n        dispatch(mergeEditorState(updates));\r\n\r\n        if (activityTimeout) {\r\n          window.clearTimeout(activityTimeout);\r\n        }\r\n\r\n        activityTimeout = window.setTimeout(() => {\r\n          fetchFlowActivity(endpoint, dispatch, getState, uuid);\r\n        }, activityInterval);\r\n      }\r\n    });\r\n  } else {\r\n    if (activityTimeout) {\r\n      window.clearTimeout(activityTimeout);\r\n    }\r\n\r\n    activityTimeout = window.setTimeout(() => {\r\n      fetchFlowActivity(endpoint, dispatch, getState, uuid);\r\n    }, 1000);\r\n  }\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport { Dimensions, FlowPosition } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { newPosition } from 'store/helpers';\r\n\r\nimport styles from './CanvasDraggable.module.scss';\r\nimport { onNextRender } from 'utils';\r\n\r\nexport interface CanvasDraggableProps {\r\n  position: FlowPosition;\r\n  uuid: string;\r\n  idx: number;\r\n  elementCreator: (props: CanvasDraggableProps) => JSX.Element;\r\n  config?: any;\r\n  // should our draggable be initialized as dragged\r\n  dragOnAdd?: boolean;\r\n\r\n  selected?: boolean;\r\n\r\n  onAnimated?: (uuid: string) => void;\r\n  updateDimensions?: (uuid: string, position: Dimensions) => void;\r\n  onDragStart?: (uuid: string, clickedPosition: FlowPosition) => void;\r\n  onDragStop?: () => void;\r\n}\r\n\r\nexport interface CanvasDraggableState {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport class CanvasDraggable extends React.Component<CanvasDraggableProps, CanvasDraggableState> {\r\n  private ele!: HTMLDivElement;\r\n\r\n  constructor(props: CanvasDraggableProps) {\r\n    super(props);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, 'ref']\r\n    });\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  private ref(ref: HTMLDivElement): any {\r\n    return (this.ele = ref);\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    if (this.ele) {\r\n      if (this.props.updateDimensions) {\r\n        const width = this.ele.clientWidth || this.props.position.right - this.props.position.left;\r\n        const height =\r\n          this.ele.clientHeight || this.props.position.bottom - this.props.position.top;\r\n        this.setState({ width, height }, () => {\r\n          this.props.updateDimensions(this.props.uuid, {\r\n            width,\r\n            height\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public shouldComponentUpdate(nextProps: CanvasDraggableProps, state: any, context: any): boolean {\r\n    return (\r\n      nextProps.position.left !== this.props.position.left ||\r\n      nextProps.position.top !== this.props.position.top ||\r\n      nextProps.position.right !== this.props.position.right ||\r\n      nextProps.position.bottom !== this.props.position.bottom ||\r\n      nextProps.idx !== this.props.idx ||\r\n      nextProps.selected !== this.props.selected ||\r\n      nextProps.config !== this.props.config\r\n    );\r\n  }\r\n\r\n  public componentDidUpdate(\r\n    prevProps: CanvasDraggableProps,\r\n    prevState: CanvasDraggableState\r\n  ): void {\r\n    // traceUpdate(this, prevProps, prevState);\r\n\r\n    // we want to check our dimensions after our next render\r\n    onNextRender(() => {\r\n      if (this.ele) {\r\n        if (this.ele.clientWidth && this.ele.clientHeight) {\r\n          if (\r\n            this.state.width !== this.ele.clientWidth ||\r\n            this.state.height !== this.ele.clientHeight\r\n          ) {\r\n            if (this.props.updateDimensions) {\r\n              const height = this.ele.clientHeight;\r\n              const width = this.ele.clientWidth;\r\n\r\n              this.setState({ width, height }, () => {\r\n                this.props.updateDimensions(this.props.uuid, { width, height });\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\r\n    if (event.nativeEvent.which === 3) {\r\n      return;\r\n    }\r\n    if (this.props.onDragStop) {\r\n      this.props.onDragStop();\r\n    }\r\n  }\r\n\r\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>) {\r\n    // ignore clicks in textareas\r\n    if (!this.props.selected && (event.target as any).tagName.toUpperCase() === 'TEXTAREA') {\r\n      return;\r\n    }\r\n\r\n    // ignore right clicks\r\n    if (event.nativeEvent.which === 3) {\r\n      return;\r\n    }\r\n    if (this.props.onDragStart) {\r\n      this.props.onDragStart(\r\n        this.props.uuid,\r\n        newPosition(event.pageX - this.props.position.left, event.pageY - this.props.position.top)\r\n      );\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const classes = [styles.draggable];\r\n\r\n    if (this.props.selected) {\r\n      classes.push(styles.selected);\r\n    }\r\n\r\n    const handleAnimated = () => {\r\n      if (this.props.onAnimated) {\r\n        this.props.onAnimated(this.props.uuid);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        data-testid={'draggable_' + this.props.uuid}\r\n        onTransitionEnd={handleAnimated}\r\n        ref={this.ref}\r\n        className={classes.join(' ')}\r\n        style={{\r\n          left: this.props.position.left,\r\n          top: this.props.position.top\r\n        }}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.handleMouseUp}\r\n      >\r\n        {this.props.elementCreator(this.props)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { FlowPosition } from 'flowTypes';\r\nimport { CanvasPositions } from 'store/editor';\r\nimport {\r\n  MAX_REFLOW_ATTEMPTS,\r\n  NODE_SPACING,\r\n  set,\r\n  snapPositionToGrid,\r\n  timeEnd,\r\n  timeStart\r\n} from 'utils';\r\n\r\nconst mutate = require('immutability-helper');\r\n\r\nexport const collides = (a: FlowPosition, b: FlowPosition, fudge: number) => {\r\n  // don't bother with collision if we don't have full dimensions\r\n  /* istanbul ignore next */\r\n  if (!a.bottom || !b.bottom) {\r\n    return false;\r\n  }\r\n\r\n  a.bottom += fudge;\r\n\r\n  return !(b.left > a.right! || b.right! < a.left || b.top > a.bottom || b.bottom < a.top);\r\n};\r\n\r\nexport const getDraggablesInBox = (\r\n  positions: CanvasPositions,\r\n  box: FlowPosition\r\n): { [uuid: string]: FlowPosition } => {\r\n  const collisions: any = {};\r\n  for (const nodeUUID of Object.keys(positions)) {\r\n    const position = positions[nodeUUID];\r\n    if (collides(box, position, 0)) {\r\n      collisions[nodeUUID] = position;\r\n    }\r\n  }\r\n  return collisions;\r\n};\r\n\r\ninterface DraggablePosition extends FlowPosition {\r\n  uuid: string;\r\n}\r\n\r\nexport const getOrderedDraggables = (positions: CanvasPositions): DraggablePosition[] => {\r\n  const sorted: DraggablePosition[] = [];\r\n  Object.keys(positions).forEach((uuid: string) => {\r\n    sorted.push({ ...positions[uuid], uuid });\r\n  });\r\n\r\n  return sorted.sort((a: DraggablePosition, b: DraggablePosition) => {\r\n    let diff = a.top - b.top;\r\n    if (diff === 0) {\r\n      diff = a.left - b.left;\r\n    }\r\n    return diff;\r\n  });\r\n};\r\n\r\n/**\r\n * Gets the first collsion in the node map returning the original node,\r\n * the node it collides with and optionally an additional node it\r\n * collides with if inserting between two nodes\r\n * @param nodes\r\n */\r\nconst getFirstCollision = (\r\n  positions: CanvasPositions,\r\n  changed: string[],\r\n  fudge: number\r\n): DraggablePosition[] => {\r\n  const sortedDraggables = getOrderedDraggables(positions);\r\n\r\n  for (let i = 0; i < sortedDraggables.length; i++) {\r\n    const current = sortedDraggables[i];\r\n\r\n    if (i + 1 < sortedDraggables.length) {\r\n      for (let j = i + 1; j < sortedDraggables.length; j++) {\r\n        const other = sortedDraggables[j];\r\n\r\n        if (collides(current, other, fudge)) {\r\n          // if the next node collides too, include it\r\n          // to deal with inserting between two closely\r\n          // positioned nodes\r\n          if (j + 1 < sortedDraggables.length) {\r\n            const cascaded = sortedDraggables[j + 1];\r\n            if (collides(other, cascaded, fudge)) {\r\n              return [current, other, cascaded];\r\n            }\r\n          }\r\n\r\n          if (\r\n            !!changed.find((uuid: string) => other.uuid === uuid) &&\r\n            !!!changed.find((uuid: string) => current.uuid === uuid)\r\n          ) {\r\n            return [other, current];\r\n          }\r\n\r\n          return [current, other];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [];\r\n};\r\n\r\nconst setTop = (position: FlowPosition, newTop: number) => {\r\n  return snapPositionToGrid({\r\n    top: newTop,\r\n    left: position.left,\r\n    bottom: newTop + (position.bottom! - position.top),\r\n    right: position.right\r\n  });\r\n};\r\n\r\n/**\r\n * Reflow positions to account for any collisions\r\n * @param positions\r\n */\r\nexport const reflow = (\r\n  positions: CanvasPositions,\r\n  fudge: number\r\n): { positions: CanvasPositions; changed: string[] } => {\r\n  let newPositions = positions;\r\n  const changed: string[] = [];\r\n\r\n  // if for some reason we can't reflow, don't blow up\r\n  let attempts = 0;\r\n\r\n  timeStart('reflow');\r\n\r\n  let collision = getFirstCollision(positions, changed, fudge);\r\n  while (collision.length > 0 && attempts < MAX_REFLOW_ATTEMPTS) {\r\n    attempts++;\r\n    if (collision.length) {\r\n      const [top, bottom, cascade] = collision;\r\n      newPositions = mutate(newPositions, {\r\n        [bottom.uuid]: set(setTop(bottom, top.bottom! + NODE_SPACING))\r\n      });\r\n      changed.push(bottom.uuid);\r\n\r\n      if (cascade) {\r\n        // start with the top of the bottom node\r\n        let cascadeTop = top.bottom! + NODE_SPACING;\r\n\r\n        // and add its height\r\n        cascadeTop += bottom.bottom! - bottom.top;\r\n        newPositions = mutate(newPositions, {\r\n          [cascade.uuid]: set(setTop(cascade, cascadeTop))\r\n        });\r\n\r\n        changed.push(cascade.uuid);\r\n      }\r\n    }\r\n\r\n    collision = getFirstCollision(newPositions, changed, fudge);\r\n  }\r\n\r\n  timeEnd('reflow');\r\n\r\n  return { positions: newPositions, changed };\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport { CanvasDraggable, CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\r\nimport { getDraggablesInBox, reflow } from 'components/canvas/helpers';\r\nimport { DRAG_THRESHOLD } from 'components/flow/Flow';\r\nimport { Dimensions, FlowPosition } from 'flowTypes';\r\nimport mutate from 'immutability-helper';\r\nimport React from 'react';\r\nimport { CanvasPositions, DragSelection } from 'store/editor';\r\nimport { addPosition } from 'store/helpers';\r\nimport { MergeEditorState } from 'store/thunks';\r\nimport { COLLISION_FUDGE, snapPositionToGrid, throttle, snapToGrid } from 'utils';\r\n\r\nimport styles from './Canvas.module.scss';\r\n\r\nexport const CANVAS_PADDING = 300;\r\nexport const REFLOW_QUIET = 200;\r\n\r\nexport interface CanvasProps {\r\n  uuid: string;\r\n  dragActive: boolean;\r\n  draggingNew: boolean;\r\n  newDragElement: JSX.Element;\r\n  draggables: CanvasDraggableProps[];\r\n  mutable: boolean;\r\n  onLoaded: () => void;\r\n  onDragging: (draggedUUIDs: string[]) => void;\r\n  onUpdatePositions: (positions: CanvasPositions) => void;\r\n  onRemoveNodes: (nodeUUIDs: string[]) => void;\r\n  onDoubleClick: (position: FlowPosition) => void;\r\n  mergeEditorState: MergeEditorState;\r\n}\r\n\r\ninterface CanvasState {\r\n  dragDownPosition: FlowPosition | null;\r\n  dragUUID: string | null;\r\n  dragGroup: boolean;\r\n  dragSelection: DragSelection | null;\r\n  uuid: string;\r\n  positions: CanvasPositions;\r\n  selected: CanvasPositions;\r\n  height: number;\r\n}\r\n\r\nexport class Canvas extends React.PureComponent<CanvasProps, CanvasState> {\r\n  private ele!: HTMLDivElement;\r\n  private isScrolling: any;\r\n\r\n  private reflowTimeout: any;\r\n\r\n  // when auto scrolling we need to move dragged elements\r\n  private lastX!: number | null;\r\n  private lastY!: number | null;\r\n\r\n  // did we just select something\r\n  private justSelected = false;\r\n\r\n  private onDragThrottled: (uuids: string[]) => void = throttle(this.props.onDragging, 300);\r\n  private onMouseThrottled: (event: any) => void = throttle(this.handleMouseMove.bind(this), 10);\r\n\r\n  constructor(props: CanvasProps) {\r\n    super(props);\r\n\r\n    let height = document.documentElement.clientHeight;\r\n\r\n    const positions: { [uuid: string]: FlowPosition } = {};\r\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\r\n      positions[draggable.uuid] = draggable.position;\r\n      if (draggable.position.bottom) {\r\n        height = Math.max(height, draggable.position.bottom + CANVAS_PADDING);\r\n      }\r\n    });\r\n\r\n    this.state = {\r\n      height,\r\n      dragDownPosition: null,\r\n      dragUUID: null,\r\n      dragGroup: false,\r\n      dragSelection: null,\r\n      uuid: this.props.uuid,\r\n      selected: {},\r\n      positions\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^render/, /^mark/, /^do/, /^ensure/]\r\n    });\r\n  }\r\n\r\n  private handleWindowResize(): void {\r\n    const windowHeight = document.documentElement.clientHeight;\r\n    this.setState({ height: Math.max(windowHeight, this.state.height) });\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    /* istanbul ignore next */\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n\r\n    this.props.onLoaded();\r\n  }\r\n\r\n  private handleKeyDown(event: any): void {\r\n    if (this.state.selected && event.key === 'Backspace') {\r\n      const nodeUUIDs = Object.keys(this.state.selected);\r\n      if (nodeUUIDs.length > 0) {\r\n        this.props.onRemoveNodes(Object.keys(this.state.selected));\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: CanvasProps, prevState: CanvasState): void {\r\n    // traceUpdate(this, prevProps, prevState);\r\n\r\n    let updated = false;\r\n    let updatedPositions = { ...this.state.positions };\r\n\r\n    // are we being given something new\r\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\r\n      if (!this.state.positions[draggable.uuid]) {\r\n        updatedPositions = mutate(updatedPositions, {\r\n          $merge: { [draggable.uuid]: draggable.position }\r\n        });\r\n        updated = true;\r\n      }\r\n    });\r\n\r\n    // have we removed something\r\n    Object.keys(updatedPositions).forEach((uuid: string) => {\r\n      if (\r\n        !this.props.draggables.find((draggable: CanvasDraggableProps) => draggable.uuid === uuid)\r\n      ) {\r\n        updatedPositions = mutate(updatedPositions, { $unset: [[uuid]] } as any);\r\n        updated = true;\r\n      }\r\n    });\r\n\r\n    if (updated) {\r\n      this.setState({ positions: updatedPositions });\r\n    }\r\n  }\r\n\r\n  public renderSelectionBox(): JSX.Element | null {\r\n    const drag = this.state.dragSelection;\r\n\r\n    if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\r\n      const left = Math.min(drag.startX, drag.currentX);\r\n      const top = Math.min(drag.startY, drag.currentY);\r\n      const width = Math.max(drag.startX, drag.currentX) - left;\r\n      const height = Math.max(drag.startY, drag.currentY) - top;\r\n\r\n      if (this.state.dragSelection && this.state.dragSelection.startX) {\r\n        return <div className={styles.drag_selection} style={{ left, top, width, height }} />;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private isClickOnCanvas(event: React.MouseEvent<HTMLDivElement>): boolean {\r\n    // ignore right clicks\r\n    if (event.nativeEvent.which === 3) {\r\n      return false;\r\n    }\r\n    return (event.target as any).id === 'canvas';\r\n  }\r\n\r\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\r\n    // ignore right clicks\r\n    if (event.nativeEvent.which === 3) {\r\n      return;\r\n    }\r\n\r\n    if (!this.props.mutable) {\r\n      return;\r\n    }\r\n\r\n    const offset = this.ele.getBoundingClientRect();\r\n\r\n    this.justSelected = false;\r\n    if (this.isClickOnCanvas(event)) {\r\n      const startX = event.pageX - offset.left;\r\n      const startY = event.pageY - offset.top - window.scrollY;\r\n\r\n      this.setState({\r\n        dragSelection: { startX, startY, currentX: startX, currentY: startY }\r\n      });\r\n    }\r\n  }\r\n\r\n  private handleMouseMove(event: React.MouseEvent<HTMLDivElement>): void {\r\n    if (!this.props.mutable) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.draggingNew) {\r\n      this.lastX = event.pageX;\r\n      this.lastY = event.pageY;\r\n      this.updateStateWithScroll(event.clientY, event.pageY);\r\n      if (this.state.dragUUID) {\r\n        this.updatePositions(event.pageX, event.pageY, event.clientY, false);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\r\n      const drag = this.state.dragSelection;\r\n\r\n      if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\r\n        const left = Math.min(drag.startX, drag.currentX);\r\n        const top = Math.min(drag.startY, drag.currentY);\r\n        const right = Math.max(drag.startX, drag.currentX);\r\n        const bottom = Math.max(drag.startY, drag.currentY);\r\n\r\n        const selected = getDraggablesInBox(this.state.positions, {\r\n          left,\r\n          top,\r\n          right,\r\n          bottom\r\n        });\r\n\r\n        const offset = this.ele.getBoundingClientRect();\r\n\r\n        this.setState({\r\n          dragSelection: {\r\n            startX: drag.startX,\r\n            startY: drag.startY,\r\n            currentX: event.pageX - offset.left,\r\n            currentY: event.pageY - offset.top - window.scrollY\r\n          }\r\n        });\r\n\r\n        this.setState({ selected });\r\n\r\n        if (Object.keys(selected).length > 0) {\r\n          this.justSelected = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.state.dragUUID) {\r\n      this.updatePositions(event.pageX, event.pageY, event.clientY, false);\r\n    }\r\n  }\r\n\r\n  private scrollCanvas(amount: number): void {\r\n    if (!this.isScrolling) {\r\n      this.isScrolling = true;\r\n\r\n      let speed = amount;\r\n      if (window.scrollY + amount < 0) {\r\n        speed = 0;\r\n      }\r\n\r\n      this.isScrolling = window.setInterval(() => {\r\n        if (this.lastX && this.lastY) {\r\n          // as we scroll we need to move our dragged items along with us\r\n          this.updatePositions(this.lastX, this.lastY + speed, 0, false);\r\n          window.scrollBy(0, speed);\r\n        }\r\n      }, 30);\r\n    }\r\n  }\r\n\r\n  private handleMouseUpCapture(event: React.MouseEvent<HTMLDivElement>): void {\r\n    if (!this.props.mutable) {\r\n      return;\r\n    }\r\n\r\n    // ignore right clicks\r\n    if (event.nativeEvent.which === 3) {\r\n      return;\r\n    }\r\n\r\n    this.lastX = null;\r\n    this.lastY = null;\r\n    if (this.state.dragUUID) {\r\n      this.setState({\r\n        dragDownPosition: null,\r\n        dragSelection: null,\r\n        dragUUID: null\r\n      });\r\n    }\r\n\r\n    if (!this.justSelected) {\r\n      this.props.mergeEditorState({\r\n        dragActive: false\r\n      });\r\n\r\n      this.setState({ selected: {} });\r\n    }\r\n\r\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\r\n      this.setState({\r\n        dragSelection: {\r\n          startX: undefined,\r\n          startY: undefined,\r\n          currentX: undefined,\r\n          currentY: undefined\r\n        }\r\n      });\r\n    }\r\n\r\n    this.justSelected = false;\r\n  }\r\n\r\n  public handleUpdateDimensions(uuid: string, dimensions: Dimensions): void {\r\n    if (dimensions.width && dimensions.height) {\r\n      let pos = this.state.positions[uuid];\r\n      if (!pos) {\r\n        pos = this.props.draggables.find((item: CanvasDraggableProps) => item.uuid === uuid)!\r\n          .position;\r\n      }\r\n\r\n      const newPosition = {\r\n        left: pos.left,\r\n        top: pos.top,\r\n        right: pos.left + dimensions.width,\r\n        bottom: pos.top + dimensions.height\r\n      };\r\n\r\n      if (newPosition.bottom !== pos.bottom || newPosition.right !== pos.right) {\r\n        this.setState((prevState: CanvasState) => {\r\n          const newPositions = mutate(prevState.positions, {\r\n            $merge: {\r\n              [uuid]: newPosition\r\n            }\r\n          });\r\n\r\n          return {\r\n            positions: newPositions,\r\n            height: Math.max(newPosition.bottom + CANVAS_PADDING, prevState.height)\r\n          };\r\n        }, this.markReflow);\r\n      }\r\n    }\r\n  }\r\n\r\n  public ensureCanvasHeight() {\r\n    let height = this.state.height;\r\n    Object.keys(this.state.positions).forEach(uuid => {\r\n      const bottom = this.state.positions[uuid].bottom + CANVAS_PADDING;\r\n      if (bottom > height) {\r\n        height = bottom;\r\n      }\r\n    });\r\n\r\n    if (height > this.state.height) {\r\n      this.setState({ height });\r\n    }\r\n  }\r\n\r\n  public doReflow(): void {\r\n    const reflowPositions = { ...this.state.positions };\r\n    delete reflowPositions[this.state.dragUUID];\r\n    const { positions, changed } = reflow(reflowPositions, COLLISION_FUDGE);\r\n\r\n    if (changed) {\r\n      this.setState({ positions });\r\n\r\n      if (changed) {\r\n        this.props.onUpdatePositions(\r\n          changed.reduce((results: CanvasPositions, uuid: string) => {\r\n            results[uuid] = positions[uuid];\r\n            return results;\r\n          }, {})\r\n        );\r\n      }\r\n    }\r\n\r\n    this.props.onDragging(changed);\r\n  }\r\n\r\n  private markReflow(): void {\r\n    if (this.reflowTimeout) {\r\n      clearTimeout(this.reflowTimeout);\r\n    }\r\n\r\n    this.reflowTimeout = setTimeout(() => {\r\n      // only reflow if we aren't dragging\r\n      if (!this.state.dragUUID) {\r\n        this.doReflow();\r\n      }\r\n    }, REFLOW_QUIET);\r\n  }\r\n\r\n  /**\r\n   * Updates the state of the canvas, expanding and scrolling as needed\r\n   * @param windowY the mouse position in the viewport\r\n   * @param pageY the mouse position in the full canvas\r\n   * @param otherState optional state to set\r\n   */\r\n  private updateStateWithScroll(\r\n    windowY: number,\r\n    pageY: number,\r\n    otherState: Partial<CanvasState> = {}\r\n  ): void {\r\n    const viewportHeight = document.documentElement.clientHeight;\r\n    this.setState(\r\n      (prevState: CanvasState) => {\r\n        return {\r\n          ...(otherState as CanvasState),\r\n          height: Math.max(pageY + CANVAS_PADDING, prevState.height)\r\n        };\r\n      },\r\n      () => {\r\n        // check if we need to scroll our canvas\r\n\r\n        if (!this.isScrolling && windowY !== 0) {\r\n          if (windowY + 100 > viewportHeight) {\r\n            this.scrollCanvas(15);\r\n          } else if (windowY < 100) {\r\n            this.scrollCanvas(-15);\r\n          }\r\n        }\r\n        // if we are scrolling but given a clientY then user is mousing\r\n        else if (windowY !== 0 && (windowY > 100 && windowY + 100 < viewportHeight)) {\r\n          window.clearInterval(this.isScrolling);\r\n          this.isScrolling = null;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private updatePositions(pageX: number, pageY: number, clientY: number, snap: boolean): void {\r\n    if (this.state.dragUUID) {\r\n      const { dragUUID } = this.state;\r\n\r\n      // save off the last update, if we scroll on the user's behalf we'll need this\r\n      this.lastX = pageX;\r\n      this.lastY = pageY;\r\n\r\n      const startPosition = this.props.dragActive\r\n        ? this.state.selected[dragUUID]\r\n        : this.state.positions[dragUUID];\r\n\r\n      const offset = this.ele.getBoundingClientRect();\r\n\r\n      if (this.state.dragDownPosition) {\r\n        const xd = pageX - offset.left - this.state.dragDownPosition.left - startPosition.left;\r\n\r\n        const yd =\r\n          pageY - offset.top - this.state.dragDownPosition.top - startPosition.top - window.scrollY;\r\n\r\n        let lowestNode: number | undefined = 0;\r\n        if (this.props.dragActive) {\r\n          const delta = { left: xd, top: yd };\r\n          const prevState = this.state;\r\n          const uuids = Object.keys(prevState.selected);\r\n          let newPositions: { [uuid: string]: FlowPosition } = {};\r\n\r\n          uuids.forEach((uuid: string) => {\r\n            let newPosition = addPosition(prevState.selected[uuid], delta);\r\n            if (snap) {\r\n              newPosition = snapPositionToGrid(newPosition);\r\n            }\r\n\r\n            if (newPosition && newPosition.bottom! > lowestNode!) {\r\n              lowestNode = newPosition.bottom;\r\n            }\r\n            newPositions[uuid] = newPosition;\r\n          });\r\n\r\n          newPositions = mutate(prevState.positions, {\r\n            $merge: newPositions\r\n          });\r\n\r\n          this.updateStateWithScroll(clientY, lowestNode, {\r\n            positions: newPositions\r\n          });\r\n\r\n          if (uuids.length <= 5) {\r\n            this.props.onDragging(uuids);\r\n          } else {\r\n            this.onDragThrottled(uuids);\r\n          }\r\n        } else {\r\n          if (Math.abs(xd) + Math.abs(yd) > DRAG_THRESHOLD) {\r\n            let selected = this.state.selected;\r\n            if (!(this.state.dragUUID in selected)) {\r\n              selected = { [dragUUID]: this.state.positions[dragUUID] };\r\n            }\r\n\r\n            this.props.mergeEditorState({\r\n              dragActive: true\r\n            });\r\n\r\n            this.setState({ selected });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleDragStart(uuid: string, position: FlowPosition): void {\r\n    const offset = this.ele.getBoundingClientRect();\r\n\r\n    this.setState({\r\n      dragUUID: uuid,\r\n      dragDownPosition: {\r\n        left: position.left - offset.left,\r\n        top: position.top - offset.top - window.scrollY\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Gets all the positions for nodes that were dragged */\r\n  private getSelectedPositions(): CanvasPositions {\r\n    return Object.keys(this.state.selected).reduce((result: CanvasPositions, uuid: string) => {\r\n      result[uuid] = this.state.positions[uuid];\r\n      return result;\r\n    }, {});\r\n  }\r\n\r\n  private handleDragStop(): void {\r\n    if (this.state.dragUUID) {\r\n      this.updatePositions(this.lastX!, this.lastY!, 0, true);\r\n    }\r\n\r\n    this.props.onUpdatePositions(this.getSelectedPositions());\r\n    this.setState({\r\n      dragUUID: null,\r\n      dragDownPosition: null,\r\n      dragSelection: null\r\n    });\r\n\r\n    this.markReflow();\r\n\r\n    this.props.mergeEditorState({\r\n      dragActive: false\r\n    });\r\n  }\r\n\r\n  private handleAnimated(uuid: string): void {\r\n    this.props.onDragging([uuid]);\r\n  }\r\n\r\n  private handleDoubleClick(event: React.MouseEvent<HTMLDivElement>): void {\r\n    if (this.isClickOnCanvas(event)) {\r\n      const offset = this.ele.getBoundingClientRect();\r\n      this.props.onDoubleClick(\r\n        snapToGrid(event.pageX - offset.left, event.pageY - offset.top - window.scrollY)\r\n      );\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div\r\n        id=\"canvas-container\"\r\n        className={styles.canvas_container}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseMove={this.onMouseThrottled}\r\n        onMouseUp={this.handleMouseUpCapture}\r\n        onDoubleClick={this.handleDoubleClick}\r\n      >\r\n        <div className={styles.canvas_background}>\r\n          <div\r\n            data-testid=\"canvas\"\r\n            style={{ height: this.state.height }}\r\n            id=\"canvas\"\r\n            ref={(ele: HTMLDivElement) => {\r\n              this.ele = ele;\r\n            }}\r\n            className={styles.canvas}\r\n          >\r\n            {this.props.newDragElement}\r\n            {this.props.draggables.map((draggable: CanvasDraggableProps, idx: number) => {\r\n              const pos = this.state.positions[draggable.uuid] || draggable.position;\r\n              return (\r\n                <CanvasDraggable\r\n                  onAnimated={this.handleAnimated}\r\n                  key={'draggable_' + draggable.uuid}\r\n                  uuid={draggable.uuid}\r\n                  updateDimensions={this.handleUpdateDimensions}\r\n                  position={pos}\r\n                  idx={draggable.idx}\r\n                  selected={!!this.state.selected[draggable.uuid]}\r\n                  elementCreator={draggable.elementCreator}\r\n                  onDragStart={this.handleDragStart}\r\n                  onDragStop={this.handleDragStop}\r\n                  dragOnAdd={draggable.dragOnAdd}\r\n                  config={draggable.config}\r\n                />\r\n              );\r\n            })}\r\n            {this.renderSelectionBox()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport styles from 'components/counter/Counter.module.scss';\r\nimport * as React from 'react';\r\nimport { addCommas } from 'utils';\r\n\r\nexport interface CounterProps {\r\n  keepVisible: boolean;\r\n  containerStyle: string;\r\n  countStyle: string;\r\n  count: number;\r\n  onClick?: () => void;\r\n  onMouseEnter?: () => void;\r\n  onMouseLeave?: () => void;\r\n}\r\n\r\nexport default class Counter extends React.Component<CounterProps> {\r\n  private ele!: HTMLDivElement;\r\n\r\n  constructor(props: CounterProps) {\r\n    super(props);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^get/]\r\n    });\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.handleScrollIntoView();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: CounterProps): void {\r\n    if (prevProps.count !== this.props.count) {\r\n      this.handleScrollIntoView();\r\n    }\r\n  }\r\n\r\n  private handleScrollIntoView(): void {\r\n    if (!!this.ele) {\r\n      if (this.props.count > 0 && this.props.keepVisible) {\r\n        window.setTimeout(() => {\r\n          window.scrollTo({\r\n            top: this.ele.getBoundingClientRect().top - 200 + window.scrollY,\r\n            behavior: 'smooth'\r\n          });\r\n        }, 200);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleMouseEvent(event: React.MouseEvent<HTMLDivElement>, callback: () => void): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (callback) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private handleMouseEnter(event: React.MouseEvent<HTMLDivElement>): void {\r\n    this.handleMouseEvent(event, this.props.onMouseEnter!);\r\n  }\r\n\r\n  private handleMouseLeave(event: React.MouseEvent<HTMLDivElement>): void {\r\n    this.handleMouseEvent(event, this.props.onMouseLeave!);\r\n  }\r\n\r\n  private handleClick(event: React.MouseEvent<HTMLDivElement>): void {\r\n    this.handleMouseEvent(event, this.props.onClick!);\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    const count = addCommas(this.props.count);\r\n    return (\r\n      <div\r\n        ref={(ele: HTMLDivElement) => {\r\n          this.ele = ele;\r\n        }}\r\n        className={\r\n          styles.counter +\r\n          ' ' +\r\n          this.props.containerStyle +\r\n          ' ' +\r\n          (this.props.onClick ? styles.clickable : '') +\r\n          ' ' +\r\n          (this.props.count > 0 ? styles.visible : '')\r\n        }\r\n        onClick={this.handleClick}\r\n        data-spec=\"counter-outter\"\r\n      >\r\n        <div\r\n          onMouseEnter={this.handleMouseEnter}\r\n          onMouseLeave={this.handleMouseLeave}\r\n          className={this.props.countStyle}\r\n          data-spec=\"counter-inner\"\r\n        >\r\n          {count}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { createClickHandler } from 'utils';\r\n\r\nimport styles from './TitleBar.module.scss';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport i18n from 'config/i18n';\r\n\r\nexport interface TitleBarProps {\r\n  title: string;\r\n  onRemoval(event: React.MouseEvent<HTMLElement>): any;\r\n  __className?: string;\r\n  showRemoval?: boolean;\r\n  showMove?: boolean;\r\n  onMoveUp?(event: React.MouseEvent<HTMLElement>): any;\r\n  shouldCancelClick?: () => boolean;\r\n}\r\n\r\ninterface TitleBarState {\r\n  confirmingRemoval: boolean;\r\n}\r\n\r\nexport const confirmationTime = 2000;\r\n\r\nexport const titlebarContainerSpecId = 'titlebar-container';\r\nexport const titlebarSpecId = 'titlebar';\r\nexport const moveIconSpecId = 'move-icon';\r\nexport const moveSpecId = 'move';\r\nexport const removeIconSpecId = 'remove-icon';\r\nexport const confirmationSpecId = 'confirmation';\r\nexport const confirmRemovalSpecId = 'confirm-removal';\r\n\r\n/**\r\n * Simple title bar with confirmation removal\r\n */\r\nexport default class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n  private confirmationTimeout: number;\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  constructor(props: TitleBarProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      confirmingRemoval: false\r\n    };\r\n\r\n    this.handleConfirmRemoval = this.handleConfirmRemoval.bind(this);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    if (this.confirmationTimeout) {\r\n      window.clearTimeout(this.confirmationTimeout);\r\n    }\r\n  }\r\n\r\n  public handleMouseUpCapture(event: React.MouseEvent<HTMLElement>): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  public handleConfirmRemoval(event: React.MouseEvent<HTMLElement>): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    this.setState({\r\n      confirmingRemoval: true\r\n    });\r\n\r\n    this.confirmationTimeout = window.setTimeout(\r\n      () =>\r\n        this.setState({\r\n          confirmingRemoval: false\r\n        }),\r\n      confirmationTime\r\n    );\r\n  }\r\n\r\n  private getMoveArrow(): JSX.Element {\r\n    let moveArrow: JSX.Element = null;\r\n\r\n    if (this.props.showMove && this.context.config.mutable) {\r\n      moveArrow = (\r\n        <div\r\n          className={styles.up_button}\r\n          {...createClickHandler(\r\n            this.props.onMoveUp,\r\n            this.props.shouldCancelClick,\r\n            this.handleMouseUpCapture\r\n          )}\r\n          data-testid={moveIconSpecId}\r\n        >\r\n          <span className=\"fe-arrow-up\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      moveArrow = <div className={styles.up_button} data-spec={moveSpecId} />;\r\n    }\r\n\r\n    return moveArrow;\r\n  }\r\n\r\n  private getRemove(): JSX.Element {\r\n    let remove: JSX.Element = (\r\n      <div className={styles.remove_button} data-testid={removeIconSpecId}></div>\r\n    );\r\n\r\n    if (this.props.showRemoval && this.context.config.mutable) {\r\n      remove = (\r\n        <div\r\n          className={styles.remove_button}\r\n          {...createClickHandler(\r\n            this.handleConfirmRemoval,\r\n            this.props.shouldCancelClick,\r\n            this.handleMouseUpCapture\r\n          )}\r\n          data-testid={removeIconSpecId}\r\n        >\r\n          <span className=\"fe-x\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return remove;\r\n  }\r\n\r\n  private getConfirmationEl(): JSX.Element {\r\n    let confirmation: JSX.Element;\r\n\r\n    if (this.state.confirmingRemoval && this.context.config.mutable) {\r\n      confirmation = (\r\n        <div className={styles.remove_confirm} data-spec={confirmationSpecId}>\r\n          <div className={styles.up_button} data-spec={moveSpecId} />\r\n          <div className={styles.titletext}>{i18n.t('removal_confirmation', 'Remove?')}</div>\r\n          <div\r\n            className={styles.remove_button}\r\n            {...createClickHandler(\r\n              this.props.onRemoval,\r\n              this.props.shouldCancelClick,\r\n              this.handleMouseUpCapture\r\n            )}\r\n            data-testid={confirmRemovalSpecId}\r\n          >\r\n            <span className=\"fe-x\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return confirmation;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const confirmation: JSX.Element = this.getConfirmationEl();\r\n    const moveArrow: JSX.Element = this.getMoveArrow();\r\n    const remove: JSX.Element = this.getRemove();\r\n    return (\r\n      <div className={styles.titlebar} data-spec={titlebarContainerSpecId}>\r\n        <div className={`${this.props.__className} ${styles.normal}`} data-spec={titlebarSpecId}>\r\n          {moveArrow}\r\n          <div className={styles.titletext}>{this.props.title}</div>\r\n          {remove}\r\n        </div>\r\n        {confirmation}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './MountScroll.module.scss';\r\n\r\nconst cx: any = classNames.bind(styles);\r\n\r\ninterface MountScrollProps {\r\n  pulseAfterScroll?: boolean;\r\n}\r\n\r\ninterface MountScrollState {\r\n  pulse: boolean;\r\n}\r\n\r\nexport default class MountScroll extends React.Component<MountScrollProps, MountScrollState> {\r\n  private ele!: HTMLDivElement;\r\n  private handleScroll: () => void;\r\n\r\n  constructor(props: MountScrollProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pulse: false\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const handleScrollCompleted = this.handleScrollCompleted.bind(this);\r\n\r\n    let timer: number = null;\r\n    this.handleScroll = () => {\r\n      if (timer !== null) {\r\n        window.clearTimeout(timer);\r\n      }\r\n      timer = window.setTimeout(() => {\r\n        handleScrollCompleted();\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n      }, 50);\r\n    };\r\n\r\n    window.addEventListener('scroll', this.handleScroll);\r\n    this.handleScrollIntoView();\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  private handleScrollCompleted(): void {\r\n    this.setState({ pulse: true });\r\n  }\r\n\r\n  private handleScrollIntoView(): void {\r\n    if (!!this.ele) {\r\n      const scrollTo = this.ele.getBoundingClientRect().top - 200 + window.scrollY;\r\n\r\n      if (scrollTo !== window.scrollY) {\r\n        const atBottom = window.innerHeight + window.scrollY >= document.body.scrollHeight - 2;\r\n        if (atBottom && scrollTo > window.scrollY) {\r\n          this.handleScrollCompleted();\r\n        } else {\r\n          window.setTimeout(() => {\r\n            window.scrollTo({\r\n              top: scrollTo,\r\n              behavior: 'smooth'\r\n            });\r\n          }, 0);\r\n        }\r\n      } else {\r\n        this.handleScrollCompleted();\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    const classes = cx({\r\n      [styles.wrapper]: true,\r\n      [styles.pulse]: this.state.pulse\r\n    });\r\n\r\n    return (\r\n      <div\r\n        className={classes}\r\n        ref={(ele: HTMLDivElement) => {\r\n          this.ele = ele;\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport classNames from 'classnames/bind';\r\nimport shared from 'components/shared.module.scss';\r\nimport TitleBar from 'components/titlebar/TitleBar';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { Types } from 'config/interfaces';\r\nimport { getTypeConfig } from 'config/typeConfigs';\r\nimport { Action, AnyAction, Endpoints, LocalizationMap, FlowIssue } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Asset, RenderNode, AssetStore } from 'store/flowContext';\r\nimport AppState from 'store/state';\r\nimport {\r\n  ActionAC,\r\n  DispatchWithState,\r\n  moveActionUp,\r\n  OnOpenNodeEditor,\r\n  onOpenNodeEditor,\r\n  removeAction\r\n} from 'store/thunks';\r\nimport { createClickHandler, getLocalization } from 'utils';\r\n\r\nimport styles from './Action.module.scss';\r\nimport { hasIssues } from 'components/flow/helpers';\r\nimport MountScroll from 'components/mountscroll/MountScroll';\r\n\r\nexport interface ActionWrapperPassedProps {\r\n  first: boolean;\r\n  action: AnyAction;\r\n  localization: LocalizationMap;\r\n  selected: boolean;\r\n  issues: FlowIssue[];\r\n  render: (action: AnyAction, endpoints: Endpoints) => React.ReactNode;\r\n}\r\n\r\nexport interface ActionWrapperStoreProps {\r\n  assetStore: AssetStore;\r\n  renderNode: RenderNode;\r\n  language: Asset;\r\n  translating: boolean;\r\n  onOpenNodeEditor: OnOpenNodeEditor;\r\n  removeAction: ActionAC;\r\n  moveActionUp: ActionAC;\r\n  scrollToAction: string;\r\n}\r\n\r\nexport type ActionWrapperProps = ActionWrapperPassedProps & ActionWrapperStoreProps;\r\n\r\nexport const actionContainerSpecId = 'action-container';\r\nexport const actionOverlaySpecId = 'action-overlay';\r\nexport const actionInteractiveDivSpecId = 'interactive-div';\r\nexport const actionBodySpecId = 'action-body';\r\n\r\nconst cx: any = classNames.bind({ ...shared, ...styles });\r\n\r\n// Note: this needs to be a ComponentClass in order to work w/ react-flip-move\r\nexport class ActionWrapper extends React.Component<ActionWrapperProps> {\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  constructor(props: ActionWrapperProps) {\r\n    super(props);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^handle/]\r\n    });\r\n  }\r\n\r\n  public handleActionClicked(event: React.MouseEvent<HTMLElement>): void {\r\n    const target = event.target as any;\r\n\r\n    const showAdvanced =\r\n      target && target.attributes && target.getAttribute('data-advanced') === 'true';\r\n\r\n    this.props.onOpenNodeEditor({\r\n      originalNode: this.props.renderNode,\r\n      originalAction: this.props.action,\r\n      showAdvanced\r\n    });\r\n  }\r\n\r\n  public handleRemoval(event: React.MouseEvent<HTMLDivElement>): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    this.props.removeAction(this.props.renderNode.node.uuid, this.props.action);\r\n  }\r\n\r\n  public handleMoveUp(event: React.MouseEvent<HTMLDivElement>): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    this.props.moveActionUp(this.props.renderNode.node.uuid, this.props.action);\r\n  }\r\n\r\n  public getAction(): Action {\r\n    // if we are translating, us our localized version\r\n    if (this.props.translating) {\r\n      const localization = getLocalization(\r\n        this.props.action,\r\n        this.props.localization,\r\n        this.props.language\r\n      );\r\n      return localization.getObject() as AnyAction;\r\n    }\r\n\r\n    return this.props.action;\r\n  }\r\n\r\n  private getClasses(): string {\r\n    const localizedKeys = [];\r\n    let missingLocalization = false;\r\n\r\n    if (this.props.translating) {\r\n      if (\r\n        this.props.action.type === Types.send_msg ||\r\n        this.props.action.type === Types.send_broadcast ||\r\n        this.props.action.type === Types.say_msg\r\n      ) {\r\n        localizedKeys.push('text');\r\n      }\r\n\r\n      if (this.props.action.type === Types.send_email) {\r\n        localizedKeys.push('subject');\r\n      }\r\n\r\n      if (localizedKeys.length !== 0) {\r\n        const localization = getLocalization(\r\n          this.props.action,\r\n          this.props.localization,\r\n          this.props.language\r\n        );\r\n\r\n        if (localization.isLocalized()) {\r\n          for (const key of localizedKeys) {\r\n            if (!(key in localization.localizedKeys)) {\r\n              missingLocalization = true;\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          missingLocalization = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    const notLocalizable = this.props.translating && localizedKeys.length === 0;\r\n\r\n    return cx({\r\n      [styles.action]: true,\r\n      [styles.has_router]:\r\n        this.props.renderNode.node.hasOwnProperty('router') &&\r\n        this.props.renderNode.node.router !== null,\r\n      [styles.translating]: this.props.translating,\r\n      [styles.not_localizable]: notLocalizable,\r\n      [styles.missing_localization]: missingLocalization,\r\n      [styles.localized]: !notLocalizable && !missingLocalization\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { name } = getTypeConfig(this.props.action.type);\r\n\r\n    const classes = this.getClasses();\r\n    const actionToInject = this.getAction();\r\n\r\n    let titleBarClass = (shared as any)[this.props.action.type] || shared.missing;\r\n    const actionClass = (styles as any)[this.props.action.type] || styles.missing;\r\n    const showRemoval = !this.props.translating;\r\n    const showMove = !this.props.first && !this.props.translating;\r\n\r\n    if (hasIssues(this.props.issues, this.props.translating, this.props.language)) {\r\n      titleBarClass = shared.missing;\r\n    }\r\n\r\n    const events = this.context.config.mutable\r\n      ? createClickHandler(this.handleActionClicked, () => this.props.selected)\r\n      : {};\r\n\r\n    const body = (\r\n      <>\r\n        <TitleBar\r\n          __className={titleBarClass}\r\n          title={name}\r\n          onRemoval={this.handleRemoval}\r\n          showRemoval={showRemoval}\r\n          showMove={showMove}\r\n          onMoveUp={this.handleMoveUp}\r\n          shouldCancelClick={() => this.props.selected}\r\n        />\r\n        <div className={styles.body + ' ' + actionClass} data-spec={actionBodySpecId}>\r\n          {this.props.render(actionToInject, this.context.config.endpoints)}\r\n        </div>\r\n      </>\r\n    );\r\n    return (\r\n      <div\r\n        id={`action-${this.props.action.uuid}`}\r\n        className={classes}\r\n        data-spec={actionContainerSpecId}\r\n      >\r\n        <div className={styles.overlay} data-spec={actionOverlaySpecId} />\r\n        <div {...events} data-spec={actionInteractiveDivSpecId}>\r\n          {this.props.scrollToAction && this.props.scrollToAction === this.props.action.uuid ? (\r\n            <MountScroll pulseAfterScroll={true}>{body}</MountScroll>\r\n          ) : (\r\n            body\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* istanbul ignore next */\r\nconst mapStateToProps = ({\r\n  flowContext: {\r\n    assetStore,\r\n    definition: { localization }\r\n  },\r\n  editorState: { language, translating, scrollToAction }\r\n}: AppState) => ({\r\n  scrollToAction,\r\n  assetStore,\r\n  language,\r\n  translating,\r\n  localization\r\n});\r\n\r\n/* istanbul ignore next */\r\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\r\n  bindActionCreators(\r\n    {\r\n      onOpenNodeEditor,\r\n      removeAction,\r\n      moveActionUp\r\n    },\r\n    dispatch\r\n  );\r\n\r\nconst ConnectedActionWrapper = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  null,\r\n  { forwardRef: true }\r\n)(ActionWrapper);\r\n\r\nexport default ConnectedActionWrapper;\r\n","import * as React from 'react';\r\n\r\nimport styles from './DragHelper.module.scss';\r\nimport { Trans } from 'react-i18next';\r\n\r\ninterface DragHelperState {\r\n  visible: boolean;\r\n}\r\n\r\nexport default class DragHelper extends React.Component<{}, DragHelperState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    window.setTimeout(() => {\r\n      if (!this.state.visible) {\r\n        this.setState({ visible: true });\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className={styles.drag_helper + ' ' + (this.state.visible ? styles.visible : '')}>\r\n        <div className={styles.arrow}>\r\n          <div className={styles.tail} />\r\n          <div className={styles.head} />\r\n        </div>\r\n        <div className={styles.help_text}>\r\n          <Trans i18nKey=\"drag_helper\">\r\n            To connect nodes, <span className={styles.bold}>drag</span> from the red circle.\r\n          </Trans>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Exit } from 'flowTypes';\r\n\r\nexport const getExitActivityKey = (exit: Exit) => {\r\n  return exit.uuid + ':' + exit.destination_uuid;\r\n};\r\n","import * as React from 'react';\r\nimport { range } from 'utils';\r\n\r\nimport styles from './Loading.module.scss';\r\n\r\nexport interface LoadingProps {\r\n  size: number;\r\n  units: number;\r\n  color: string;\r\n  square?: boolean;\r\n}\r\n\r\ninterface Color {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n}\r\n\r\ninterface LoadingState {\r\n  color: Color;\r\n}\r\n\r\nconst hexToRgb = (hex: string): Color => {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n      }\r\n    : null;\r\n};\r\n\r\nexport default class Loading extends React.Component<LoadingProps, LoadingState> {\r\n  constructor(props: LoadingProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      color: hexToRgb(props.color)\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div\r\n        className={styles.loading}\r\n        style={{\r\n          width: this.props.size * this.props.units * 2,\r\n          height: this.props.size\r\n        }}\r\n      >\r\n        {range(0, this.props.units).map((num: number) => (\r\n          <div\r\n            key={`ball_${num}`}\r\n            style={{\r\n              borderRadius: this.props.square ? '0' : '50%',\r\n              width: this.props.size,\r\n              height: this.props.size,\r\n              margin: this.props.size / 3,\r\n              animationDelay: `-${1 - num * (1 / this.props.units)}s`,\r\n              background: `rgba(${this.state.color.r},${this.state.color.g},${\r\n                this.state.color.b\r\n              }, ${1 - num * (1 / this.props.units)})`\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport interface PortalProps {\r\n  id?: string;\r\n}\r\n\r\nexport class Portal extends React.Component<PortalProps> {\r\n  private el: HTMLDivElement = null;\r\n  private portalRoot: HTMLElement = null;\r\n\r\n  constructor(props: PortalProps) {\r\n    super(props);\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.setTimeout(() => {\r\n      this.portalRoot = document.getElementById(this.props.id || 'portal-root');\r\n      if (this.portalRoot) {\r\n        this.portalRoot.appendChild(this.el);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.portalRoot) {\r\n      this.el.remove();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PortalProps) {\r\n    if (this.props.id && prevProps.id !== this.props.id) {\r\n      window.setTimeout(() => {\r\n        this.portalRoot = document.getElementById(this.props.id || 'portal-root');\r\n        this.portalRoot.appendChild(this.el);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport classNames from 'classnames/bind';\r\nimport Counter from 'components/counter/Counter';\r\nimport DragHelper from 'components/draghelper/DragHelper';\r\nimport { getExitActivityKey } from 'components/flow/exit/helpers';\r\nimport Loading from 'components/loading/Loading';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { Cancel, getRecentMessages } from 'external';\r\nimport { Category, Exit, FlowNode, LocalizationMap } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { RecentMessage } from 'store/editor';\r\nimport { Asset } from 'store/flowContext';\r\nimport AppState from 'store/state';\r\nimport { DisconnectExit, disconnectExit, DispatchWithState } from 'store/thunks';\r\nimport { createClickHandler, getLocalization, renderIf } from 'utils';\r\n\r\nimport * as moment from 'moment';\r\nimport styles from './Exit.module.scss';\r\nimport { Portal } from 'components/Portal';\r\n\r\nexport interface RenderCategory extends Category {\r\n  missing: boolean;\r\n}\r\n\r\nexport interface ExitPassedProps {\r\n  exit: Exit;\r\n  categories: Category[];\r\n  node: FlowNode;\r\n  showDragHelper: boolean;\r\n  plumberMakeSource: (id: string) => void;\r\n  plumberRemove: (id: string) => void;\r\n  plumberConnectExit: (\r\n    node: FlowNode,\r\n    exit: Exit,\r\n    onConnection: (activityId: string, recentMessagesId: string) => void\r\n  ) => void;\r\n  plumberUpdateClass: (\r\n    node: FlowNode,\r\n    exit: Exit,\r\n    className: string,\r\n    confirmDelete: boolean\r\n  ) => void;\r\n}\r\n\r\nexport interface ExitStoreProps {\r\n  translating: boolean;\r\n  dragging: boolean;\r\n  language: Asset;\r\n  localization: LocalizationMap;\r\n  disconnectExit: DisconnectExit;\r\n  segmentCount: number;\r\n  recentMessages: RecentMessage[];\r\n}\r\n\r\nexport type ExitProps = ExitPassedProps & ExitStoreProps;\r\n\r\nexport interface ExitState {\r\n  confirmDelete: boolean;\r\n  recentMessages: RecentMessage[];\r\n  fetchingRecentMessages: boolean;\r\n  showDragHelper: boolean;\r\n  activityId: string;\r\n  recentMessagesId: string;\r\n}\r\n\r\nconst cx: any = classNames.bind(styles);\r\nexport class ExitComp extends React.PureComponent<ExitProps, ExitState> {\r\n  private timeout: number;\r\n  private hideDragHelper: number;\r\n  private pendingMessageFetch: Cancel = {};\r\n  private ele: HTMLDivElement;\r\n\r\n  constructor(props: ExitProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      confirmDelete: false,\r\n      recentMessages: null,\r\n      fetchingRecentMessages: false,\r\n      showDragHelper: props.showDragHelper,\r\n      activityId: null,\r\n      recentMessagesId: null\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^get/, /^handle/, /^connect/]\r\n    });\r\n  }\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  public getSourceId(): string {\r\n    return `${this.props.node.uuid}:${this.props.exit.uuid}`;\r\n  }\r\n\r\n  public handleDisconnect(): void {\r\n    this.setState({ showDragHelper: false });\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.props.plumberMakeSource(this.getSourceId());\r\n\r\n    if (this.ele) {\r\n      this.ele.addEventListener('disconnect', this.handleDisconnect);\r\n    }\r\n\r\n    if (this.props.exit.destination_uuid) {\r\n      this.connect();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: ExitProps): void {\r\n    if (this.props.exit.destination_uuid !== prevProps.exit.destination_uuid) {\r\n      this.connect();\r\n      if (this.state.confirmDelete) {\r\n        this.setState({ confirmDelete: false });\r\n      }\r\n    }\r\n\r\n    if (this.state.showDragHelper && prevProps.showDragHelper && !this.props.showDragHelper) {\r\n      this.setState({ showDragHelper: false });\r\n    }\r\n\r\n    this.props.plumberUpdateClass(\r\n      this.props.node,\r\n      this.props.exit,\r\n      'confirm-delete',\r\n      this.state.confirmDelete\r\n    );\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    if (this.props.exit.destination_uuid) {\r\n      this.props.plumberRemove(this.getSourceId());\r\n    }\r\n\r\n    if (this.ele) {\r\n      this.ele.removeEventListener('disconnect', this.handleDisconnect);\r\n    }\r\n  }\r\n\r\n  private handleMouseDown(event: React.MouseEvent<HTMLElement>): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  private handleClick(event: React.MouseEvent<HTMLElement>): void {\r\n    if (!this.props.translating) {\r\n      if (this.props.exit.destination_uuid) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.setState(\r\n          {\r\n            confirmDelete: true\r\n          },\r\n          () => {\r\n            this.timeout = window.setTimeout(() => {\r\n              this.setState({\r\n                confirmDelete: false\r\n              });\r\n            }, 2000);\r\n          }\r\n        );\r\n      } else {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!this.state.showDragHelper) {\r\n          this.setState({ showDragHelper: true }, () => {\r\n            if (this.hideDragHelper) {\r\n              window.clearTimeout(this.hideDragHelper);\r\n            }\r\n            this.hideDragHelper = window.setTimeout(() => {\r\n              this.setState({ showDragHelper: false });\r\n            }, 3000);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private onDisconnect(event: React.MouseEvent<HTMLElement>): void {\r\n    if (this.timeout) {\r\n      window.clearTimeout(this.timeout);\r\n    }\r\n\r\n    if (this.hideDragHelper) {\r\n      window.clearTimeout(this.hideDragHelper);\r\n    }\r\n\r\n    this.props.disconnectExit(this.props.node.uuid, this.props.exit.uuid);\r\n  }\r\n\r\n  private connect(): void {\r\n    this.props.plumberConnectExit(\r\n      this.props.node,\r\n      this.props.exit,\r\n      (activityId: string, recentMessagesId: string) => {\r\n        this.setState({ activityId, recentMessagesId });\r\n      }\r\n    );\r\n  }\r\n\r\n  private handleShowRecentMessages(): void {\r\n    if (this.props.recentMessages) {\r\n      this.setState({ recentMessages: this.props.recentMessages });\r\n      return;\r\n    }\r\n\r\n    this.setState({ fetchingRecentMessages: true }, () => {\r\n      getRecentMessages(\r\n        this.context.config.endpoints.recents,\r\n        this.props.exit,\r\n        this.pendingMessageFetch\r\n      )\r\n        .then((recentMessages: RecentMessage[]) => {\r\n          this.setState({ recentMessages, fetchingRecentMessages: false });\r\n        })\r\n        .catch(() => {\r\n          // we may have been canceled\r\n        });\r\n    });\r\n  }\r\n\r\n  private handleHideRecentMessages(): void {\r\n    if (this.pendingMessageFetch.reject) {\r\n      this.pendingMessageFetch.reject();\r\n      this.pendingMessageFetch = {};\r\n    }\r\n\r\n    this.setState({ fetchingRecentMessages: false, recentMessages: null });\r\n  }\r\n\r\n  private getSegmentCount(): JSX.Element {\r\n    // Only exits with a destination have activity\r\n    if (this.props.exit.destination_uuid && this.state.activityId) {\r\n      const key = `${this.props.exit.uuid}-label`;\r\n      return (\r\n        <Portal id={this.state.activityId}>\r\n          <div style={{ position: 'relative' }}>\r\n            <Counter\r\n              key={key}\r\n              count={this.props.segmentCount}\r\n              containerStyle={styles.activity}\r\n              countStyle={styles.count}\r\n              keepVisible={false}\r\n              onMouseEnter={this.handleShowRecentMessages}\r\n              onMouseLeave={this.handleHideRecentMessages}\r\n            />\r\n          </div>\r\n        </Portal>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getName(): { name: string; localized?: boolean } {\r\n    if (this.props.translating) {\r\n      let name: string = '';\r\n      let delim: string = '';\r\n\r\n      let localized: boolean = false;\r\n\r\n      this.props.categories.forEach((category: Category) => {\r\n        const localization = getLocalization(\r\n          category,\r\n          this.props.localization,\r\n          this.props.language\r\n        );\r\n\r\n        localized = localized || 'name' in localization.localizedKeys;\r\n        const localizedObject = localization.getObject() as Category;\r\n        name += delim + localizedObject.name;\r\n        delim = ', ';\r\n      });\r\n\r\n      return { name, localized };\r\n    } else {\r\n      const names: string[] = [];\r\n      this.props.categories.forEach((cat: Category) => {\r\n        names.push(cat.name);\r\n      });\r\n\r\n      return {\r\n        name: names.join(', ')\r\n      };\r\n    }\r\n  }\r\n\r\n  private getRecentMessages(): JSX.Element {\r\n    if (this.state.fetchingRecentMessages || this.state.recentMessages !== null) {\r\n      const recentMessages = this.state.recentMessages || [];\r\n      const hasRecents = recentMessages.length !== 0;\r\n\r\n      const recentStyles = [styles.recent_messages];\r\n\r\n      let title = 'Recent Messages';\r\n      if (!hasRecents && !this.state.fetchingRecentMessages) {\r\n        title = 'No Recent Messages';\r\n        recentStyles.push(styles.no_recents);\r\n      }\r\n\r\n      return (\r\n        <Portal id={this.state.recentMessagesId}>\r\n          <div className={recentStyles.join(' ')}>\r\n            <div className={styles.title}>{title}</div>\r\n            {recentMessages.map((recentMessage: RecentMessage, idx: number) => (\r\n              <div key={'recent_' + idx} className={styles.message}>\r\n                <div className={styles.text}>{recentMessage.text}</div>\r\n                <div className={styles.sent}>{moment.utc(recentMessage.sent).fromNow()}</div>\r\n              </div>\r\n            ))}\r\n            {this.state.recentMessages === null ? (\r\n              <div className={styles.loading}>\r\n                <Loading size={10} units={6} color=\"#999999\" />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </Portal>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { name, localized } = this.getName();\r\n\r\n    const nameStyle = name ? styles.name : '';\r\n    const connected = this.props.exit.destination_uuid ? ' jtk-connected' : '';\r\n    const dragNodeClasses = cx(styles.endpoint, connected);\r\n    const confirmDelete =\r\n      this.state.confirmDelete && this.props.exit.hasOwnProperty('destination_uuid');\r\n    const confirm: JSX.Element =\r\n      confirmDelete && this.context.config.mutable ? (\r\n        <div\r\n          className={styles.confirm_x + ' fe-x'}\r\n          {...createClickHandler(this.onDisconnect, () => this.props.dragging)}\r\n        />\r\n      ) : null;\r\n    const exitClasses: string = cx({\r\n      [styles.exit]: true,\r\n      'plumb-exit': true,\r\n      [styles.translating]: this.props.translating,\r\n      [styles.unnamed_exit]: name == null,\r\n      [styles.missing_localization]: name && this.props.translating && !localized,\r\n      [styles.confirm_delete]: confirmDelete\r\n    });\r\n\r\n    const activity = this.getSegmentCount();\r\n    const recents = this.getRecentMessages();\r\n\r\n    const events = this.context.config.mutable\r\n      ? createClickHandler(\r\n          this.handleClick,\r\n          () => {\r\n            return this.props.dragging;\r\n          },\r\n          this.handleMouseDown\r\n        )\r\n      : {};\r\n\r\n    return (\r\n      <div className={exitClasses}>\r\n        {name ? <div className={nameStyle}>{name}</div> : null}\r\n        <div\r\n          ref={(ref: HTMLDivElement) => (this.ele = ref)}\r\n          {...events}\r\n          id={`${this.props.node.uuid}:${this.props.exit.uuid}`}\r\n          className={dragNodeClasses}\r\n        >\r\n          {confirm}\r\n        </div>\r\n        {activity}\r\n        {recents}\r\n        {renderIf(this.state.showDragHelper)(<DragHelper />)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (\r\n  {\r\n    flowContext: {\r\n      definition: { localization }\r\n    },\r\n    editorState: { translating, language, dragActive, activity }\r\n  }: AppState,\r\n  props: ExitPassedProps\r\n) => {\r\n  // see if we have some passed in (simulated) messages\r\n  let recentMessages: RecentMessage[] = null;\r\n  const key = getExitActivityKey(props.exit);\r\n  if (key in (activity.recentMessages || {})) {\r\n    recentMessages = activity.recentMessages[key];\r\n  }\r\n\r\n  const segmentCount = activity.segments[getExitActivityKey(props.exit)] || 0;\r\n  return {\r\n    dragging: dragActive,\r\n    segmentCount,\r\n    translating,\r\n    language,\r\n    localization,\r\n    recentMessages\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\r\n  bindActionCreators({ disconnectExit }, dispatch);\r\n\r\nconst ConnectedExit = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExitComp);\r\n\r\nexport default ConnectedExit;\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport classNames from 'classnames/bind';\r\nimport Counter from 'components/counter/Counter';\r\nimport ActionWrapper from 'components/flow/actions/action/Action';\r\nimport ExitComp from 'components/flow/exit/Exit';\r\nimport {\r\n  getCategoriesForExit,\r\n  getResultName,\r\n  getVisibleActions,\r\n  filterIssuesForAction\r\n} from 'components/flow/node/helpers';\r\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\r\nimport shared from 'components/shared.module.scss';\r\nimport TitleBar from 'components/titlebar/TitleBar';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { Types } from 'config/interfaces';\r\nimport { getType, getTypeConfig } from 'config/typeConfigs';\r\nimport { AnyAction, Exit, FlowNode, FlowIssue } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport FlipMove from 'react-flip-move';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { DebugState } from 'store/editor';\r\nimport { AssetMap, RenderNode, Asset } from 'store/flowContext';\r\nimport AppState from 'store/state';\r\nimport {\r\n  DispatchWithState,\r\n  MergeEditorState,\r\n  mergeEditorState,\r\n  OnAddToNode,\r\n  onAddToNode,\r\n  OnOpenNodeEditor,\r\n  onOpenNodeEditor,\r\n  RemoveNode,\r\n  removeNode\r\n} from 'store/thunks';\r\nimport { ClickHandler, createClickHandler } from 'utils';\r\n\r\nimport styles from './Node.module.scss';\r\nimport { hasIssues } from '../helpers';\r\nimport MountScroll from 'components/mountscroll/MountScroll';\r\n\r\nexport interface NodePassedProps {\r\n  nodeUUID: string;\r\n  plumberMakeTarget: (id: string) => void;\r\n  plumberRecalculate: (id: string) => void;\r\n  plumberMakeSource: (id: string) => void;\r\n  plumberRemove: (id: string) => void;\r\n  plumberConnectExit: (\r\n    node: FlowNode,\r\n    exit: Exit,\r\n    onConnection: (activityId: string, recentMessagesId: string) => void\r\n  ) => void;\r\n  plumberUpdateClass: (\r\n    node: FlowNode,\r\n    exit: Exit,\r\n    className: string,\r\n    confirmDelete: boolean\r\n  ) => void;\r\n  startingNode: boolean;\r\n  onlyNode: boolean;\r\n  selected: boolean;\r\n  ghostRef?: any;\r\n  ghost?: boolean;\r\n}\r\n\r\nexport interface NodeStoreProps {\r\n  results: AssetMap;\r\n  language: Asset;\r\n  languages: AssetMap;\r\n  activeCount: number;\r\n  translating: boolean;\r\n  simulating: boolean;\r\n  debug: DebugState;\r\n  renderNode: RenderNode;\r\n  issues: FlowIssue[];\r\n  onAddToNode: OnAddToNode;\r\n  onOpenNodeEditor: OnOpenNodeEditor;\r\n  removeNode: RemoveNode;\r\n  mergeEditorState: MergeEditorState;\r\n  scrollToNode: string;\r\n  scrollToAction: string;\r\n}\r\n\r\nexport type NodeProps = NodePassedProps & NodeStoreProps;\r\n\r\nconst cx: any = classNames.bind({ ...shared, ...styles });\r\n\r\nconst EMPTY: any[] = [];\r\n/**\r\n * A single node in the rendered flow\r\n */\r\nexport class NodeComp extends React.PureComponent<NodeProps> {\r\n  public ele: HTMLDivElement;\r\n  private firstAction: any;\r\n  private clicking: boolean;\r\n  private events: ClickHandler;\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  constructor(props: NodeProps, context: any) {\r\n    super(props);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/Ref$/, /^on/, /^get/, /^handle/]\r\n    });\r\n\r\n    this.events = context.config.mutable\r\n      ? createClickHandler(this.onClick, this.handleShouldCancelClick)\r\n      : {};\r\n  }\r\n\r\n  private handleShouldCancelClick(): boolean {\r\n    return this.props.selected;\r\n  }\r\n\r\n  private eleRef(ref: HTMLDivElement): HTMLDivElement {\r\n    return (this.ele = ref);\r\n  }\r\n\r\n  private getGhostListener(): any {\r\n    return (e: MouseEvent) => {\r\n      if (this.ele) {\r\n        let canvas = this.ele.parentElement;\r\n        if (this.ele.parentElement.parentElement) {\r\n          canvas = this.ele.parentElement.parentElement;\r\n        }\r\n\r\n        const canvasBounds = canvas.getBoundingClientRect();\r\n\r\n        // move our ghost node into position\r\n        const width = this.ele.getBoundingClientRect().width;\r\n        const left = e.pageX - width / 2 - 15 - canvasBounds.left;\r\n        const top = e.pageY - canvasBounds.top - window.scrollY;\r\n        const style = this.ele.style;\r\n        style.left = left + 'px';\r\n        style.top = top + 'px';\r\n\r\n        // Hide ourselves if there's a drop target\r\n        style.visibility = document.querySelector('.plumb-drop-hover') ? 'hidden' : 'visible';\r\n      }\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    // Make ourselves a target\r\n    this.props.plumberMakeTarget(this.props.renderNode.node.uuid);\r\n\r\n    // Move our drag node around as necessary\r\n    if (this.props.ghost) {\r\n      // We store our listener on the window so flow can remove it\r\n      // this is a bit hacky but allows us to remove our dependency on jquery\r\n      // TODO: rework ghost node to manage its location like other nodes\r\n      const ghostListener: any = this.getGhostListener();\r\n      (window as any).ghostListener = ghostListener;\r\n      document.addEventListener('mousemove', ghostListener);\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: any): void {\r\n    // traceUpdate(this, prevProps);\r\n\r\n    // when our exits change, we need to recalculate the endpoints\r\n    if (!this.props.ghost) {\r\n      try {\r\n        this.props.plumberRecalculate(this.props.renderNode.node.uuid);\r\n        for (const exit of this.props.renderNode.node.exits) {\r\n          this.props.plumberRecalculate(this.props.renderNode.node.uuid + ':' + exit.uuid);\r\n        }\r\n      } catch (error) {\r\n        // console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this.props.plumberRemove(this.props.renderNode.node.uuid);\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  private handleUUIDClicked(event: React.MouseEvent<HTMLElement>): void {\r\n    const selection = window.getSelection();\r\n    const range = document.createRange();\r\n    range.selectNodeContents(event.currentTarget);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    document.execCommand('copy');\r\n    selection.removeAllRanges();\r\n    console.log(event.currentTarget.textContent + ' copied to clipboard.');\r\n  }\r\n\r\n  private handleAddToNode(): void {\r\n    this.props.onAddToNode(this.props.renderNode.node);\r\n  }\r\n\r\n  // Applies only to router nodes;\r\n  // ./Action/Action handles click logic for Action nodes.\r\n  private onClick(event: React.MouseEvent<HTMLElement>): void {\r\n    this.props.onOpenNodeEditor({\r\n      originalNode: this.props.renderNode\r\n    });\r\n  }\r\n\r\n  private handleRemoval(event: React.MouseEvent<HTMLElement>): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.props.removeNode(this.props.renderNode.node);\r\n  }\r\n\r\n  private getExits(): JSX.Element[] {\r\n    if (this.props.renderNode.node.exits) {\r\n      return this.props.renderNode.node.exits.map((exit: Exit, idx: number) => (\r\n        <ExitComp\r\n          key={exit.uuid}\r\n          node={this.props.renderNode.node}\r\n          categories={getCategoriesForExit(this.props.renderNode, exit)}\r\n          exit={exit}\r\n          showDragHelper={this.props.onlyNode && idx === 0}\r\n          plumberMakeSource={this.props.plumberMakeSource}\r\n          plumberRemove={this.props.plumberRemove}\r\n          plumberConnectExit={this.props.plumberConnectExit}\r\n          plumberUpdateClass={this.props.plumberUpdateClass}\r\n        />\r\n      ));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private isSelected(): boolean {\r\n    return this.props.selected;\r\n  }\r\n\r\n  private isStartNodeVisible(): boolean {\r\n    return this.props.startingNode;\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  private renderDebug(): JSX.Element {\r\n    if (this.props.debug) {\r\n      if (this.props.debug.showUUIDs) {\r\n        return (\r\n          <span\r\n            id={`uuid-${this.props.renderNode.node.uuid}`}\r\n            onClick={this.handleUUIDClicked}\r\n            className={styles.uuid}\r\n          >\r\n            {this.props.renderNode.node.uuid}\r\n          </span>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const actions: JSX.Element[] = [];\r\n\r\n    let actionList: JSX.Element = null;\r\n    if (this.props.renderNode.node.actions) {\r\n      // Save the first reference off to manage our clicks\r\n      let firstRef: { ref: (ref: any) => any } | {} = {\r\n        ref: (ref: any) => (this.firstAction = ref)\r\n      };\r\n\r\n      getVisibleActions(this.props.renderNode).forEach((action: AnyAction, idx: number) => {\r\n        const actionConfig = getTypeConfig(action.type);\r\n\r\n        const issues: FlowIssue[] = filterIssuesForAction(\r\n          this.props.nodeUUID,\r\n          action,\r\n          this.props.issues\r\n        );\r\n\r\n        if (actionConfig.hasOwnProperty('component') && actionConfig.component) {\r\n          const { component: ActionComponent } = actionConfig;\r\n          if (actionConfig.massageForDisplay) {\r\n            actionConfig.massageForDisplay(action);\r\n          }\r\n\r\n          actions.push(\r\n            <ActionWrapper\r\n              {...firstRef}\r\n              key={action.uuid}\r\n              renderNode={this.props.renderNode}\r\n              selected={this.props.selected}\r\n              action={action}\r\n              first={idx === 0}\r\n              issues={issues}\r\n              render={(anyAction: AnyAction) => {\r\n                return (\r\n                  <ActionComponent\r\n                    {...anyAction}\r\n                    languages={this.props.languages}\r\n                    issues={issues}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        firstRef = {};\r\n      });\r\n\r\n      actionList =\r\n        actions.length > 0 ? (\r\n          <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\" duration={300} easing=\"ease-out\">\r\n            {actions}\r\n          </FlipMove>\r\n        ) : null;\r\n    }\r\n\r\n    let header: JSX.Element = null;\r\n    let addActions: JSX.Element = null;\r\n    let summary: JSX.Element = null;\r\n\r\n    // Router node display logic\r\n    const type = getType(this.props.renderNode);\r\n    if (type !== Types.execute_actions) {\r\n      const config = getTypeConfig(type);\r\n      let title: string = config.name;\r\n\r\n      const switchRouter = getSwitchRouter(this.props.renderNode.node);\r\n      if (switchRouter) {\r\n        if (type === Types.split_by_contact_field && this.props.renderNode.ui.config.operand.name) {\r\n          title = `Split by ${this.props.renderNode.ui.config.operand.name}`;\r\n        }\r\n      }\r\n\r\n      const resultName = getResultName(this.props.renderNode.node);\r\n      if (resultName) {\r\n        summary = (\r\n          <div {...this.events} className={styles.save_result}>\r\n            <div className={styles.save_as}>Save as </div>\r\n            <div className={styles.result_name}>{resultName}</div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      if (\r\n        title === null &&\r\n        (type === Types.split_by_run_result || type === Types.split_by_run_result_delimited)\r\n      ) {\r\n        title = `Split by ${this.props.results[this.props.renderNode.ui.config.operand.id].name}`;\r\n      }\r\n\r\n      if (title === null) {\r\n        title = config.name;\r\n      }\r\n\r\n      if (!this.props.renderNode.node.actions || !this.props.renderNode.node.actions.length) {\r\n        // Router headers are introduced here while action headers are introduced in ./Action/Action\r\n        header = (\r\n          // Wrap in a relative parent so it honors node clipping\r\n          <div style={{ position: 'relative' }}>\r\n            <div {...this.events}>\r\n              <TitleBar\r\n                __className={\r\n                  (shared as any)[\r\n                    hasIssues(this.props.issues, this.props.translating, this.props.language)\r\n                      ? 'missing'\r\n                      : config.type\r\n                  ]\r\n                }\r\n                showRemoval={!this.props.translating}\r\n                onRemoval={this.handleRemoval}\r\n                shouldCancelClick={this.handleShouldCancelClick}\r\n                title={title}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      // Don't show add actions option if we are translating\r\n      if (!this.props.translating && this.context.config.mutable) {\r\n        addActions = (\r\n          <div\r\n            className={styles.add}\r\n            {...createClickHandler(this.handleAddToNode, this.handleShouldCancelClick)}\r\n          >\r\n            <span className=\"fe-add\" />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    const exits: JSX.Element[] = this.getExits();\r\n\r\n    const classes = cx({\r\n      'plumb-drag': true,\r\n      [styles.ghost]: this.props.ghost,\r\n      [styles.flow_start]: this.isStartNodeVisible(),\r\n      [styles.selected]: this.isSelected(),\r\n      [styles.immutable]: !this.context.config.mutable\r\n    });\r\n\r\n    const uuid: JSX.Element = this.renderDebug();\r\n\r\n    const body = (\r\n      <div className={styles.node}>\r\n        {this.isStartNodeVisible() ? (\r\n          <div className={styles.flow_start_message}>Flow Start</div>\r\n        ) : null}\r\n\r\n        {uuid}\r\n        <Counter\r\n          count={this.props.activeCount}\r\n          containerStyle={styles.active}\r\n          countStyle={''}\r\n          keepVisible={this.props.simulating}\r\n          onClick={() => {\r\n            if (this.context.config.onActivityClicked) {\r\n              this.context.config.onActivityClicked(this.props.nodeUUID, this.props.activeCount);\r\n            }\r\n          }}\r\n        />\r\n\r\n        <div className={styles.cropped}>\r\n          {header}\r\n          {actionList}\r\n          {summary}\r\n        </div>\r\n\r\n        <div className={`${styles.exit_table}`}>\r\n          <div className={styles.exits} {...this.events}>\r\n            {exits}\r\n          </div>\r\n          {addActions}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const renderedNode = (\r\n      <div\r\n        id={this.props.renderNode.node.uuid}\r\n        className={`${styles.node_container} ${classes}`}\r\n        ref={this.eleRef}\r\n      >\r\n        {!this.props.scrollToAction &&\r\n        this.props.scrollToNode &&\r\n        this.props.scrollToNode === this.props.nodeUUID ? (\r\n          <MountScroll pulseAfterScroll={true}>{body}</MountScroll>\r\n        ) : (\r\n          body\r\n        )}\r\n      </div>\r\n    );\r\n    return renderedNode;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (\r\n  {\r\n    flowContext: {\r\n      nodes,\r\n      issues,\r\n      assetStore: {\r\n        results: { items: results },\r\n        languages: { items: languages }\r\n      }\r\n    },\r\n    editorState: {\r\n      translating,\r\n      debug,\r\n      ghostNode,\r\n      simulating,\r\n      activity,\r\n      language,\r\n      scrollToAction,\r\n      scrollToNode\r\n    }\r\n  }: AppState,\r\n  props: NodePassedProps\r\n) => {\r\n  let renderNode: RenderNode = null;\r\n\r\n  // if we match our ghost node use that\r\n  if (ghostNode && ghostNode.node.uuid === props.nodeUUID) {\r\n    renderNode = ghostNode;\r\n  }\r\n\r\n  // otherwise look up our node from the list\r\n  else if (props.nodeUUID in nodes) {\r\n    renderNode = nodes[props.nodeUUID];\r\n  }\r\n\r\n  if (!renderNode) {\r\n    throw Error(\"Couldn't find node for \" + props.nodeUUID);\r\n  }\r\n\r\n  const activeCount = activity.nodes[props.nodeUUID] || 0;\r\n\r\n  // only set our scroll flags if they affect us\r\n  const scrollNode = scrollToNode && scrollToNode === props.nodeUUID ? scrollToNode : null;\r\n  const scrollAction = scrollToAction && scrollNode ? scrollToAction : null;\r\n\r\n  return {\r\n    issues: (issues || {})[props.nodeUUID] || EMPTY,\r\n    results,\r\n    language,\r\n    languages,\r\n    activeCount,\r\n    translating,\r\n    debug,\r\n    renderNode,\r\n    simulating,\r\n    scrollToNode: scrollNode,\r\n    scrollToAction: scrollAction\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\r\n  bindActionCreators(\r\n    {\r\n      onAddToNode,\r\n      onOpenNodeEditor,\r\n      removeNode,\r\n      mergeEditorState\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  null,\r\n  { forwardRef: true }\r\n)(NodeComp);\r\n","import Dialog, { ButtonSet } from 'components/dialog/Dialog';\r\nimport { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\r\nimport Modal from 'components/modal/Modal';\r\nimport styles from 'components/simulator/LogEvent.module.scss';\r\nimport { Types } from 'config/interfaces';\r\nimport { Flow, Group, Label } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { createUUID, getURNPath } from 'utils';\r\nimport i18n from 'config/i18n';\r\nimport { Trans } from 'react-i18next';\r\n\r\nconst MAP_THUMB = require('static/images/map.jpg');\r\n\r\ninterface MsgProps {\r\n  text: string;\r\n  uuid: string;\r\n  urn: string;\r\n  attachments?: string[];\r\n  quick_replies?: string[];\r\n}\r\n\r\ninterface WebRequestLog {\r\n  url: string;\r\n  request: string;\r\n  response: string;\r\n}\r\n\r\ninterface ClassifierIntent {\r\n  name: string;\r\n  confidence: number;\r\n}\r\n\r\ninterface ClassifierEntity {\r\n  value: string;\r\n  confidence: number;\r\n}\r\n\r\nexport interface EventProps {\r\n  step_uuid: string;\r\n  uuid?: string;\r\n  created_on?: string;\r\n  type?: string;\r\n  field?: { key: string; name: string };\r\n  field_uuid?: string;\r\n  result_name?: string;\r\n  text?: string;\r\n  name?: string;\r\n  value?: string | { text: string };\r\n  body?: string;\r\n  addresses?: string[];\r\n  to?: string[];\r\n  subject?: string;\r\n  url?: string;\r\n  status?: string;\r\n  status_code?: number;\r\n  request?: string;\r\n  response?: string;\r\n  resthook?: string;\r\n  base_language?: string;\r\n  language?: string;\r\n  translations?: { [lang: string]: { [text: string]: string } };\r\n  groups?: Group[];\r\n  flow?: Flow;\r\n  groups_added?: Group[];\r\n  groups_removed?: Group[];\r\n  labels?: Label[];\r\n  msg?: MsgProps;\r\n  http_logs?: WebRequestLog[];\r\n  extra?: any;\r\n  urns?: string[];\r\n  service?: string;\r\n  classifier?: { uuid: string; name: string };\r\n  ticketer?: { uuid: string; name: string };\r\n}\r\n\r\ninterface FlowEvent {\r\n  step_uuid: string;\r\n  type: string;\r\n}\r\n\r\ninterface AirtimeTransferEvent extends FlowEvent {\r\n  actual_amount: number;\r\n  desired_amount: number;\r\n  currency: string;\r\n  http_logs: WebRequestLog[];\r\n  recipient: string;\r\n  sender: string;\r\n}\r\n\r\ninterface LogEventState {\r\n  detailsVisible: boolean;\r\n}\r\n\r\nexport enum Direction {\r\n  MT,\r\n  MO\r\n}\r\n\r\nconst getStyleForDirection = (direction: Direction): string => {\r\n  return direction === Direction.MO ? styles.msg_received : styles.send_msg;\r\n};\r\n\r\nconst renderError = (error: string): JSX.Element => {\r\n  return (\r\n    <div className={styles.error}>\r\n      <span>Error: {error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderInfo = (info: string): JSX.Element => {\r\n  // localized text can have html entities, so this isn't as dangerous as it looks\r\n  return (\r\n    <div key={info} className={styles.info}>\r\n      <span dangerouslySetInnerHTML={{ __html: info }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderAttachment = (attachment: string): JSX.Element => {\r\n  const idx = attachment.indexOf(':');\r\n  if (idx > -1) {\r\n    const type = attachment.substr(0, idx);\r\n    const url = attachment.substr(idx + 1);\r\n    if (type.startsWith('audio')) {\r\n      return (\r\n        <div className={styles.audio_attachment}>\r\n          <div className={styles.media_player}>\r\n            <MediaPlayer url={url} />\r\n          </div>\r\n          <div className={styles.audio_text}>Audio Recording</div>\r\n        </div>\r\n      );\r\n    } else if (type.startsWith('image')) {\r\n      return <img src={url} alt=\"Attachment\" />;\r\n    } else if (type.startsWith('geo')) {\r\n      return <img src={MAP_THUMB} alt=\"Attachment\" />;\r\n    } else if (type.startsWith('video')) {\r\n      return (\r\n        <div className={styles.video_attachment}>\r\n          <video controls={true} src={url} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst renderMessage = (text: string, attachments: string[], direction: Direction): JSX.Element => {\r\n  const attaches = attachments || [];\r\n  return (\r\n    <div className={getStyleForDirection(direction)}>\r\n      {attaches.map((attachment: string) => (\r\n        <div key={text + attachment}>{renderAttachment(attachment)}</div>\r\n      ))}\r\n      {text\r\n        ? text.split('\\n').map((item, key) => {\r\n            return (\r\n              <div key={createUUID()} className={styles.msg_text}>\r\n                {item}\r\n              </div>\r\n            );\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Viewer for log events\r\n */\r\nexport default class LogEvent extends React.Component<EventProps, LogEventState> {\r\n  constructor(props: EventProps) {\r\n    super(props);\r\n    this.state = {\r\n      detailsVisible: false\r\n    };\r\n\r\n    this.showDetails = this.showDetails.bind(this);\r\n    this.getButtons = this.getButtons.bind(this);\r\n  }\r\n\r\n  private getButtons(): ButtonSet {\r\n    return {\r\n      primary: {\r\n        name: 'Ok',\r\n        onClick: () => {\r\n          this.setState({ detailsVisible: false });\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private showDetails(): void {\r\n    this.setState({ detailsVisible: true });\r\n  }\r\n\r\n  private renderGroupsChanged(): JSX.Element {\r\n    let parts: string[] = [];\r\n    if (this.props.groups_added) {\r\n      const info = i18n.t('simulator.added_to_group', 'Added to ');\r\n      parts.push(info + this.renderValueList(this.props.groups_added.map(group => group.name)));\r\n    }\r\n    if (this.props.groups_removed) {\r\n      const info = i18n.t('simulator.removed_from_group', 'Removed from ');\r\n      parts.push(info + this.renderValueList(this.props.groups_removed.map(group => group.name)));\r\n    }\r\n\r\n    return renderInfo(parts.join('. '));\r\n  }\r\n\r\n  private renderLabelsAdded(): JSX.Element {\r\n    let info = i18n.t('simulator.input_labels_added', 'Message labeled with ');\r\n\r\n    return renderInfo(info + this.renderValueList(this.props.labels.map(label => label.name)));\r\n  }\r\n\r\n  private renderEmailSent(): JSX.Element {\r\n    const recipients = this.props.to || this.props.addresses;\r\n    return this.renderClickable(\r\n      <div className={styles.info + ' ' + styles.email}>\r\n        <Trans\r\n          i18nKey=\"simulator.sent_email.summary\"\r\n          values={{ recipients: this.renderValueList(recipients), subject: this.props.subject }}\r\n        >\r\n          Sent email to [[recipients]] with subject \"[[subject]]\"\r\n        </Trans>\r\n      </div>,\r\n      <Dialog\r\n        title={i18n.t('simulator.sent_email.title', 'Email Details')}\r\n        headerClass={Types.send_email}\r\n        buttons={this.getButtons()}\r\n        noPadding={true}\r\n      >\r\n        <div className={styles.email_details}>\r\n          <div className={styles.to}>\r\n            {i18n.t('email.to', 'To')}: {this.renderValueList(recipients)}\r\n          </div>\r\n          <div className={styles.subject}>\r\n            {i18n.t('email.subject', 'Subject')}: {this.props.subject}\r\n          </div>\r\n          <div className={styles.body}>{this.props.body}</div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  private renderHTTPRequest(headerClass: Types, log: WebRequestLog): JSX.Element {\r\n    return this.renderClickable(\r\n      <div className={styles.info + ' ' + styles.webhook}>\r\n        <span>Called {log.url}</span>\r\n      </div>,\r\n      <Dialog\r\n        title={i18n.t('simulator.httplog_dialog', 'HTTP Request Details')}\r\n        headerClass={headerClass}\r\n        buttons={this.getButtons()}\r\n        noPadding={true}\r\n      >\r\n        <div className={styles.webhook_details}>\r\n          <div className={''}>{log.request}</div>\r\n          <div className={styles.response}>{log.response}</div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  private renderWebhook(headerClass: Types): JSX.Element {\r\n    if (this.props.http_logs) {\r\n      return (\r\n        <>\r\n          {this.props.http_logs.map((log: WebRequestLog) => {\r\n            return this.renderHTTPRequest(headerClass, log);\r\n          })}\r\n        </>\r\n      );\r\n    }\r\n    if (this.props.url) {\r\n      return this.renderHTTPRequest(headerClass, this.props as WebRequestLog);\r\n    }\r\n  }\r\n\r\n  private renderClickable(element: JSX.Element, details: JSX.Element): JSX.Element {\r\n    return (\r\n      <div key={this.props.step_uuid}>\r\n        <div className={styles.has_detail} onClick={this.showDetails}>\r\n          {element}\r\n        </div>\r\n        <Modal show={this.state.detailsVisible}>\r\n          <div className={styles.event_viewer}>{details}</div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderClassification(): JSX.Element {\r\n    return (\r\n      <table className={styles.classification}>\r\n        <tbody>\r\n          {(this.props.extra.intents || []).map((intent: ClassifierIntent) => (\r\n            <tr key={intent.name + intent.confidence}>\r\n              <td>{intent.name}</td>\r\n              <td>intent</td>\r\n              <td>{intent.confidence.toFixed(3)}</td>\r\n            </tr>\r\n          ))}\r\n\r\n          {Object.keys(this.props.extra.entities || []).map((key: string) => {\r\n            const entities = this.props.extra.entities[key];\r\n            return entities.map((entity: ClassifierEntity) =>\r\n              key !== entity.value ? (\r\n                <tr key={entity.value + entity.confidence}>\r\n                  <td>{entity.value}</td>\r\n                  <td>{key}</td>\r\n                  <td>{entity.confidence.toFixed(3)}</td>\r\n                </tr>\r\n              ) : null\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  public renderLogEvent(): JSX.Element {\r\n    if (this.props.extra && this.props.extra.intents) {\r\n      return this.renderClassification();\r\n    }\r\n\r\n    switch (this.props.type) {\r\n      case 'msg_received':\r\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MO);\r\n      case 'msg_created':\r\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\r\n      case 'ivr_created':\r\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\r\n      case 'error':\r\n        return renderError(this.props.text);\r\n      case 'failure':\r\n        return renderError(this.props.text);\r\n      case 'msg_wait':\r\n        return renderInfo(i18n.t('simulator.msg_wait', 'Waiting for reply'));\r\n      case 'contact_groups_changed':\r\n        return this.renderGroupsChanged();\r\n      case 'contact_urns_changed':\r\n        return renderInfo('Added a URN for the contact');\r\n      case 'contact_field_changed':\r\n        const value = this.getValue(this.props.value);\r\n        if (value !== '') {\r\n          return renderInfo(\r\n            i18n.t('simulator.contact_field_changed', 'Set contact \"[[field]]\" to \"[[value]]\"', {\r\n              field: this.props.field.name,\r\n              value: this.getValue(this.props.value)\r\n            })\r\n          );\r\n        } else {\r\n          return renderInfo(\r\n            i18n.t('simulator.contact_field_cleared', 'Cleared contact \"[[field]]\"', {\r\n              field: this.props.field.name\r\n            })\r\n          );\r\n        }\r\n      case 'run_result_changed':\r\n        return renderInfo(\r\n          i18n.t('simulator.run_result_changed', 'Set result \"[[field]]\" to \"[[value]]\"', {\r\n            field: this.props.name,\r\n            value: this.getValue(this.props.value)\r\n          })\r\n        );\r\n      case 'contact_name_changed':\r\n        return renderInfo(\r\n          i18n.t('simulator.contact_name_changed', 'Set contact name to \"[[name]]\"', {\r\n            name: this.props.name\r\n          })\r\n        );\r\n      case 'email_created':\r\n      case 'email_sent':\r\n        return this.renderEmailSent();\r\n      case 'broadcast_created':\r\n        return renderMessage(\r\n          this.props.translations[this.props.base_language].text,\r\n          this.props.msg ? this.props.msg.attachments : [],\r\n          Direction.MT\r\n        );\r\n      case 'resthook_called':\r\n        return renderInfo(\r\n          i18n.t('simulator.resthook_called', 'Triggered flow event \"[[resthook]]\"', {\r\n            resthook: this.props.resthook\r\n          })\r\n        );\r\n      case 'service_called':\r\n        if (this.props.service === 'classifier') {\r\n          return this.renderWebhook(Types.call_classifier);\r\n        }\r\n        break;\r\n      case 'webhook_called':\r\n        return this.renderWebhook(Types.call_webhook);\r\n      case 'flow_entered':\r\n        return renderInfo(\r\n          i18n.t('simulator.flow_entered', 'Entered flow \"[[flow]]\"', {\r\n            flow: this.props.flow.name\r\n          })\r\n        );\r\n      case 'session_triggered':\r\n        return renderInfo(\r\n          i18n.t('simulator.session_triggered', 'Started somebody else in \"[[flow]]\"', {\r\n            flow: this.props.flow.name\r\n          })\r\n        );\r\n      case 'contact_language_changed':\r\n        return renderInfo(\r\n          i18n.t('simulator.contact_language_changed', 'Set preferred language to \"[[language]]\"', {\r\n            language: this.props.language\r\n          })\r\n        );\r\n      case 'contact_status_changed':\r\n        return renderInfo(\r\n          i18n.t('simulator.contact_status_changed', 'Set status to \"[[status]]\"', {\r\n            status: this.props.status\r\n          })\r\n        );\r\n      case 'info':\r\n        return renderInfo(this.props.text);\r\n      case 'input_labels_added':\r\n        return this.renderLabelsAdded();\r\n      case 'environment_refreshed':\r\n        return null;\r\n      case 'ticket_opened':\r\n        return renderInfo(\r\n          i18n.t('simulator.ticket_opened', 'Ticket opened with subject \"[[subject]]\"', {\r\n            subject: this.props.subject\r\n          })\r\n        );\r\n      case 'airtime_transferred':\r\n        const event = this.props as AirtimeTransferEvent;\r\n        return (\r\n          <>\r\n            {this.renderWebhook(Types.transfer_airtime)}\r\n\r\n            {renderInfo(\r\n              i18n.t(\r\n                'simulator.airtime_transferred',\r\n                'Transferred [[amount]] [[currency]] to [[recipient]]',\r\n                {\r\n                  amount: event.actual_amount,\r\n                  currency: event.currency,\r\n                  recipient: getURNPath(event.recipient)\r\n                }\r\n              )\r\n            )}\r\n          </>\r\n        );\r\n    }\r\n\r\n    // should only get here if we are get an unexpected event\r\n    console.log('Simulator render missing', this.props);\r\n    return null;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return <div className={styles.evt}>{this.renderLogEvent()}</div>;\r\n  }\r\n\r\n  /**\r\n   * Helper to render a list of values with each value quoted\r\n   */\r\n  private renderValueList(values: string[]): string {\r\n    let text = '';\r\n    let delim = '';\r\n    values.forEach(value => {\r\n      text += `${delim}\"${value}\"`;\r\n      delim = ', ';\r\n    });\r\n    return text;\r\n  }\r\n\r\n  /**\r\n   * Helper for value fields which can be an object (contact_field_changed) or string (run_result_changed)\r\n   */\r\n  private getValue(value: string | { text: string } | null): string {\r\n    if (!value) {\r\n      return '';\r\n    } else if (typeof value === 'string') {\r\n      return value;\r\n    }\r\n    return value.text;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\ninterface CustomStyles {\r\n  content: { [cssProperty: string]: string | number };\r\n}\r\n\r\nexport interface ModalProps {\r\n  show: boolean;\r\n  onClose?(): void;\r\n\r\n  onModalOpen?: any;\r\n  width?: string;\r\n}\r\n\r\n// A base modal for displaying messages or performing single button actions\r\nexport default class Modal extends React.Component<ModalProps> {\r\n  public render(): JSX.Element {\r\n    const customStyles: CustomStyles = {\r\n      content: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop: '40px',\r\n        bottom: 'initial',\r\n        padding: 'none',\r\n        borderRadius: 'none',\r\n        outline: 'none',\r\n        width: this.props.width ? this.props.width : '700px',\r\n        border: 'none'\r\n      }\r\n    };\r\n    return (\r\n      <ReactModal\r\n        ariaHideApp={false}\r\n        isOpen={this.props.show}\r\n        onAfterOpen={this.props.onModalOpen}\r\n        onRequestClose={this.props.onClose}\r\n        style={customStyles}\r\n        shouldCloseOnOverlayClick={false}\r\n        contentLabel=\"Modal\"\r\n      >\r\n        {this.props.children}\r\n      </ReactModal>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport { getDraggedFrom } from 'components/helpers';\r\nimport Modal from 'components/modal/Modal';\r\nimport { Type } from 'config/interfaces';\r\nimport { Action, AnyAction, FlowDefinition, FlowIssue } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { UpdateUserAddingAction } from 'store/actionTypes';\r\nimport { Asset, AssetStore, RenderNode } from 'store/flowContext';\r\nimport { NodeEditorSettings, updateUserAddingAction } from 'store/nodeEditor';\r\nimport AppState from 'store/state';\r\nimport {\r\n  AddAsset,\r\n  addAsset,\r\n  DispatchWithState,\r\n  GetState,\r\n  HandleTypeConfigChange,\r\n  handleTypeConfigChange,\r\n  LocalizationUpdates,\r\n  MergeEditorState,\r\n  mergeEditorState,\r\n  NoParamsAC,\r\n  onUpdateAction,\r\n  OnUpdateAction,\r\n  OnUpdateLocalizations,\r\n  onUpdateLocalizations,\r\n  OnUpdateRouter,\r\n  onUpdateRouter,\r\n  resetNodeEditingState\r\n} from 'store/thunks';\r\nimport { CompletionSchema } from 'utils/completion';\r\nimport { LocalizationFormProps } from 'components/flow/props';\r\n\r\nexport type UpdateLocalizations = (language: string, changes: LocalizationUpdates) => void;\r\n\r\n// TODO: Remove use of Function\r\n// tslint:disable:ban-types\r\nexport interface NodeEditorPassedProps {\r\n  plumberConnectExit: Function;\r\n  helpArticles: { [key: string]: string };\r\n}\r\n\r\nexport interface NodeEditorStoreProps {\r\n  assetStore: AssetStore;\r\n  addAsset: AddAsset;\r\n  language: Asset;\r\n  definition: FlowDefinition;\r\n  translating: boolean;\r\n  typeConfig: Type;\r\n  settings: NodeEditorSettings;\r\n  nodes: { [uuid: string]: RenderNode };\r\n  handleTypeConfigChange: HandleTypeConfigChange;\r\n  resetNodeEditingState: NoParamsAC;\r\n  issues: FlowIssue[];\r\n  mergeEditorState: MergeEditorState;\r\n  onUpdateLocalizations: OnUpdateLocalizations;\r\n  onUpdateAction: OnUpdateAction;\r\n  onUpdateRouter: OnUpdateRouter;\r\n  updateUserAddingAction: UpdateUserAddingAction;\r\n  completionSchema: CompletionSchema;\r\n}\r\n\r\nexport type NodeEditorProps = NodeEditorPassedProps & NodeEditorStoreProps;\r\n\r\nexport interface FormProps {\r\n  // our two ways of updating\r\n  updateRouter(renderNode: RenderNode): void;\r\n  updateAction(action: AnyAction): void;\r\n\r\n  addAsset(assetType: string, asset: Asset): void;\r\n  completionSchema: CompletionSchema;\r\n\r\n  assetStore: AssetStore;\r\n  issues: FlowIssue[];\r\n  helpArticles: { [key: string]: string };\r\n\r\n  nodeSettings?: NodeEditorSettings;\r\n  typeConfig?: Type;\r\n  onTypeChange?(config: Type): void;\r\n  onClose?(canceled: boolean): void;\r\n}\r\n\r\n/* export interface LocalizationProps {\r\n  nodeSettings?: NodeEditorSettings;\r\n  typeConfig?: Type;\r\n  onClose?(canceled: boolean): void;\r\n\r\n  issues: FlowIssue[];\r\n  updateLocalizations: UpdateLocalizations;\r\n  language: Asset;\r\n}*/\r\n\r\nexport class NodeEditor extends React.Component<NodeEditorProps> {\r\n  constructor(props: NodeEditorProps) {\r\n    super(props);\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^close/, /^update/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private updateLocalizations(language: string, changes: LocalizationUpdates) {\r\n    this.props.onUpdateLocalizations(language, changes);\r\n  }\r\n\r\n  public close(canceled: boolean): void {\r\n    // Make sure we re-wire the old connection\r\n    if (canceled) {\r\n      const dragPoint = getDraggedFrom(this.props.settings.originalNode);\r\n      if (dragPoint) {\r\n        const renderNode = this.props.nodes[dragPoint.nodeUUID];\r\n        for (const exit of renderNode.node.exits) {\r\n          if (exit.uuid === dragPoint.exitUUID) {\r\n            // TODO: should this just be taking literal uuids instead of objects?\r\n            this.props.plumberConnectExit(renderNode.node, exit);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.props.resetNodeEditingState();\r\n    this.props.updateUserAddingAction(false);\r\n  }\r\n\r\n  private updateAction(\r\n    action: Action,\r\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\r\n  ): void {\r\n    this.props.onUpdateAction(action, onUpdated);\r\n  }\r\n\r\n  private updateRouter(renderNode: RenderNode): void {\r\n    this.props.onUpdateRouter(renderNode);\r\n  }\r\n\r\n  private handleAddAsset(assetType: string, asset: Asset): void {\r\n    this.props.addAsset(assetType, asset);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    if (this.props.settings) {\r\n      const { typeConfig } = this.props;\r\n\r\n      // see if we should use the localization form\r\n      if (this.props.translating) {\r\n        const { localization: LocalizationForm } = typeConfig;\r\n\r\n        if (LocalizationForm) {\r\n          const localizationProps: LocalizationFormProps = {\r\n            updateLocalizations: this.updateLocalizations,\r\n            nodeSettings: this.props.settings,\r\n            onClose: this.close,\r\n            language: this.props.language,\r\n            helpArticles: this.props.helpArticles,\r\n            issues: this.props.issues.filter(\r\n              (issue: FlowIssue) => issue.language === this.props.language.id\r\n            )\r\n          };\r\n\r\n          return (\r\n            <Modal width=\"600px\" show={true}>\r\n              <LocalizationForm {...{ ...localizationProps }} />\r\n            </Modal>\r\n          );\r\n        }\r\n      }\r\n\r\n      const { form: Form } = typeConfig;\r\n\r\n      const formProps: FormProps = {\r\n        assetStore: this.props.assetStore,\r\n        completionSchema: this.props.completionSchema,\r\n        addAsset: this.handleAddAsset,\r\n        updateAction: this.updateAction,\r\n        updateRouter: this.updateRouter,\r\n        nodeSettings: this.props.settings,\r\n        helpArticles: this.props.helpArticles,\r\n        issues: this.props.issues.filter((issue: FlowIssue) => !issue.language),\r\n        typeConfig: this.props.typeConfig,\r\n        onTypeChange: this.props.handleTypeConfigChange,\r\n        onClose: this.close\r\n      };\r\n\r\n      return (\r\n        <Modal width=\"600px\" show={true}>\r\n          <Form {...{ ...formProps }} />\r\n        </Modal>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n/* istanbul ignore next */\r\nconst mapStateToProps = ({\r\n  flowContext: { definition, nodes, assetStore, issues },\r\n  editorState: { language, translating, completionSchema },\r\n  nodeEditor: { typeConfig, settings }\r\n}: AppState) => {\r\n  const filteredIssues = (issues[settings.originalNode.node.uuid] || []).filter(\r\n    (issue: FlowIssue) =>\r\n      !settings.originalAction || settings.originalAction.uuid === issue.action_uuid\r\n  );\r\n\r\n  return {\r\n    issues: filteredIssues,\r\n    language,\r\n    definition,\r\n    nodes,\r\n    translating,\r\n    typeConfig,\r\n    settings,\r\n    assetStore,\r\n    completionSchema\r\n  };\r\n};\r\n\r\n/* istanbul ignore next */\r\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\r\n  bindActionCreators(\r\n    {\r\n      addAsset,\r\n      resetNodeEditingState,\r\n      mergeEditorState,\r\n      handleTypeConfigChange,\r\n      onUpdateLocalizations,\r\n      onUpdateAction,\r\n      onUpdateRouter,\r\n      updateUserAddingAction\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NodeEditor);\r\n","import { EventProps } from 'components/simulator/LogEvent';\r\nimport { FlowDefinition } from 'flowTypes';\r\nimport { AssetStore, AssetType } from 'store/flowContext';\r\nimport { assetMapToList } from 'store/helpers';\r\nimport { createUUID } from 'utils';\r\n\r\nexport const DEFAULT_KEY = '__default__';\r\n\r\nconst SIMULATOR_CHANNEL = {\r\n  uuid: createUUID(),\r\n  name: 'Simulator',\r\n  address: '+12065550000',\r\n  schemes: ['tel'],\r\n  roles: ['send', 'receive']\r\n};\r\n\r\ninterface SimAsset {\r\n  type: AssetType;\r\n  url: string;\r\n  content: any;\r\n}\r\n\r\nexport const getTime = (): string => {\r\n  const now = new Date();\r\n  const mins = now.getMinutes();\r\n  let minStr = '' + mins;\r\n  if (mins < 10) {\r\n    minStr = '0' + mins;\r\n  }\r\n  return Math.abs(12 - now.getHours()) + ':' + minStr;\r\n};\r\n\r\nexport const getSimulationAssets = (assets: AssetStore, flow: FlowDefinition): any => {\r\n  const simAssets: SimAsset[] = [];\r\n\r\n  // our group set asset\r\n  simAssets.push({\r\n    type: AssetType.Group,\r\n    url: assets.groups.endpoint,\r\n    content: assetMapToList(assets.groups.items)\r\n  });\r\n\r\n  // our fields\r\n  simAssets.push({\r\n    type: AssetType.Field,\r\n    url: assets.fields.endpoint,\r\n    content: assetMapToList(assets.fields.items)\r\n  });\r\n\r\n  // our labels\r\n  simAssets.push({\r\n    type: AssetType.Label,\r\n    url: assets.labels.endpoint,\r\n    content: assetMapToList(assets.labels.items)\r\n  });\r\n\r\n  // our channels\r\n  simAssets.push({\r\n    type: AssetType.Channel,\r\n    url: assets.channels.endpoint,\r\n    content: [SIMULATOR_CHANNEL]\r\n  });\r\n\r\n  simAssets.push({\r\n    type: AssetType.Flow,\r\n    url: assets.flows.endpoint + `${flow.uuid}/`,\r\n    content: flow\r\n  });\r\n\r\n  const payload = {\r\n    assets: simAssets,\r\n    asset_server: {\r\n      type_urls: {\r\n        [AssetType.Flow]: assets.flows.endpoint,\r\n        [AssetType.Field]: assets.fields.endpoint,\r\n        [AssetType.Channel]: assets.channels.endpoint,\r\n        [AssetType.Group]: assets.groups.endpoint,\r\n        [AssetType.Label]: assets.labels.endpoint\r\n      }\r\n    }\r\n  };\r\n\r\n  return payload;\r\n};\r\n\r\nexport const isMessage = (event: EventProps): boolean => {\r\n  return !!['msg_created', 'msg_received', 'ivr_created'].find(type => type === event.type);\r\n};\r\n\r\nexport const isMT = (event: EventProps): boolean => {\r\n  return !!['msg_created', 'ivr_created'].find(type => type === event.type);\r\n};\r\n\r\nexport const hasPopulatedKey = (obj: any): boolean => {\r\n  if (obj) {\r\n    Object.keys(obj).forEach((key: string) => {\r\n      return true;\r\n    });\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const pruneEmpty = (obj: any): any => {\r\n  if (typeof obj === 'object') {\r\n    Object.keys(obj).forEach((key: string) => {\r\n      if (\r\n        !obj[key] ||\r\n        (Object.keys(obj[key]).length === 1 && obj[key].hasOwnProperty(DEFAULT_KEY))\r\n      ) {\r\n        delete obj[key];\r\n      } else {\r\n        pruneEmpty(obj[key]);\r\n\r\n        // now see if we have any new leaves\r\n        if (obj[key] !== null && typeof obj[key] === 'object') {\r\n          if (Object.keys(obj[key]).length === 0) {\r\n            delete obj[key];\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return obj;\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as axios from 'axios';\r\nimport { getTime, isMessage, isMT } from 'components/simulator/helpers';\r\nimport LogEvent, { EventProps } from 'components/simulator/LogEvent';\r\nimport ContextExplorer from './ContextExplorer';\r\nimport styles from 'components/simulator/Simulator.module.scss';\r\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\r\nimport { getURL } from 'external';\r\nimport { FlowDefinition, Group, Wait } from 'flowTypes';\r\nimport update from 'immutability-helper';\r\nimport { ReactNode } from 'react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Activity, RecentMessage } from 'store/editor';\r\nimport { AssetStore, RenderNodeMap, Asset } from 'store/flowContext';\r\nimport { getCurrentDefinition } from 'store/helpers';\r\nimport AppState from 'store/state';\r\nimport { DispatchWithState, MergeEditorState } from 'store/thunks';\r\nimport { createUUID } from 'utils';\r\nimport { PopTabType } from 'config/interfaces';\r\n\r\nconst MESSAGE_DELAY_MS = 200;\r\n\r\nconst MAP_THUMB = require('static/images/map.jpg');\r\nconst IMAGE_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_a.jpg';\r\nconst IMAGE_B = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_b.jpg';\r\nconst IMAGE_C = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_c.jpg';\r\nconst AUDIO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_audio_a.mp3';\r\nconst VIDEO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a.mp4';\r\n\r\nconst VIDEO_A_THUMB =\r\n  'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a_thumb.jpg';\r\n\r\ninterface PostMessage {\r\n  text: string;\r\n  uuid: string;\r\n  urn: string;\r\n  attachments: string[];\r\n}\r\n\r\ninterface Message {\r\n  text: string;\r\n  inbound: boolean;\r\n}\r\n\r\nexport interface SimulatorStoreProps {\r\n  nodes: RenderNodeMap;\r\n  definition: FlowDefinition;\r\n  assetStore: AssetStore;\r\n\r\n  activity: Activity;\r\n\r\n  language: Asset;\r\n\r\n  // TODO: take away responsibility of simulator for resetting this\r\n  liveActivity: Activity;\r\n}\r\n\r\nexport interface SimulatorPassedProps {\r\n  mergeEditorState: MergeEditorState;\r\n  onToggled: (visible: boolean, tab: PopTabType) => void;\r\n  popped: string;\r\n}\r\n\r\nexport type SimulatorProps = SimulatorStoreProps & SimulatorPassedProps;\r\n\r\nenum DrawerType {\r\n  audio = 'audio',\r\n  images = 'images',\r\n  videos = 'videos',\r\n  location = 'location',\r\n  digit = 'digit',\r\n  digits = 'digits',\r\n  quickReplies = 'quickReplies'\r\n}\r\n\r\ninterface SimulatorState {\r\n  visible: boolean;\r\n  session?: Session;\r\n  context?: any;\r\n  contact: Contact;\r\n  channel: string;\r\n  events: EventProps[];\r\n  active: boolean;\r\n  time: string;\r\n\r\n  keypadEntry: string;\r\n\r\n  quickReplies?: string[];\r\n\r\n  // are we currently simulating a sprint\r\n  sprinting: boolean;\r\n\r\n  // is our drawer open\r\n  drawerOpen: boolean;\r\n\r\n  // what type of drawer are we looking at\r\n  drawerType?: DrawerType;\r\n\r\n  // how tall our drawer is\r\n  drawerHeight: number;\r\n\r\n  // is our attachment type selection open\r\n  attachmentOptionsVisible: boolean;\r\n\r\n  // if we can see our context explorer\r\n  contextExplorerVisible: boolean;\r\n\r\n  // are we at a wait hint, ie, a forced attachment\r\n  waitingForHint: boolean;\r\n}\r\n\r\ninterface Contact {\r\n  uuid: string;\r\n  urns: string[];\r\n  fields: {};\r\n  groups: Group[];\r\n}\r\n\r\ninterface Step {\r\n  arrived_on: Date;\r\n  uuid: string;\r\n  exit_uuid: string;\r\n  node_uuid: string;\r\n}\r\n\r\ninterface Run {\r\n  path: Step[];\r\n  flow_uuid: string;\r\n  status: string;\r\n  events?: EventProps[];\r\n  wait?: Wait;\r\n}\r\n\r\ninterface RunContext {\r\n  contact: Contact;\r\n  session: Session;\r\n  context?: any;\r\n  events: EventProps[];\r\n}\r\n\r\ninterface Session {\r\n  runs: Run[];\r\n  contact: Contact;\r\n  input?: any;\r\n  wait?: Wait;\r\n}\r\n\r\n/**\r\n * Our dev console for simulating or testing expressions\r\n */\r\nexport class Simulator extends React.Component<SimulatorProps, SimulatorState> {\r\n  private debug: Session[] = [];\r\n  private flows: FlowDefinition[] = [];\r\n  private currentFlow: string;\r\n  private inputBox: HTMLInputElement;\r\n\r\n  private drawerEle: HTMLDivElement;\r\n\r\n  // marks the bottom of our chat\r\n  private bottom: any;\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  constructor(props: SimulatorProps, context: ConfigProviderContext) {\r\n    super(props);\r\n    this.state = {\r\n      active: false,\r\n      visible: false,\r\n      events: [],\r\n      contact: {\r\n        uuid: createUUID(),\r\n        urns: ['tel:+12065551212'],\r\n        fields: {},\r\n        groups: []\r\n      },\r\n      keypadEntry: '',\r\n      drawerHeight: 0,\r\n      channel: createUUID(),\r\n      time: getTime(),\r\n      waitingForHint: false,\r\n      drawerOpen: false,\r\n      attachmentOptionsVisible: false,\r\n      contextExplorerVisible: false,\r\n      sprinting: false\r\n    };\r\n    this.bottomRef = this.bottomRef.bind(this);\r\n    this.inputBoxRef = this.inputBoxRef.bind(this);\r\n    this.currentFlow = this.props.definition.uuid;\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^get/, /^handle/]\r\n    });\r\n  }\r\n\r\n  private bottomRef(ref: any): void {\r\n    return (this.bottom = ref);\r\n  }\r\n\r\n  private inputBoxRef(ref: any): void {\r\n    this.inputBox = ref;\r\n  }\r\n\r\n  private updateActivity(recentMessages: { [key: string]: RecentMessage[] } = {}): void {\r\n    if (this.state.session) {\r\n      let lastExit: string = null;\r\n      const paths: { [key: string]: number } = {};\r\n      const active: { [nodeUUID: string]: number } = {};\r\n      let activeFlow: string;\r\n\r\n      for (const run of this.state.session.runs) {\r\n        let finalStep: Step = null;\r\n\r\n        for (const step of run.path) {\r\n          if (lastExit) {\r\n            const key = lastExit + ':' + step.node_uuid;\r\n            let pathCount = paths[key];\r\n            if (!pathCount) {\r\n              pathCount = 0;\r\n            }\r\n            paths[key] = ++pathCount;\r\n          }\r\n          lastExit = step.exit_uuid;\r\n          finalStep = step;\r\n        }\r\n\r\n        if (run.status === 'waiting' && finalStep) {\r\n          let count = active[finalStep.node_uuid];\r\n          if (!count) {\r\n            count = 0;\r\n          }\r\n          active[finalStep.node_uuid] = ++count;\r\n          activeFlow = run.flow_uuid;\r\n        }\r\n      }\r\n\r\n      // if we are resetting, clear our recent messages\r\n      const simulatedMessages = this.state.session.input\r\n        ? this.props.activity.recentMessages || {}\r\n        : {};\r\n\r\n      for (const key in recentMessages) {\r\n        let messages = simulatedMessages[key] || [];\r\n        messages = recentMessages[key].concat(messages);\r\n        simulatedMessages[key] = messages;\r\n      }\r\n\r\n      const activity: Activity = {\r\n        segments: paths,\r\n        nodes: active,\r\n        recentMessages: simulatedMessages\r\n      };\r\n\r\n      this.props.mergeEditorState({ activity });\r\n\r\n      if (activeFlow && activeFlow !== this.currentFlow) {\r\n        this.currentFlow = activeFlow;\r\n      }\r\n    }\r\n  }\r\n\r\n  private updateEvents(\r\n    events: EventProps[],\r\n    session: Session,\r\n    recentMessages: { [key: string]: RecentMessage[] },\r\n    callback: () => void\r\n  ): void {\r\n    if (events && events.length > 0) {\r\n      const toAdd = [];\r\n\r\n      let quickReplies: string[] = null;\r\n\r\n      let messageFound = false;\r\n      while (events.length > 0 && !messageFound) {\r\n        const event = events.shift();\r\n\r\n        if (isMessage(event)) {\r\n          messageFound = true;\r\n\r\n          // if it's a message add it to our recent messages\r\n          let fromUUID = '';\r\n          let toUUID = '';\r\n\r\n          // work backwards, since our events are recent\r\n          for (let i = session.runs.length - 1; i >= 0; i--) {\r\n            const path = session.runs[i].path;\r\n\r\n            // start at the penultimate node since we have nowhere to render recent messages for the last node\r\n            for (let j = path.length - 2; j >= 0; j--) {\r\n              if (path[j].uuid === event.step_uuid) {\r\n                fromUUID = path[j].exit_uuid;\r\n                toUUID = path[j + 1].node_uuid;\r\n                break;\r\n              }\r\n            }\r\n\r\n            if (fromUUID && toUUID) {\r\n              const key = `${fromUUID}:${toUUID}`;\r\n              const msg: RecentMessage = {\r\n                sent: event.created_on,\r\n                text: event.msg.text\r\n              };\r\n\r\n              if (key in recentMessages) {\r\n                recentMessages[key].unshift(msg);\r\n              } else {\r\n                recentMessages[key] = [msg];\r\n              }\r\n            }\r\n          }\r\n\r\n          if (isMT(event)) {\r\n            // save off any quick replies we might have\r\n            if (event.msg.quick_replies) {\r\n              quickReplies = event.msg.quick_replies;\r\n            }\r\n          }\r\n        }\r\n\r\n        toAdd.push(event);\r\n      }\r\n\r\n      const newEvents = update(this.state.events, {\r\n        $push: toAdd\r\n      }) as EventProps[];\r\n      const newState: Partial<SimulatorState> = { events: newEvents };\r\n\r\n      if (quickReplies !== null) {\r\n        newState.quickReplies = quickReplies;\r\n      }\r\n\r\n      this.scrollToBottom();\r\n\r\n      this.setState(newState as SimulatorState, () => {\r\n        if (events.length === 0) {\r\n          callback();\r\n        } else {\r\n          window.setTimeout(() => {\r\n            this.updateEvents(events, session, recentMessages, callback);\r\n          }, MESSAGE_DELAY_MS);\r\n        }\r\n      });\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private updateRunContext(runContext: RunContext, msg?: PostMessage): void {\r\n    const wasJustActive = this.state.active || (runContext.events && runContext.events.length > 0);\r\n    this.setState({ quickReplies: [] }, () => {\r\n      if (!runContext.events || (runContext.events.length === 0 && msg)) {\r\n        const runs = runContext.session.runs;\r\n        const run = runs[runs.length - 1];\r\n        const step = run.path[run.path.length - 1];\r\n\r\n        runContext.events = [\r\n          {\r\n            msg: {\r\n              uuid: createUUID(),\r\n              urn: this.state.contact.urns[0],\r\n              text: \"Ironman\",\r\n              attachments: msg.attachments\r\n            },\r\n            type: 'msg_created',\r\n            created_on: new Date().toISOString(),\r\n            step_uuid: step.uuid\r\n          }\r\n        ];\r\n      }\r\n\r\n      const newlyRecentMessages = {};\r\n\r\n      this.updateEvents(runContext.events, runContext.session, newlyRecentMessages, () => {\r\n        let active = false;\r\n        for (const run of runContext.session.runs) {\r\n          if (run.status === 'waiting') {\r\n            active = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        let newEvents = this.state.events;\r\n        if (!active && wasJustActive) {\r\n          newEvents = update(this.state.events, {\r\n            $push: [\r\n              {\r\n                type: 'info',\r\n                text: 'Exited flow',\r\n                created_on: new Date()\r\n              } as any\r\n            ]\r\n          }) as EventProps[];\r\n        }\r\n\r\n        const waitingForHint =\r\n          runContext.session &&\r\n          runContext.session.wait &&\r\n          runContext.session.wait.hint !== undefined;\r\n\r\n        let drawerType = null;\r\n        if (waitingForHint) {\r\n          switch (runContext.session.wait.hint.type) {\r\n            case 'audio':\r\n              drawerType = DrawerType.audio;\r\n              break;\r\n            case 'video':\r\n              drawerType = DrawerType.videos;\r\n              break;\r\n            case 'image':\r\n              drawerType = DrawerType.images;\r\n              break;\r\n            case 'location':\r\n              drawerType = DrawerType.location;\r\n              break;\r\n            case 'digits':\r\n              drawerType = DrawerType.digit;\r\n              if (runContext.session.wait.hint.count !== 1) {\r\n                drawerType = DrawerType.digits;\r\n              }\r\n              break;\r\n            default:\r\n              console.log('Unknown hint', runContext.session.wait.hint.type);\r\n          }\r\n        }\r\n\r\n        let drawerOpen = waitingForHint;\r\n\r\n        // if we have quick replies, open our drawe with attachment options\r\n        if (!drawerType && this.hasQuickReplies()) {\r\n          drawerType = DrawerType.quickReplies;\r\n          drawerOpen = true;\r\n        }\r\n\r\n        this.setState(\r\n          {\r\n            active,\r\n            context: runContext.context,\r\n            sprinting: false,\r\n            session: runContext.session,\r\n            events: newEvents,\r\n            drawerOpen,\r\n            drawerType,\r\n            waitingForHint\r\n          },\r\n          () => {\r\n            this.updateActivity(newlyRecentMessages);\r\n            this.handleFocusUpdate();\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  private startFlow(): void {\r\n    const now = new Date().toISOString();\r\n    const contact: any = {\r\n      uuid: createUUID(),\r\n      urns: ['tel:+12065551212'],\r\n      fields: {},\r\n      groups: [],\r\n      created_on: now\r\n    };\r\n\r\n    // use the current displayed language when simulating\r\n    if (this.props.language) {\r\n      contact.language = this.props.language.id;\r\n    }\r\n\r\n    // reset our events and contact\r\n    this.setState(\r\n      {\r\n        sprinting: true,\r\n        drawerOpen: false,\r\n        attachmentOptionsVisible: false,\r\n        events: []\r\n      },\r\n      () => {\r\n        const body: any = {\r\n          contact: this.state.contact,\r\n          flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\r\n          trigger: {\r\n            type: 'manual',\r\n            environment: {\r\n              date_format: 'DD-MM-YYYY',\r\n              time_format: 'hh:mm',\r\n              timezone: 'America/New_York',\r\n              languages: []\r\n            },\r\n            contact,\r\n            flow: {\r\n              uuid: this.props.definition.uuid,\r\n              name: this.props.definition.name\r\n            },\r\n            params: {},\r\n            triggered_on: now\r\n          }\r\n        };\r\n\r\n        axios.default\r\n          .post(getURL(this.context.config.endpoints.simulateStart), JSON.stringify(body, null, 2))\r\n          .then((response: axios.AxiosResponse) => {\r\n            this.updateRunContext(response.data as RunContext);\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  private resume(text: string, attachment?: string): void {\r\n    if (!text && !attachment) {\r\n      return;\r\n    }\r\n\r\n    if (text === '\\\\debug') {\r\n      console.log(JSON.stringify(this.debug, null, 2));\r\n      return;\r\n    }\r\n\r\n    if (text === '\\\\recalc') {\r\n      console.log('recal..');\r\n      // this.props.plumberRepaint();\r\n      return;\r\n    }\r\n\r\n    this.setState({ sprinting: true, attachmentOptionsVisible: false, drawerOpen: false }, () => {\r\n      const now = new Date().toISOString();\r\n\r\n      const msg: PostMessage = {\r\n        text,\r\n        uuid: createUUID(),\r\n        urn: this.state.session.contact.urns[0],\r\n        attachments: attachment ? [attachment] : []\r\n      };\r\n\r\n      const body: any = {\r\n        flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\r\n        session: this.state.session,\r\n        resume: {\r\n          type: 'msg',\r\n          msg,\r\n          resumed_on: now,\r\n          contact: this.state.session.contact\r\n        }\r\n      };\r\n\r\n      axios.default\r\n        .post(getURL(this.context.config.endpoints.simulateResume), JSON.stringify(body, null, 2))\r\n        .then((response: axios.AxiosResponse) => {\r\n          this.updateRunContext(response.data as RunContext, msg);\r\n        })\r\n        .catch(error => {\r\n          if (error.response.status) {\r\n          }\r\n          const events = update(this.state.events, {\r\n            $push: [\r\n              {\r\n                type: 'error',\r\n                text:\r\n                  error.response.status > 499\r\n                    ? 'Server error, try again later'\r\n                    : error.response.data.error\r\n              } as any\r\n            ]\r\n          }) as EventProps[];\r\n          this.setState({ events });\r\n        });\r\n    });\r\n  }\r\n\r\n  private onReset(event: any): void {\r\n    this.startFlow();\r\n  }\r\n\r\n  private scrollToBottom(delay?: number): void {\r\n    const wait = delay || 0;\r\n    if (this.bottom) {\r\n      window.setTimeout(() => {\r\n        if (this.bottom) {\r\n          this.bottom.scrollIntoView(false);\r\n        }\r\n      }, wait);\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: SimulatorProps, prevState: SimulatorState): void {\r\n    if (this.drawerEle !== null) {\r\n      if (\r\n        prevState.drawerHeight !== this.drawerEle.clientHeight ||\r\n        prevState.drawerOpen !== this.state.drawerOpen\r\n      ) {\r\n        this.setState({ drawerHeight: this.drawerEle.clientHeight }, () => {\r\n          this.scrollToBottom(800);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private onKeyUp(event: any): void {\r\n    if (event.key === 'Enter') {\r\n      const ele = event.target;\r\n      const text = ele.value;\r\n      ele.value = '';\r\n      this.resume(text);\r\n    }\r\n  }\r\n\r\n  private onToggle(event: any): void {\r\n    const newVisible = !this.state.visible;\r\n\r\n    this.props.onToggled(newVisible, PopTabType.SIMULATOR);\r\n\r\n    this.props.mergeEditorState({ simulating: newVisible });\r\n\r\n    this.setState({ visible: newVisible, contextExplorerVisible: false }, () => {\r\n      // clear our viewing definition\r\n      if (!this.state.visible) {\r\n        window.setTimeout(() => {\r\n          this.props.mergeEditorState({ activity: this.props.liveActivity });\r\n        }, 500);\r\n      } else {\r\n        this.updateActivity();\r\n\r\n        // start our flow if we haven't already\r\n        if (this.state.events.length === 0) {\r\n          this.startFlow();\r\n        }\r\n\r\n        this.handleFocusUpdate();\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleFocusUpdate(): void {\r\n    if (this.inputBox) {\r\n      this.inputBox.focus();\r\n    }\r\n  }\r\n\r\n  private sendAttachment(attachment: string): void {\r\n    this.setState({ drawerOpen: false, attachmentOptionsVisible: false }, () => {\r\n      window.setTimeout(() => {\r\n        this.resume(null, attachment);\r\n      }, 200);\r\n    });\r\n  }\r\n\r\n  private getImageDrawer(): JSX.Element {\r\n    return (\r\n      <div className={styles.drawer_items}>\r\n        <div\r\n          className={styles.drawer_item}\r\n          onClick={() => {\r\n            this.sendAttachment('image/jpeg:' + IMAGE_A);\r\n          }}\r\n        >\r\n          <img src={IMAGE_A} alt=\"Attachment\" />\r\n        </div>\r\n        <div\r\n          className={styles.drawer_item}\r\n          onClick={() => {\r\n            this.sendAttachment('image/jpeg:' + IMAGE_B);\r\n          }}\r\n        >\r\n          <img src={IMAGE_B} alt=\"Attachment\" />\r\n        </div>\r\n        <div\r\n          className={styles.drawer_item}\r\n          onClick={() => {\r\n            this.sendAttachment('image/jpeg:' + IMAGE_C);\r\n          }}\r\n        >\r\n          <img src={IMAGE_C} alt=\"Attachment\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public getLocationDrawer(): JSX.Element {\r\n    return (\r\n      <div\r\n        className={styles.map_thumb}\r\n        onClick={() => {\r\n          this.sendAttachment('geo:2.904194,-79.003418');\r\n        }}\r\n      >\r\n        <img src={MAP_THUMB} alt=\"Attachment\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getAudioDrawer(): JSX.Element {\r\n    return (\r\n      <div\r\n        className={styles.audio_picker}\r\n        onClick={() => {\r\n          this.sendAttachment('audio/mp3:' + AUDIO_A);\r\n        }}\r\n      >\r\n        <div className={styles.audio_icon + ' fe-mic'} />\r\n        <div className={styles.audio_message}>Upload Audio</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getVideoDrawer(): JSX.Element {\r\n    return (\r\n      <div className={styles.drawer_items}>\r\n        <div\r\n          className={styles.drawer_item}\r\n          onClick={() => {\r\n            this.sendAttachment('video/mp4:' + VIDEO_A);\r\n          }}\r\n        >\r\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\r\n        </div>\r\n        <div\r\n          className={styles.drawer_item}\r\n          onClick={() => {\r\n            this.sendAttachment('video/mp4:' + VIDEO_A);\r\n          }}\r\n        >\r\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\r\n        </div>\r\n        <div\r\n          className={styles.drawer_item}\r\n          onClick={() => {\r\n            this.sendAttachment('video/mp4:' + VIDEO_A);\r\n          }}\r\n        >\r\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getQuickRepliesDrawer(): JSX.Element {\r\n    return (\r\n      <div className={styles.quick_replies}>\r\n        {this.state.quickReplies.map(reply => (\r\n          <div\r\n            className={styles.quick_reply}\r\n            onClick={() => {\r\n              this.resume(reply);\r\n            }}\r\n            key={`reply_${reply}`}\r\n          >\r\n            {reply}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private handleKeyPress(btn: string, multiple: boolean): void {\r\n    if (!multiple) {\r\n      this.resume(btn);\r\n    } else {\r\n      if (btn === '#') {\r\n        this.resume(this.state.keypadEntry);\r\n        this.setState({ keypadEntry: '' });\r\n      } else {\r\n        this.setState((prevState: SimulatorState) => {\r\n          return { keypadEntry: prevState.keypadEntry += btn };\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private getKeyRow(keys: string[], multiple: boolean): JSX.Element {\r\n    return (\r\n      <div className={styles.row}>\r\n        {keys.map((key: string) => {\r\n          return (\r\n            <div\r\n              key={'btn_' + key}\r\n              onClick={() => {\r\n                this.handleKeyPress(key, multiple);\r\n              }}\r\n              className={styles.key}\r\n            >\r\n              {key}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getKeypadDrawer(multiple: boolean): JSX.Element {\r\n    return (\r\n      <div className={styles.keypad}>\r\n        {multiple ? <div className={styles.keypad_entry}>{this.state.keypadEntry}</div> : null}\r\n        <div className={styles.keys}>\r\n          {this.getKeyRow(['1', '2', '3'], multiple)}\r\n          {this.getKeyRow(['4', '5', '6'], multiple)}\r\n          {this.getKeyRow(['7', '8', '9'], multiple)}\r\n          {this.getKeyRow(['*', '0', '#'], multiple)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getDrawerContents(): JSX.Element {\r\n    switch (this.state.drawerType) {\r\n      case DrawerType.location:\r\n        return this.getLocationDrawer();\r\n      case DrawerType.audio:\r\n        return this.getAudioDrawer();\r\n      case DrawerType.images:\r\n        return this.getImageDrawer();\r\n      case DrawerType.videos:\r\n        return this.getVideoDrawer();\r\n      case DrawerType.quickReplies:\r\n        return this.getQuickRepliesDrawer();\r\n      case DrawerType.digits:\r\n      case DrawerType.digit:\r\n        return this.getKeypadDrawer(this.state.drawerType === DrawerType.digits);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private handleDrawerRef(ref: HTMLDivElement): HTMLDivElement {\r\n    return (this.drawerEle = ref);\r\n  }\r\n\r\n  public getDrawer(): JSX.Element {\r\n    const style: any = {};\r\n\r\n    if (this.state.drawerOpen) {\r\n      style.bottom = 50;\r\n\r\n      // are we being forced open\r\n      if (this.state.waitingForHint) {\r\n        style.bottom = 25;\r\n        style.zIndex = 150;\r\n        style.paddingBottom = 10;\r\n      }\r\n    } else {\r\n      style.bottom = -this.state.drawerHeight;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={this.handleDrawerRef}\r\n        style={style}\r\n        className={\r\n          styles.drawer +\r\n          ' ' +\r\n          (this.state.drawerOpen ? styles.drawer_visible : '') +\r\n          ' ' +\r\n          (this.state.attachmentOptionsVisible ? '' : styles.forced)\r\n        }\r\n      >\r\n        {this.getDrawerContents()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private hasQuickReplies(): boolean {\r\n    return (this.state.quickReplies || []).length > 0;\r\n  }\r\n\r\n  private handleHideAttachments(): void {\r\n    this.setState(\r\n      {\r\n        attachmentOptionsVisible: false,\r\n        drawerOpen: false\r\n      },\r\n      () => {\r\n        if (this.hasQuickReplies()) {\r\n          window.setTimeout(() => {\r\n            this.showAttachmentDrawer(DrawerType.quickReplies);\r\n          }, 300);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private getAttachmentButton(icon: string, drawerType: DrawerType): JSX.Element {\r\n    return (\r\n      <div\r\n        className={icon}\r\n        onClick={() => {\r\n          this.showAttachmentDrawer(drawerType);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  private getAttachmentOptions(): JSX.Element {\r\n    return (\r\n      <div\r\n        className={\r\n          styles.attachment_buttons +\r\n          ' ' +\r\n          (this.state.attachmentOptionsVisible ? styles.visible : '')\r\n        }\r\n      >\r\n        <div className=\"fe-x\" onClick={this.handleHideAttachments} />\r\n        {this.getAttachmentButton('fe-picture2', DrawerType.images)}\r\n        {this.getAttachmentButton('fe-video', DrawerType.videos)}\r\n        {this.getAttachmentButton('fe-mic', DrawerType.audio)}\r\n        {this.getAttachmentButton('fe-map-marker', DrawerType.location)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private handleContextExplorerClose(): void {\r\n    this.setState({ contextExplorerVisible: false });\r\n  }\r\n\r\n  private getContextExplorer(): JSX.Element {\r\n    return (\r\n      <ContextExplorer\r\n        visible={this.state.contextExplorerVisible}\r\n        onClose={this.handleContextExplorerClose}\r\n        contents={this.state.context}\r\n      />\r\n    );\r\n  }\r\n\r\n  private handleHideAttachmentDrawer(): void {\r\n    this.setState({ drawerOpen: false });\r\n  }\r\n\r\n  private showAttachmentDrawer(drawerType: DrawerType): void {\r\n    // if we are already open but a different type, hide ourselves and reopen with the new type\r\n    if (this.state.drawerOpen) {\r\n      // if that type is already open, its a noop\r\n      if (drawerType === this.state.drawerType) {\r\n        return;\r\n      }\r\n\r\n      this.handleHideAttachmentDrawer();\r\n      window.setTimeout(() => {\r\n        this.showAttachmentDrawer(drawerType);\r\n      }, 300);\r\n    } else {\r\n      this.setState((prevState: SimulatorState) => {\r\n        return { drawerOpen: true, drawerType };\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): ReactNode {\r\n    const messages: JSX.Element[] = [];\r\n    for (const event of this.state.events) {\r\n      messages.push(<LogEvent {...event} key={event.type + '_' + String(event.created_on)} />);\r\n    }\r\n\r\n    const hidden = this.props.popped && this.props.popped !== PopTabType.SIMULATOR;\r\n    const simHidden = hidden || !this.state.visible ? styles.sim_hidden : '';\r\n    const tabHidden = hidden || this.state.visible ? styles.tab_hidden : '';\r\n\r\n    const messagesStyle: any = {\r\n      height: 366 - (this.state.drawerOpen ? this.state.drawerHeight - 20 : 0)\r\n    };\r\n\r\n    // if attachments are forced open, account for missing attachment choice panel\r\n    if (this.state.drawerOpen && this.state.waitingForHint) {\r\n      messagesStyle.height += 25;\r\n    }\r\n\r\n    return (\r\n      <div id=\"sim_container\" className={styles.sim_container}>\r\n        <div>\r\n          <div id=\"simulator\" className={styles.simulator + ' ' + simHidden} key={'sim'}>\r\n            {this.getContextExplorer()}\r\n\r\n            <div className={styles.screen}>\r\n              <div className={styles.header}>\r\n                <div className={styles.close + ' fe-x'} onClick={this.onToggle} />\r\n              </div>\r\n              <div className={styles.messages} style={messagesStyle}>\r\n                {messages}\r\n                <div\r\n                  id=\"bottom\"\r\n                  style={{ float: 'left', clear: 'both', marginTop: 20 }}\r\n                  ref={this.bottomRef}\r\n                />\r\n              </div>\r\n              <div className={styles.controls}>\r\n                <input\r\n                  ref={this.inputBoxRef}\r\n                  type=\"text\"\r\n                  onKeyUp={this.onKeyUp}\r\n                  disabled={this.state.sprinting}\r\n                  placeholder={this.state.active ? 'Enter message' : 'Press home to start again'}\r\n                />\r\n                <div className={styles.show_attachments_button}>\r\n                  <div\r\n                    className=\"fe-paperclip\"\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        attachmentOptionsVisible: true,\r\n                        drawerOpen: false\r\n                      });\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {this.getAttachmentOptions()}\r\n              {this.getDrawer()}\r\n              <div className={styles.footer}>\r\n                {!this.state.contextExplorerVisible ? (\r\n                  <div className={styles.show_context_button}>\r\n                    <div\r\n                      className=\"context-button\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          contextExplorerVisible: true\r\n                        });\r\n                      }}\r\n                    >\r\n                      <span className=\"fe-at-sign\"></span>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className={styles.show_context_button}>\r\n                    <div\r\n                      className=\"context-button\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          contextExplorerVisible: false\r\n                        });\r\n                      }}\r\n                    >\r\n                      <span className=\"fe-x\"></span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <span\r\n                  className={\r\n                    styles.reset + ' ' + (this.state.active ? styles.active : styles.inactive)\r\n                  }\r\n                  onClick={this.onReset}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.simulator_tab + ' ' + tabHidden} onClick={this.onToggle}>\r\n          <div className={styles.simulator_tab_icon + ' fe-smartphone'} />\r\n          <div className={styles.simulator_tab_text}>\r\n            Run in\r\n            <br />\r\n            Simulator\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* istanbul ignore next */\r\nconst mapStateToProps = ({\r\n  flowContext: { definition, nodes, assetStore },\r\n  editorState: { liveActivity, activity, language }\r\n}: AppState) => ({\r\n  liveActivity,\r\n  activity,\r\n  assetStore,\r\n  definition,\r\n  nodes,\r\n  language\r\n});\r\n\r\n/* istanbul ignore next */\r\nconst mapDispatchToProps = (dispatch: DispatchWithState) => bindActionCreators({}, dispatch);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Simulator);\r\n","import * as React from 'react';\r\nimport styles from './ContextExplorer.module.scss';\r\nimport { react as bindCallbacks } from 'auto-bind';\r\nimport classNames from 'classnames/bind';\r\nimport { copyToClipboard } from 'utils';\r\nimport i18n from 'config/i18n';\r\nimport { Trans } from 'react-i18next';\r\nimport { DEFAULT_KEY, pruneEmpty } from './helpers';\r\n\r\nconst cx: any = classNames.bind(styles);\r\n\r\nconst EXCLUDED_PATHS: { [path: string]: boolean } = {\r\n  'parent.run': true,\r\n  'child.run': true,\r\n  legacy_extra: true\r\n};\r\n\r\ntype PathStep = number | string;\r\n\r\nexport interface ContextExplorerProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  contents: any;\r\n}\r\n\r\ninterface ContextExplorerState {\r\n  opened: {};\r\n  expression: string;\r\n  messageVisible: boolean;\r\n  message: string;\r\n  showEmpty: boolean;\r\n}\r\n\r\nexport default class ContextExplorer extends React.Component<\r\n  ContextExplorerProps,\r\n  ContextExplorerState\r\n> {\r\n  constructor(props: ContextExplorerProps) {\r\n    super(props);\r\n    this.state = {\r\n      opened: {},\r\n      expression: null,\r\n      messageVisible: false,\r\n      showEmpty: false,\r\n      message: null\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  private handleHide(): void {\r\n    this.props.onClose();\r\n  }\r\n\r\n  private isOpen(path: PathStep[]): boolean {\r\n    let openState: any = this.state.opened;\r\n    for (const step of path) {\r\n      openState = openState[step];\r\n      if (!openState) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private handleCopyPath(key: PathStep, prevPath: PathStep[]) {\r\n    const path: PathStep[] = [...prevPath, key];\r\n    const expression = '@' + path.join('.');\r\n    copyToClipboard(expression);\r\n    this.setState({ expression, messageVisible: true, message: null }, () => {\r\n      window.setTimeout(() => {\r\n        if (this.state.expression === expression) {\r\n          this.setState({ messageVisible: false });\r\n        }\r\n      }, 1500);\r\n    });\r\n  }\r\n\r\n  private handleToggleHide(): void {\r\n    const message = this.state.showEmpty\r\n      ? i18n.t('context_explorer.hide_empty', 'Showing keys with values')\r\n      : i18n.t('context_explorer.show_empty', 'Showing all keys');\r\n    this.setState(\r\n      { showEmpty: !this.state.showEmpty, message, expression: null, messageVisible: true },\r\n      () => {\r\n        window.setTimeout(() => {\r\n          if (this.state.message === message) {\r\n            this.setState({ messageVisible: false });\r\n          }\r\n        }, 1000);\r\n      }\r\n    );\r\n  }\r\n\r\n  private handlePathClick(key: PathStep, prevPath: PathStep[]) {\r\n    const opened = { ...this.state.opened };\r\n    const path: PathStep[] = [...prevPath, key];\r\n\r\n    let openPath: any = opened;\r\n    while (path.length > 0) {\r\n      const next = path.shift();\r\n\r\n      let closing = false;\r\n      // if it's the last one, check if toggling\r\n      if (path.length === 0) {\r\n        if (openPath[next]) {\r\n          closing = true;\r\n        }\r\n      }\r\n\r\n      if (closing) {\r\n        delete openPath[next];\r\n      } else {\r\n        const existing = openPath[next] || {};\r\n        // make sure it exists\r\n        openPath[next] = existing;\r\n      }\r\n\r\n      // dive down\r\n      openPath = openPath[next];\r\n    }\r\n\r\n    this.setState({ opened });\r\n  }\r\n\r\n  private renderContextNode(name: string, value: any, path: PathStep[]): JSX.Element {\r\n    if (!name) {\r\n      return null;\r\n    }\r\n\r\n    const newPath = [...path, name];\r\n    if (EXCLUDED_PATHS[newPath.join('.')]) {\r\n      return null;\r\n    }\r\n\r\n    const valueType = typeof value;\r\n    let text = valueType !== 'object' ? value : '';\r\n    let hasChildren = value && valueType === 'object' && Object.keys(value).length > 0;\r\n\r\n    if (value && value.hasOwnProperty(DEFAULT_KEY)) {\r\n      text = value[DEFAULT_KEY];\r\n      if (Object.keys(value).length === 1) {\r\n        hasChildren = false;\r\n      }\r\n    }\r\n\r\n    const isOpen = this.isOpen(newPath);\r\n\r\n    const arrowStyles = cx({\r\n      [styles.arrow_right]: true,\r\n      [styles.has_children]: hasChildren,\r\n      [styles.open]: isOpen\r\n    });\r\n    const keyStyles = cx({ [styles.key]: true, [styles.has_children]: hasChildren });\r\n    const keySummary = Array.isArray(value) ? `[${value.length}]` : null;\r\n\r\n    const onClick = (evt: React.MouseEvent<HTMLDivElement>) => {\r\n      if (evt.shiftKey) {\r\n        this.handleCopyPath(name, path);\r\n      } else {\r\n        if (hasChildren) {\r\n          this.handlePathClick(name, path);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div key={name + path.length}>\r\n        <div\r\n          className={styles.row}\r\n          style={{ marginLeft: path.length * 10 + 'px' }}\r\n          onClick={onClick}\r\n        >\r\n          <div className={arrowStyles}>›</div>\r\n          <div className={keyStyles}>\r\n            {name}\r\n            <div className={styles.key_summary}>{keySummary}</div>\r\n            <div\r\n              className={styles.clipboard + ' fe-clipboard-empty'}\r\n              onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\r\n                evt.stopPropagation();\r\n                this.handleCopyPath(name, path);\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className={styles.str_value}>{text}</div>\r\n        </div>\r\n        {isOpen ? this.renderProperties(value, newPath) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderProperties(value: any, path: PathStep[] = []): JSX.Element {\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {Object.keys(value).map((key: string) => {\r\n          // don't show default key as a property\r\n          if (key !== DEFAULT_KEY) {\r\n            return this.renderContextNode(key, value[key], path);\r\n          }\r\n          return null;\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    let context = this.props.contents;\r\n    if (this.props.contents && !this.state.showEmpty) {\r\n      context = pruneEmpty(JSON.parse(JSON.stringify(this.props.contents)));\r\n    }\r\n\r\n    let message = null;\r\n    if (this.state.message || this.state.expression) {\r\n      if (this.state.message) {\r\n        message = this.state.message;\r\n      } else if (this.state.expression) {\r\n        message = (\r\n          <Trans\r\n            i18nKey=\"context_explorer.copied_expression\"\r\n            values={{ expression: this.state.expression }}\r\n          >\r\n            Copied <span className={styles.expression}>[[expression]]</span> to clipboard\r\n          </Trans>\r\n        );\r\n      }\r\n    }\r\n\r\n    const messageStyle = cx({\r\n      [styles.message]: true,\r\n      [styles.visible]: this.state.messageVisible\r\n    });\r\n\r\n    return (\r\n      <div className={styles.context_explorer + ' ' + (this.props.visible ? styles.visible : '')}>\r\n        <div className={messageStyle}>{message}</div>\r\n        <div className={styles.panel}>{this.renderProperties(context)}</div>\r\n        <div className={styles.footer}>\r\n          <div\r\n            className={styles.empty_toggle}\r\n            onClick={() => {\r\n              this.handleToggleHide();\r\n            }}\r\n          >\r\n            <div className={this.state.showEmpty ? 'fe-eye' : 'fe-eye-crossed'}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport { FlowDefinition, StickyNote } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport TextareaAutosize from 'react-autosize-textarea/lib';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { DragEvent } from 'services/Plumber';\r\nimport AppState from 'store/state';\r\nimport { DispatchWithState, UpdateSticky, updateSticky } from 'store/thunks';\r\nimport { CONFIRMATION_TIME, QUIET_NOTE, snapToGrid } from 'utils';\r\n\r\nimport styles from './Sticky.module.scss';\r\nimport i18n from 'config/i18n';\r\n\r\ntype DragFunction = (event: DragEvent) => void;\r\nexport const STICKY_SPEC_ID: string = 'sticky-container';\r\nexport const STICKY_TITLE = i18n.t('sticky.title', 'New Note');\r\nexport const STICKY_BODY = i18n.t('sticky.body', '...');\r\n\r\nexport interface StickyPassedProps {\r\n  uuid: string;\r\n  sticky: StickyNote;\r\n  selected: boolean;\r\n}\r\n\r\nexport interface StickyStoreProps {\r\n  definition: FlowDefinition;\r\n  updateSticky: UpdateSticky;\r\n}\r\n\r\nexport type StickyProps = StickyPassedProps & StickyStoreProps;\r\n\r\n/**\r\n * We have internal state to track as the user types so\r\n * we can debounce updates to the store.\r\n */\r\ninterface StickyState {\r\n  title: string;\r\n  body: string;\r\n  color: string;\r\n  showConfirmation: boolean;\r\n}\r\n\r\nconst COLOR_OPTIONS: any = {\r\n  yellow: styles.yellow,\r\n  blue: styles.blue,\r\n  green: styles.green,\r\n  purple: styles.purple,\r\n  gray: styles.gray\r\n};\r\n\r\nexport class Sticky extends React.Component<StickyProps, StickyState> {\r\n  private dragging = false;\r\n  private ele: HTMLDivElement;\r\n  private debounceTextChanges: number;\r\n  private showConfirmation: number;\r\n\r\n  public DEFUALT_TITLE = 'New Note';\r\n  public DEFUALT_BODY = '...';\r\n\r\n  constructor(props: StickyProps & StickyStoreProps) {\r\n    super(props);\r\n    bindCallbacks(this, {\r\n      include: [/^on/, /^get/, /^is/, /^handle/]\r\n    });\r\n\r\n    this.state = {\r\n      title: this.props.sticky.title,\r\n      body: this.props.sticky.body,\r\n      color: this.props.sticky.color,\r\n      showConfirmation: false\r\n    };\r\n  }\r\n\r\n  private isSelected(): boolean {\r\n    return this.props.selected;\r\n  }\r\n\r\n  private onRef(ref: HTMLDivElement): HTMLDivElement {\r\n    return (this.ele = ref);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    if (this.showConfirmation) {\r\n      window.clearTimeout(this.showConfirmation);\r\n    }\r\n\r\n    if (this.debounceTextChanges) {\r\n      window.clearTimeout(this.debounceTextChanges);\r\n    }\r\n  }\r\n\r\n  public handleDrag(event: DragEvent): void {\r\n    // noop\r\n  }\r\n\r\n  public handleDragStop(event: DragEvent): void {\r\n    // snap us to the same grid\r\n    const { left, top } = snapToGrid(event.finalPos[0], event.finalPos[1]);\r\n    this.ele.style.left = `${left}px`;\r\n    this.ele.style.top = `${top}px`;\r\n\r\n    this.props.sticky.position = { left, top };\r\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\r\n  }\r\n\r\n  private onUpdateText(): void {\r\n    if (this.debounceTextChanges) {\r\n      window.clearTimeout(this.debounceTextChanges);\r\n    }\r\n\r\n    this.debounceTextChanges = window.setTimeout(() => {\r\n      const updated = { ...this.props.sticky };\r\n      updated.title = this.state.title;\r\n      updated.body = this.state.body;\r\n      this.props.updateSticky(this.props.uuid, updated);\r\n      this.debounceTextChanges = null;\r\n    }, QUIET_NOTE);\r\n  }\r\n\r\n  private handleChangeTitle(event: React.FormEvent<HTMLTextAreaElement>): void {\r\n    this.setState({ title: event.currentTarget.value });\r\n    this.onUpdateText();\r\n  }\r\n\r\n  private handleChangeBody(event: React.FormEvent<HTMLTextAreaElement>): void {\r\n    this.setState({ body: event.currentTarget.value });\r\n    this.onUpdateText();\r\n  }\r\n\r\n  public handleClickRemove(event: React.MouseEvent<HTMLDivElement>): void {\r\n    if (this.state.showConfirmation) {\r\n      this.props.updateSticky(this.props.uuid, null);\r\n    } else {\r\n      this.setState({ showConfirmation: true });\r\n      this.showConfirmation = window.setTimeout(() => {\r\n        this.setState({ showConfirmation: false });\r\n      }, CONFIRMATION_TIME);\r\n    }\r\n  }\r\n\r\n  private handleChangeColor(color: string): void {\r\n    this.props.sticky.color = color;\r\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\r\n    this.setState({ color });\r\n  }\r\n\r\n  private handleSelectForValue(element: HTMLTextAreaElement, text: string): void {\r\n    if (element.value === text) {\r\n      window.setTimeout(() => {\r\n        element.select();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  private handleTitleFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\r\n    this.handleSelectForValue(e.currentTarget, STICKY_TITLE);\r\n  }\r\n\r\n  private handleBodyFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\r\n    this.handleSelectForValue(e.currentTarget, STICKY_BODY);\r\n  }\r\n\r\n  private getColorChooser(): JSX.Element {\r\n    return (\r\n      <div className={styles.color_chooser_container}>\r\n        <div className={styles.color_chooser}>\r\n          {Object.keys(COLOR_OPTIONS).map((color: string) => {\r\n            return (\r\n              <div\r\n                key={this.props.uuid + color}\r\n                onClick={() => {\r\n                  this.handleChangeColor(color);\r\n                }}\r\n                className={styles.color_option + ' ' + COLOR_OPTIONS[color]}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    // add our removal class if necessary\r\n    const titleClasses = [styles.title_wrapper];\r\n    if (this.state.showConfirmation) {\r\n      titleClasses.push(styles.removal);\r\n    }\r\n\r\n    const containerClasses = [styles.sticky_container];\r\n    if (!this.props.sticky.color) {\r\n      this.props.sticky.color = 'yellow';\r\n    }\r\n\r\n    const stickyClasses = [styles.sticky];\r\n    if (this.isSelected()) {\r\n      stickyClasses.push(styles.selected);\r\n    }\r\n\r\n    containerClasses.push(COLOR_OPTIONS[this.props.sticky.color]);\r\n    const colorChooser = this.getColorChooser();\r\n\r\n    return (\r\n      <div\r\n        key={this.props.uuid}\r\n        className={containerClasses.join(' ')}\r\n        data-spec={STICKY_SPEC_ID}\r\n        ref={this.onRef}\r\n        id={this.props.uuid}\r\n      >\r\n        <div className={stickyClasses.join(' ')}>\r\n          <div className={titleClasses.join(' ')}>\r\n            <div className={styles.remove_button} onClick={this.handleClickRemove}>\r\n              <span className=\"fe-x\" />\r\n            </div>\r\n            <div className={styles.confirmation}>Remove?</div>\r\n            <TextareaAutosize\r\n              className={styles.title}\r\n              value={this.state.title}\r\n              onChange={this.handleChangeTitle}\r\n              onFocusCapture={this.handleTitleFocused}\r\n            />\r\n          </div>\r\n          <div className={styles.body_wrapper}>\r\n            <TextareaAutosize\r\n              className={styles.body}\r\n              value={this.state.body}\r\n              onChange={this.handleChangeBody}\r\n              onFocusCapture={this.handleBodyFocused}\r\n            />\r\n            {colorChooser}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* istanbul ignore next */\r\nconst mapStateToProps = ({ flowContext: { definition } }: AppState) => ({\r\n  definition\r\n});\r\n\r\n/* istanbul ignore next */\r\nconst mapDispatchToProps = (dispatch: DispatchWithState) => {\r\n  return bindActionCreators({ updateSticky }, dispatch);\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  null,\r\n  { forwardRef: false }\r\n)(Sticky);\r\n","import { Exit, FlowNode } from 'flowTypes';\r\nimport { GRID_SIZE, timeStart, timeEnd, debounce } from 'utils';\r\n\r\n// TODO: Remove use of Function\r\n// tslint:disable:ban-types\r\nconst {\r\n  jsPlumb: { importDefaults }\r\n} = require('../../node_modules/jsplumb/dist/js/jsplumb');\r\nexport interface DragEvent {\r\n  el: Element;\r\n  pos: number[];\r\n  finalPos: number[];\r\n  e: MouseEvent;\r\n  clientX: number;\r\n  clientY: number;\r\n  target: Element;\r\n}\r\n\r\nexport interface PendingConnections {\r\n  [id: string]: {\r\n    source: string;\r\n    target: string;\r\n    className: string;\r\n    slot: number;\r\n    totalSlots: number;\r\n    onConnected: (activityId: string, recentMessagesId: string) => void;\r\n  };\r\n}\r\n\r\nexport const REPAINT_DURATION = 600;\r\n\r\nconst connectorOverlays = [\r\n  [\r\n    'Label',\r\n    {\r\n      label: '',\r\n      location: 12,\r\n      id: 'activity'\r\n    }\r\n  ],\r\n  [\r\n    'Label',\r\n    {\r\n      label: '',\r\n      location: 20,\r\n      id: 'recent_messages'\r\n    }\r\n  ]\r\n];\r\n\r\nexport const TARGET_DEFAULTS = {\r\n  anchor: ['Continuous', { shape: 'Rectangle', faces: ['top', 'left', 'right'] }],\r\n  endpoint: [\r\n    'Rectangle',\r\n    {\r\n      width: 23,\r\n      height: 23,\r\n      cssClass: 'plumb-endpoint',\r\n      hoverClass: 'plumb-endpoint-hover'\r\n    }\r\n  ],\r\n  dropOptions: {\r\n    tolerance: 'touch',\r\n    hoverClass: 'plumb-drop-hover',\r\n    isTarget: false\r\n  },\r\n  dragAllowedWhenFull: false,\r\n  deleteEndpointsOnEmpty: true,\r\n  isTarget: false\r\n};\r\n\r\nexport const SOURCE_DEFAULTS = {\r\n  anchor: 'BottomCenter',\r\n  maxConnections: 1,\r\n  dragAllowedWhenFull: false,\r\n  deleteEndpointsOnEmpty: true,\r\n  isSource: true\r\n};\r\n\r\nexport const getAnchor = (sourceEle: any, targetEle: any): any[] => {\r\n  return [\r\n    'Continuous',\r\n    {\r\n      shape: 'Dot',\r\n      faces:\r\n        sourceEle.getBoundingClientRect().bottom + GRID_SIZE / 3 <\r\n        targetEle.getBoundingClientRect().top\r\n          ? ['top']\r\n          : ['right', 'left']\r\n    }\r\n  ];\r\n};\r\n\r\nconst defaultConnector = [\r\n  'Flowchart',\r\n  {\r\n    stub: 12,\r\n    midpoint: 0.75,\r\n    alwaysRespectStubs: false,\r\n    gap: [0, 5],\r\n    cornerRadius: 3\r\n  }\r\n];\r\n\r\n/* istanbul ignore next */\r\nexport default class Plumber {\r\n  public jsPlumb: any;\r\n\r\n  // we batch up connections to apply them together\r\n  private pendingConnections: PendingConnections = {};\r\n  private pendingConnectionTimeout: any;\r\n\r\n  private animateInterval: any = null;\r\n\r\n  private onLoadFunction: () => void = null;\r\n\r\n  constructor() {\r\n    this.jsPlumb = importDefaults({\r\n      DragOptions: { cursor: 'pointer', zIndex: 1000 },\r\n      DropOptions: { tolerance: 'touch', hoverClass: 'plumb-hover' },\r\n      Endpoint: 'Rectangle',\r\n      EndpointStyle: { strokeStyle: 'transparent' },\r\n      PaintStyle: { strokeWidth: 3.5 },\r\n      ConnectionsDetachable: true,\r\n      Connector: defaultConnector,\r\n      ConnectionOverlays: [\r\n        [\r\n          'PlainArrow',\r\n          {\r\n            location: 0.999,\r\n            width: 12,\r\n            length: 12,\r\n            cssClass: 'jtk-arrow'\r\n          }\r\n        ]\r\n      ]\r\n    });\r\n\r\n    this.debug = this.debug.bind(this);\r\n    this.setSourceEnabled = this.setSourceEnabled.bind(this);\r\n    this.makeSource = this.makeSource.bind(this);\r\n    this.makeTarget = this.makeTarget.bind(this);\r\n    this.connectExit = this.connectExit.bind(this);\r\n    this.setDragSelection = this.setDragSelection.bind(this);\r\n    this.clearDragSelection = this.clearDragSelection.bind(this);\r\n    this.removeFromDragSelection = this.removeFromDragSelection.bind(this);\r\n    this.cancelDurationRepaint = this.cancelDurationRepaint.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.handlePendingConnections = this.handlePendingConnections.bind(this);\r\n    this.checkForPendingConnections = this.checkForPendingConnections.bind(this);\r\n    this.connect = this.connect.bind(this);\r\n    this.bind = this.bind.bind(this);\r\n    this.repaint = this.repaint.bind(this);\r\n    this.recalculate = this.recalculate.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.updateClass = this.updateClass.bind(this);\r\n    this.rerouteAnchors = this.rerouteAnchors.bind(this);\r\n  }\r\n\r\n  public setContainer(containerId: string) {\r\n    this.jsPlumb.setContainer(containerId);\r\n  }\r\n\r\n  public debug(): any {\r\n    return this.jsPlumb;\r\n  }\r\n\r\n  public setSourceEnabled(uuid: string, enabled: boolean): void {\r\n    this.jsPlumb.setSourceEnabled(uuid, enabled);\r\n  }\r\n\r\n  public makeSource(uuid: string): any {\r\n    return this.jsPlumb.makeSource(uuid, SOURCE_DEFAULTS);\r\n  }\r\n\r\n  public makeTarget(uuid: string): void {\r\n    this.jsPlumb.makeTarget(uuid, TARGET_DEFAULTS);\r\n  }\r\n\r\n  public connectExit(\r\n    node: FlowNode,\r\n    exit: Exit,\r\n    onConnection: (activityId: string, recentMessagesId: string) => void,\r\n    className: string = null\r\n  ): void {\r\n    this.connect(\r\n      `${node.uuid}:${exit.uuid}`,\r\n      exit.destination_uuid,\r\n      onConnection,\r\n      className,\r\n      node.exits.findIndex((e: Exit) => e.uuid === exit.uuid),\r\n      node.exits.length\r\n    );\r\n  }\r\n\r\n  public updateClass(node: FlowNode, exit: Exit, className: string, add: boolean): void {\r\n    const source = `${node.uuid}:${exit.uuid}`;\r\n    const connection = this.jsPlumb.select({ source });\r\n    if (add) {\r\n      connection.addClass(className);\r\n    } else {\r\n      connection.removeClass(className);\r\n    }\r\n  }\r\n\r\n  public removeFromDragSelection(uuid: string): void {\r\n    this.jsPlumb.removeFromDragSelection(uuid);\r\n  }\r\n\r\n  public setDragSelection(selected: { [uuid: string]: boolean }): void {\r\n    this.cancelDurationRepaint();\r\n    this.jsPlumb.clearDragSelection();\r\n\r\n    Object.keys(selected).forEach(uuid => this.jsPlumb.addToDragSelection(uuid));\r\n  }\r\n\r\n  public clearDragSelection(): void {\r\n    this.jsPlumb.clearDragSelection();\r\n  }\r\n\r\n  public cancelDurationRepaint(): void {\r\n    if (this.animateInterval) {\r\n      window.clearInterval(this.animateInterval);\r\n      this.animateInterval = null;\r\n    }\r\n  }\r\n\r\n  private handlePendingConnections(): void {\r\n    const targets: { [id: string]: boolean } = {};\r\n\r\n    const batch = Object.keys(this.pendingConnections).length;\r\n    if (batch > 1) {\r\n      timeStart('Batched ' + batch + ' connections');\r\n    }\r\n\r\n    this.jsPlumb.batch(() => {\r\n      for (const key in this.pendingConnections) {\r\n        if (this.pendingConnections.hasOwnProperty(key)) {\r\n          const connection = this.pendingConnections[key];\r\n          const { source, target, className, slot, totalSlots } = connection;\r\n\r\n          const anchors = target\r\n            ? [\r\n                'Bottom',\r\n                getAnchor(document.getElementById(source), document.getElementById(target))\r\n              ]\r\n            : [];\r\n\r\n          if (source != null) {\r\n            // any existing connections for our source need to be deleted\r\n            this.jsPlumb.select({ source }).delete({ fireEvent: false });\r\n\r\n            const start = totalSlots < 5 ? 0.75 : 0.35;\r\n            let midpoint = start + slot * 0.15;\r\n            const exitMiddle = totalSlots / 2;\r\n            if (slot > exitMiddle) {\r\n              midpoint = start - 0.05 + (totalSlots - slot) * 0.15;\r\n            }\r\n\r\n            // add reasonable boundaries for midpoints\r\n            midpoint = Math.max(Math.min(0.9, midpoint), 0.1);\r\n\r\n            const connector: any = [...defaultConnector];\r\n            connector[1].midpoint = midpoint;\r\n\r\n            // now make our new connection\r\n            if (target != null) {\r\n              const plumbConnect = this.jsPlumb.connect({\r\n                source,\r\n                target,\r\n                anchors,\r\n                fireEvent: false,\r\n                cssClass: className,\r\n                detachable: !className,\r\n                overlays: connectorOverlays,\r\n                connector\r\n              });\r\n\r\n              const activityElement = plumbConnect.getOverlays()['activity'].getElement();\r\n              const recentsElement = plumbConnect.getOverlays()['recent_messages'].getElement();\r\n              activityElement.classList.add('jtk-activity');\r\n              recentsElement.classList.add('jtk-recents');\r\n\r\n              connection.onConnected(activityElement.id, recentsElement.id);\r\n            }\r\n          }\r\n\r\n          if (target != null) {\r\n            targets[target] = true;\r\n          }\r\n\r\n          delete this.pendingConnections[key];\r\n        }\r\n      }\r\n    }, false);\r\n\r\n    if (batch > 1) {\r\n      timeEnd('Batched ' + batch + ' connections');\r\n    }\r\n\r\n    // fire our callback for who is embedding us\r\n    if (this.onLoadFunction) {\r\n      this.onLoadFunction();\r\n      this.onLoadFunction = null;\r\n    }\r\n  }\r\n\r\n  public triggerLoaded(onLoad: () => void): void {\r\n    if (onLoad) {\r\n      if (Object.keys(this.pendingConnections).length === 0) {\r\n        onLoad();\r\n      }\r\n      this.onLoadFunction = onLoad;\r\n    }\r\n  }\r\n\r\n  private checkForPendingConnections(): void {\r\n    if (this.pendingConnectionTimeout) {\r\n      window.clearTimeout(this.pendingConnectionTimeout);\r\n    }\r\n\r\n    this.pendingConnectionTimeout = window.setTimeout(() => {\r\n      this.handlePendingConnections();\r\n    }, 0);\r\n  }\r\n\r\n  public connect(\r\n    source: string,\r\n    target: string,\r\n    onConnected: (activityId: string, recentMessagesId: string) => void,\r\n    className: string = null,\r\n    slot: number = 0,\r\n    totalSlots: number = 0\r\n  ): void {\r\n    this.pendingConnections[`${source}:${target}:${className}`] = {\r\n      source,\r\n      target,\r\n      className,\r\n      slot,\r\n      totalSlots,\r\n      onConnected\r\n    };\r\n    this.checkForPendingConnections();\r\n  }\r\n\r\n  public bind(event: string, onEvent: Function): void {\r\n    return this.jsPlumb.bind(event, onEvent);\r\n  }\r\n\r\n  public repaint(uuid?: string): void {\r\n    if (!uuid) {\r\n      this.jsPlumb.recalculateOffsets();\r\n      this.jsPlumb.repaintEverything();\r\n    } else {\r\n      this.jsPlumb.recalculateOffsets(uuid);\r\n      this.jsPlumb.repaint(uuid);\r\n    }\r\n  }\r\n\r\n  public remove(uuid: string): void {\r\n    if (this.jsPlumb.isSource(uuid)) {\r\n      this.jsPlumb.unmakeSource(uuid);\r\n      this.jsPlumb.remove(uuid);\r\n    } else if (this.jsPlumb.isTarget(uuid)) {\r\n      this.jsPlumb.deleteConnectionsForElement(uuid);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Reroutes the connections for actively moving nodes. We try to direct\r\n   * connections as much as possible.\r\n   * @param elements the targets and sources that ar moving around\r\n   */\r\n  public rerouteAnchors(elements: Element[]): void {\r\n    elements.forEach((ele: Element) => {\r\n      const uuid = ele.id;\r\n      const connections = this.jsPlumb\r\n        .getConnections({ target: uuid })\r\n        .concat(this.jsPlumb.getConnections({ source: uuid }));\r\n      for (const c of connections) {\r\n        c.endpoints[1].setAnchor(getAnchor(c.endpoints[0].element, c.endpoints[1].element));\r\n      }\r\n    });\r\n  }\r\n\r\n  public revalidate(elements: Element[]): void {\r\n    this.jsPlumb.revalidate(elements);\r\n\r\n    // reroute our anchors but only after we stop moving for a bit\r\n    debounce(this.rerouteAnchors, 200, () => {\r\n      this.rerouteAnchors(elements);\r\n    });\r\n  }\r\n\r\n  public recalculate(uuid: string): void {\r\n    window.setTimeout(() => {\r\n      this.jsPlumb.revalidate(uuid);\r\n    }, 100);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.jsPlumb.reset();\r\n  }\r\n\r\n  public getPlumb(): any {\r\n    return this.jsPlumb;\r\n  }\r\n}\r\n","import { FlowStoreProps } from 'components/flow/Flow';\r\nimport { DebugState } from 'store/editor';\r\n\r\nconst mutate = require('immutability-helper');\r\n\r\n/* istanbul ignore next */\r\nexport default class Debug {\r\n  private props: FlowStoreProps;\r\n  private state: DebugState;\r\n\r\n  constructor(props: FlowStoreProps, initial: DebugState) {\r\n    this.props = props;\r\n    this.state = initial || { showUUIDs: false };\r\n  }\r\n\r\n  public showUUIDs(): DebugState {\r\n    const updated = mutate(this.state, { $merge: { showUUIDs: true } });\r\n    this.props.mergeEditorState({ debug: updated });\r\n    return updated;\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Button from 'components/button/Button';\r\nimport { Canvas } from 'components/canvas/Canvas';\r\nimport { CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\r\nimport Node from 'components/flow/node/Node';\r\nimport { getDraggedFrom } from 'components/helpers';\r\nimport NodeEditor from 'components/nodeeditor/NodeEditor';\r\nimport Simulator from 'components/simulator/Simulator';\r\nimport Sticky, { STICKY_BODY, STICKY_TITLE } from 'components/sticky/Sticky';\r\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\r\nimport { FlowDefinition, FlowMetadata, FlowPosition } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport Plumber from 'services/Plumber';\r\nimport { DragSelection, DebugState } from 'store/editor';\r\nimport { RenderNode } from 'store/flowContext';\r\nimport { createEmptyNode, detectLoops, getOrderedNodes } from 'store/helpers';\r\nimport { NodeEditorSettings } from 'store/nodeEditor';\r\nimport AppState from 'store/state';\r\nimport {\r\n  ConnectionEvent,\r\n  DispatchWithState,\r\n  mergeEditorState,\r\n  MergeEditorState,\r\n  NoParamsAC,\r\n  onConnectionDrag,\r\n  OnConnectionDrag,\r\n  OnOpenNodeEditor,\r\n  onOpenNodeEditor,\r\n  onRemoveNodes,\r\n  OnRemoveNodes,\r\n  OnUpdateCanvasPositions,\r\n  onUpdateCanvasPositions,\r\n  resetNodeEditingState,\r\n  UpdateConnection,\r\n  updateConnection,\r\n  updateSticky,\r\n  UpdateSticky\r\n} from 'store/thunks';\r\nimport {\r\n  createUUID,\r\n  isRealValue,\r\n  NODE_PADDING,\r\n  renderIf,\r\n  snapToGrid,\r\n  timeEnd,\r\n  timeStart\r\n} from 'utils';\r\nimport Debug from 'utils/debug';\r\n\r\nimport styles from './Flow.module.scss';\r\nimport { Trans } from 'react-i18next';\r\nimport { PopTabType } from 'config/interfaces';\r\nimport i18n from 'config/i18n';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    fe: any;\r\n  }\r\n}\r\n\r\nexport interface FlowStoreProps {\r\n  ghostNode: RenderNode;\r\n  debug: DebugState;\r\n  translating: boolean;\r\n  popped: string;\r\n  dragActive: boolean;\r\n\r\n  mergeEditorState: MergeEditorState;\r\n\r\n  definition: FlowDefinition;\r\n  nodes: { [uuid: string]: RenderNode };\r\n  metadata: FlowMetadata;\r\n  nodeEditorSettings: NodeEditorSettings;\r\n\r\n  updateConnection: UpdateConnection;\r\n  onOpenNodeEditor: OnOpenNodeEditor;\r\n  onUpdateCanvasPositions: OnUpdateCanvasPositions;\r\n  onRemoveNodes: OnRemoveNodes;\r\n  resetNodeEditingState: NoParamsAC;\r\n  onConnectionDrag: OnConnectionDrag;\r\n  updateSticky: UpdateSticky;\r\n}\r\n\r\nexport interface Translations {\r\n  [uuid: string]: any;\r\n}\r\n\r\nexport const DRAG_THRESHOLD = 3;\r\nexport const REPAINT_TIMEOUT = 500;\r\nexport const GHOST_POSITION_INITIAL = { left: -1000, top: -1000 };\r\n\r\nexport const nodeSpecId = 'node';\r\nexport const nodesContainerSpecId = 'node-container';\r\nexport const ghostNodeSpecId = 'ghost-node';\r\nexport const dragSelectSpecId = 'drag-select';\r\n\r\nexport const isDraggingBack = (event: ConnectionEvent) => {\r\n  return event.suspendedElementId === event.targetId && event.source !== null;\r\n};\r\n\r\nexport const getDragStyle = (drag: DragSelection) => {\r\n  const left = Math.min(drag.startX, drag.currentX);\r\n  const top = Math.min(drag.startY, drag.currentY);\r\n  const width = Math.max(drag.startX, drag.currentX) - left;\r\n  const height = Math.max(drag.startY, drag.currentY) - top;\r\n  return {\r\n    left,\r\n    top,\r\n    width,\r\n    height\r\n  };\r\n};\r\n\r\nexport class Flow extends React.PureComponent<FlowStoreProps, {}> {\r\n  private Plumber: Plumber;\r\n  private nodeContainerUUID: string;\r\n\r\n  // Refs\r\n  private ghost: any;\r\n\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  constructor(props: FlowStoreProps, context: ConfigProviderContext) {\r\n    super(props, context);\r\n\r\n    this.nodeContainerUUID = createUUID();\r\n\r\n    this.Plumber = new Plumber();\r\n\r\n    /* istanbul ignore next */\r\n    if (context.config.debug) {\r\n      window.fe = new Debug(props, this.props.debug);\r\n    }\r\n\r\n    bindCallbacks(this, {\r\n      include: [/Ref$/, /^on/, /^is/, /^get/, /^handle/]\r\n    });\r\n\r\n    timeStart('Loaded Flow');\r\n  }\r\n\r\n  private ghostRef(ref: any): any {\r\n    return (this.ghost = ref);\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.Plumber.bind('connection', (event: ConnectionEvent) =>\r\n      this.props.updateConnection(event.sourceId, event.targetId)\r\n    );\r\n    this.Plumber.bind('beforeDrag', (event: ConnectionEvent) => {\r\n      this.beforeConnectionDrag(event);\r\n    });\r\n\r\n    this.Plumber.bind('connectionDrag', (event: ConnectionEvent) => {\r\n      this.props.onConnectionDrag(event, this.context.config.flowType);\r\n    });\r\n\r\n    this.Plumber.bind('connectionDragStop', (event: ConnectionEvent) =>\r\n      this.onConnectorDrop(event)\r\n    );\r\n    this.Plumber.bind(\r\n      'beforeStartDetach',\r\n      (event: ConnectionEvent) => !this.props.translating && this.context.config.mutable\r\n    );\r\n    this.Plumber.bind('beforeDetach', (event: ConnectionEvent) => true);\r\n    this.Plumber.bind('beforeDrop', (event: ConnectionEvent) => this.onBeforeConnectorDrop(event));\r\n    this.Plumber.triggerLoaded(this.context.config.onLoad);\r\n\r\n    timeEnd('Loaded Flow');\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this.Plumber.reset();\r\n  }\r\n\r\n  /**\r\n   * Called right before a connector is dropped onto a new node\r\n   */\r\n  private onBeforeConnectorDrop(event: ConnectionEvent): boolean {\r\n    this.props.resetNodeEditingState();\r\n    const fromNodeUUID = event.sourceId.split(':')[0];\r\n    try {\r\n      detectLoops(this.props.nodes, fromNodeUUID, event.targetId);\r\n    } catch {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Called the moment a connector is done dragging, whether it is dropped on an\r\n   * existing node or on to empty space.\r\n   */\r\n  private onConnectorDrop(event: ConnectionEvent): boolean {\r\n    const ghostNode = this.props.ghostNode;\r\n    // Don't show the node editor if we a dragging back to where we were\r\n    if (isRealValue(ghostNode) && !isDraggingBack(event)) {\r\n      // Wire up the drag from to our ghost node\r\n      this.Plumber.recalculate(ghostNode.node.uuid);\r\n\r\n      const dragPoint = getDraggedFrom(ghostNode);\r\n\r\n      this.Plumber.connect(\r\n        dragPoint.nodeUUID + ':' + dragPoint.exitUUID,\r\n        ghostNode.node.uuid,\r\n        connection => {}\r\n      );\r\n\r\n      // Save our position for later\r\n      const { left, top } = (this.ghost &&\r\n        snapToGrid(this.ghost.ele.offsetLeft, this.ghost.ele.offsetTop)) || { left: 0, top: 0 };\r\n\r\n      this.props.ghostNode.ui.position = { left, top };\r\n\r\n      let originalAction = null;\r\n      if (ghostNode.node.actions && ghostNode.node.actions.length === 1) {\r\n        originalAction = ghostNode.node.actions[0];\r\n      }\r\n\r\n      // Bring up the node editor\r\n      this.props.onOpenNodeEditor({\r\n        originalNode: ghostNode,\r\n        originalAction\r\n      });\r\n    }\r\n\r\n    if (isDraggingBack(event)) {\r\n      this.props.mergeEditorState({ ghostNode: null });\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    document.removeEventListener('mousemove', (window as any).ghostListener);\r\n\r\n    return true;\r\n  }\r\n\r\n  private beforeConnectionDrag(event: ConnectionEvent): boolean {\r\n    if (event.source) {\r\n      event.source.dispatchEvent(new Event('disconnect'));\r\n    }\r\n    return !this.props.translating;\r\n  }\r\n\r\n  private handleStickyCreation(props: CanvasDraggableProps) {\r\n    const stickyMap = this.props.definition._ui.stickies || {};\r\n    const uuid = props.uuid;\r\n    return <Sticky key={uuid} uuid={uuid} sticky={stickyMap[uuid]} selected={props.selected} />;\r\n  }\r\n\r\n  private handleNodeCreation(props: CanvasDraggableProps) {\r\n    const onlyNode = Object.keys(this.props.nodes).length === 1;\r\n    return (\r\n      <Node\r\n        onlyNode={onlyNode}\r\n        startingNode={props.idx === 0}\r\n        selected={props.selected}\r\n        key={props.uuid}\r\n        data-spec={nodeSpecId}\r\n        nodeUUID={props.uuid}\r\n        plumberMakeTarget={this.Plumber.makeTarget}\r\n        plumberRemove={this.Plumber.remove}\r\n        plumberRecalculate={this.Plumber.recalculate}\r\n        plumberMakeSource={this.Plumber.makeSource}\r\n        plumberConnectExit={this.Plumber.connectExit}\r\n        plumberUpdateClass={this.Plumber.updateClass}\r\n      />\r\n    );\r\n  }\r\n\r\n  private getNodes(): CanvasDraggableProps[] {\r\n    return getOrderedNodes(this.props.nodes).map((renderNode: RenderNode, idx: number) => {\r\n      return {\r\n        uuid: renderNode.node.uuid,\r\n        position: renderNode.ui.position,\r\n        elementCreator: this.handleNodeCreation,\r\n        config: renderNode,\r\n        idx\r\n      };\r\n    });\r\n  }\r\n\r\n  private getStickies(): CanvasDraggableProps[] {\r\n    const stickyMap = this.props.definition._ui.stickies || {};\r\n    return Object.keys(stickyMap).map((uuid: string, idx: number) => {\r\n      return {\r\n        uuid,\r\n        elementCreator: this.handleStickyCreation,\r\n        position: stickyMap[uuid].position,\r\n        idx\r\n      };\r\n    });\r\n  }\r\n\r\n  private getDragNode(): JSX.Element {\r\n    return isRealValue(this.props.ghostNode) ? (\r\n      <div\r\n        data-spec={ghostNodeSpecId}\r\n        key={this.props.ghostNode.node.uuid}\r\n        style={{ position: 'absolute', display: 'block', visibility: 'hidden' }}\r\n      >\r\n        <Node\r\n          onlyNode={false}\r\n          selected={false}\r\n          startingNode={false}\r\n          ref={this.ghostRef}\r\n          ghost={true}\r\n          nodeUUID={this.props.ghostNode.node.uuid}\r\n          plumberMakeTarget={this.Plumber.makeTarget}\r\n          plumberRemove={this.Plumber.remove}\r\n          plumberRecalculate={this.Plumber.recalculate}\r\n          plumberMakeSource={this.Plumber.makeSource}\r\n          plumberConnectExit={this.Plumber.connectExit}\r\n          plumberUpdateClass={this.Plumber.updateClass}\r\n        />\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  private getSimulator(): JSX.Element {\r\n    return renderIf(this.context.config.endpoints && this.context.config.endpoints.simulateStart)(\r\n      <Simulator\r\n        key=\"simulator\"\r\n        popped={this.props.popped}\r\n        mergeEditorState={this.props.mergeEditorState}\r\n        onToggled={(visible: boolean, tab: PopTabType) => {\r\n          this.props.mergeEditorState({\r\n            popped: visible ? tab : null\r\n          });\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  private getNodeEditor(): JSX.Element {\r\n    return renderIf(this.props.nodeEditorSettings !== null)(\r\n      <NodeEditor\r\n        key=\"node-editor\"\r\n        helpArticles={this.context.config.help}\r\n        plumberConnectExit={this.Plumber.connectExit}\r\n      />\r\n    );\r\n  }\r\n\r\n  // TODO: this should be a callback from the canvas\r\n  private handleDoubleClick(position: FlowPosition): void {\r\n    const { left, top } = position;\r\n    this.props.updateSticky(createUUID(), {\r\n      position: snapToGrid(left - 90 + NODE_PADDING, top - 40),\r\n      title: STICKY_TITLE,\r\n      body: STICKY_BODY\r\n    });\r\n  }\r\n\r\n  private getEmptyFlow(): JSX.Element {\r\n    return (\r\n      <div key=\"create_node\" className={styles.empty_flow}>\r\n        <Trans i18nKey=\"empty_flow_message\">\r\n          <h1>Let's get started</h1>\r\n          <div>\r\n            We recommend starting your flow by sending a message. This message will be sent to\r\n            anybody right after they join the flow. This is your chance to send a single message or\r\n            ask them a question.\r\n          </div>\r\n        </Trans>\r\n\r\n        <Button\r\n          name={i18n.t('buttons.create_message', 'Create Message')}\r\n          onClick={() => {\r\n            const emptyNode = createEmptyNode(null, null, 1, this.context.config.flowType);\r\n            this.props.onOpenNodeEditor({\r\n              originalNode: emptyNode,\r\n              originalAction: emptyNode.node.actions[0]\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /* \r\n  public componentDidUpdate(prevProps: FlowStoreProps): void {\r\n    traceUpdate(this, prevProps);\r\n  }\r\n  */\r\n\r\n  public handleDragging(uuids: string[]): void {\r\n    uuids.forEach((uuid: string) => {\r\n      try {\r\n        const ele = document.getElementById(uuid);\r\n        const exits = ele.querySelectorAll('.jtk-connected');\r\n        this.Plumber.revalidate([ele, ...exits]);\r\n      } catch (error) {}\r\n    });\r\n  }\r\n\r\n  public handleCanvasLoaded(): void {\r\n    this.Plumber.setContainer('canvas');\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const nodes = this.getNodes();\r\n\r\n    const draggables = this.getStickies().concat(nodes);\r\n\r\n    return (\r\n      <div>\r\n        {nodes.length === 0 ? this.getEmptyFlow() : <>{this.getSimulator()}</>}\r\n        {this.getNodeEditor()}\r\n\r\n        <Canvas\r\n          mutable={this.context.config.mutable}\r\n          draggingNew={!!this.props.ghostNode && !this.props.nodeEditorSettings}\r\n          newDragElement={this.getDragNode()}\r\n          onDragging={this.handleDragging}\r\n          uuid={this.nodeContainerUUID}\r\n          dragActive={this.props.dragActive}\r\n          mergeEditorState={this.props.mergeEditorState}\r\n          onRemoveNodes={this.props.onRemoveNodes}\r\n          draggables={draggables}\r\n          onDoubleClick={this.handleDoubleClick}\r\n          onUpdatePositions={this.props.onUpdateCanvasPositions}\r\n          onLoaded={this.handleCanvasLoaded}\r\n        ></Canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* istanbul ignore next */\r\nconst mapStateToProps = ({\r\n  flowContext: { definition, metadata, nodes },\r\n  editorState: { ghostNode, debug, translating, popped, dragActive },\r\n  // tslint:disable-next-line: no-shadowed-variable\r\n  nodeEditor: { settings }\r\n}: AppState) => {\r\n  return {\r\n    nodeEditorSettings: settings,\r\n    definition,\r\n    nodes,\r\n    metadata,\r\n    ghostNode,\r\n    debug,\r\n    translating,\r\n    popped,\r\n    dragActive\r\n  };\r\n};\r\n\r\n/* istanbul ignore next */\r\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\r\n  bindActionCreators(\r\n    {\r\n      mergeEditorState,\r\n      resetNodeEditingState,\r\n      onConnectionDrag,\r\n      onOpenNodeEditor,\r\n      onUpdateCanvasPositions,\r\n      onRemoveNodes,\r\n      updateConnection,\r\n      updateSticky\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Flow);\r\n","import { desnake } from 'utils';\r\nimport i18next from 'i18next';\r\nimport { Translation, TranslationType, TranslationBundle } from './TranslatorTab';\r\n\r\nexport enum TranslationState {\r\n  COMPLETE = 'complete',\r\n  MISSING = 'missing'\r\n}\r\n\r\nexport const getMergedByType = (\r\n  bundle: TranslationBundle,\r\n  state: TranslationState,\r\n  type: TranslationType\r\n) => {\r\n  return bundle.translations\r\n    .filter(translation => {\r\n      switch (state) {\r\n        case TranslationState.COMPLETE:\r\n          return !!translation.to && translation.type === type;\r\n        case TranslationState.MISSING:\r\n          return !translation.to && translation.type === type;\r\n      }\r\n      return true;\r\n    })\r\n    .map(translation => (translation as any)[state === TranslationState.MISSING ? 'from' : 'to'])\r\n    .join(', ');\r\n};\r\n\r\nexport const findTranslations = (\r\n  type: TranslationType,\r\n  localizeableKeys: string[],\r\n  localizable: any,\r\n  localization: { [uuid: string]: any }\r\n): Translation[] => {\r\n  const translations: Translation[] = [];\r\n\r\n  localizeableKeys.forEach((attribute: string) => {\r\n    let keys = attribute.split('.');\r\n    let from = localizable as any;\r\n    let to: any = [];\r\n\r\n    while (keys.length > 0 && from) {\r\n      if (keys.length > 0 && from['uuid']) {\r\n        to = (localization || {})[from['uuid']];\r\n      }\r\n\r\n      const path = keys.shift();\r\n      if (to) {\r\n        to = to[path];\r\n      }\r\n      from = from[path];\r\n    }\r\n\r\n    if (from) {\r\n      if (to) {\r\n        to = to.join(', ');\r\n      }\r\n\r\n      if (Array.isArray(from)) {\r\n        from = from\r\n          .map((obj: any) => {\r\n            if (obj['name']) {\r\n              return obj['name'];\r\n            }\r\n            if (obj['arguments']) {\r\n              return obj['arguments'].join(' ');\r\n            }\r\n            return obj;\r\n          })\r\n          .join(', ');\r\n      }\r\n\r\n      if (from) {\r\n        translations.push({\r\n          type,\r\n          attribute,\r\n          from,\r\n          to\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  return translations;\r\n};\r\n\r\nexport const getFriendlyAttribute = (attribute: string) => {\r\n  if (attribute === 'categories') {\r\n    return i18next.t('translation.attributes.categories', 'Categories');\r\n  }\r\n\r\n  if (attribute === 'cases') {\r\n    return i18next.t('translation.attributes.cases', 'Rules');\r\n  }\r\n\r\n  if (attribute === 'text') {\r\n    return i18next.t('translation.attributes.text', 'Message');\r\n  }\r\n\r\n  if (attribute === 'quick_replies') {\r\n    return i18next.t('translation.attributes.quick_relpies', 'Quick Replies');\r\n  }\r\n\r\n  if (attribute === 'templating.variables') {\r\n    return i18next.t('translation.attributes.templates', 'Template Variables');\r\n  }\r\n\r\n  if (attribute === 'subject') {\r\n    return i18next.t('translation.attributes.subject', 'Subject');\r\n  }\r\n\r\n  if (attribute === 'body') {\r\n    return i18next.t('translation.attributes.body', 'Body');\r\n  }\r\n\r\n  return desnake(attribute);\r\n};\r\n\r\nexport const getBundleKey = (bundle: TranslationBundle) => {\r\n  return bundle.node_uuid + bundle.action_uuid;\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport { ConfigProviderContext } from 'config/ConfigProvider';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Asset, Assets } from 'store/flowContext';\r\nimport AppState from 'store/state';\r\nimport { DispatchWithState, HandleLanguageChange, handleLanguageChange } from 'store/thunks';\r\n\r\nimport styles from './LanguageSelector.module.scss';\r\n\r\nexport interface LanguageSelectorProps {\r\n  language: Asset;\r\n  languages: Assets;\r\n  handleLanguageChange: HandleLanguageChange;\r\n}\r\n\r\nexport const containerClasses = 'language-selector';\r\n\r\nexport class LanguageSelector extends React.Component<LanguageSelectorProps> {\r\n  constructor(props: LanguageSelectorProps, context: ConfigProviderContext) {\r\n    super(props, context);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public handleLanguageChanged(language: Asset): void {\r\n    this.props.handleLanguageChange(language);\r\n  }\r\n\r\n  public handleLanguageSort(a: Asset, b: Asset): number {\r\n    if (a.id === 'base') {\r\n      return -1;\r\n    }\r\n\r\n    if (b.id === 'base') {\r\n      return 1;\r\n    }\r\n\r\n    if (a.order !== undefined && b.order !== undefined) {\r\n      return a.order - b.order;\r\n    }\r\n\r\n    return a.name.localeCompare(b.name);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    if (!this.props.language) {\r\n      return null;\r\n    }\r\n\r\n    const languages = Object.keys(this.props.languages.items)\r\n      .map((iso: string) => this.props.languages.items[iso])\r\n      .sort(this.handleLanguageSort);\r\n\r\n    if (languages.length === 1) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className={containerClasses}>\r\n        {languages.map((lang: Asset, idx: number) => {\r\n          return (\r\n            <div key={'lang_' + lang.id} className={styles.language}>\r\n              {idx > 0 ? <div className={styles.separator}>|</div> : null}\r\n              <div\r\n                className={\r\n                  styles.language_link +\r\n                  ' ' +\r\n                  (this.props.language.id === lang.id ? styles.active : '')\r\n                }\r\n                onClick={() => {\r\n                  this.handleLanguageChanged(lang);\r\n                }}\r\n              >\r\n                {lang.name}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* istanbul ignore next */\r\nconst mapStateToProps = ({ flowContext: { assetStore }, editorState: { language } }: AppState) => ({\r\n  languages: assetStore.languages,\r\n  language\r\n});\r\n\r\n/* istanbul ignore next */\r\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\r\n  bindActionCreators(\r\n    {\r\n      handleLanguageChange\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LanguageSelector);\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport * as React from 'react';\r\n\r\nimport styles from './PopTab.module.scss';\r\n\r\nexport interface PopTabProps {\r\n  color: string;\r\n  icon: string;\r\n  label: string;\r\n  header: string;\r\n  top: string;\r\n  visible: boolean;\r\n  onShow: () => void;\r\n  onHide: () => void;\r\n}\r\n\r\nexport interface PopTabState {\r\n  width: number;\r\n}\r\n\r\nexport class PopTab extends React.Component<PopTabProps, PopTabState> {\r\n  private poppedEle: HTMLDivElement;\r\n\r\n  constructor(props: PopTabProps) {\r\n    super(props);\r\n    this.state = { width: 258 };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    if (this.state.width !== this.poppedEle.offsetWidth) {\r\n      this.setState({ width: this.poppedEle.offsetWidth });\r\n    }\r\n  }\r\n\r\n  private handlePoppedRef(ref: HTMLDivElement): HTMLDivElement {\r\n    return (this.poppedEle = ref);\r\n  }\r\n\r\n  private handleTabClick(): void {\r\n    this.props.onShow();\r\n  }\r\n\r\n  private handleClose(): void {\r\n    this.props.onHide();\r\n  }\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div\r\n        className={\r\n          'pop_wrapper ' + styles.pop_wrapper + ' ' + (this.props.visible ? styles.visible : '')\r\n        }\r\n        style={{\r\n          right: -this.state.width,\r\n          top: this.props.top\r\n        }}\r\n      >\r\n        <div className={styles.tab_wrapper}>\r\n          <div\r\n            className={styles.tab}\r\n            style={{ background: this.props.color }}\r\n            onClick={this.handleTabClick}\r\n          >\r\n            <div className={styles.icon}>\r\n              <span className={this.props.icon} />\r\n            </div>\r\n            <div className={styles.label}>{this.props.label}</div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          ref={this.handlePoppedRef}\r\n          className={styles.popped}\r\n          style={{\r\n            borderColor: this.props.color,\r\n            right: this.props.visible ? 15 + this.state.width : 0,\r\n            top: -100\r\n          }}\r\n        >\r\n          <div className={styles.header} style={{ background: this.props.color }}>\r\n            <div className={styles.close + ' fe-x'} onClick={this.handleClose} />\r\n            <div className={styles.header_label}>{this.props.header}</div>\r\n          </div>\r\n          <div className={styles.body} style={{ background: this.props.color }}>\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport classNames from 'classnames/bind';\r\nimport { PopTab } from 'components/poptab/PopTab';\r\nimport dateFormat from 'dateformat';\r\nimport { getAssets, getFlowDetails } from 'external';\r\nimport { FlowDefinition, SPEC_VERSION, FlowDetails, FlowMetadata } from 'flowTypes';\r\nimport React from 'react';\r\nimport { Asset, AssetStore } from 'store/flowContext';\r\nimport { renderIf } from 'utils';\r\n\r\nimport styles from './RevisionExplorer.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { PopTabType } from 'config/interfaces';\r\n\r\nconst cx: any = classNames.bind(styles);\r\n\r\nexport interface User {\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\nexport interface SaveResult {\r\n  revision: Revision;\r\n  metadata: FlowMetadata;\r\n}\r\n\r\nexport interface Revision {\r\n  id: number;\r\n  version: string;\r\n  revision: number;\r\n  created_on: string;\r\n  user: User;\r\n  current: boolean;\r\n}\r\n\r\nexport interface RevisionExplorerProps {\r\n  assetStore: AssetStore;\r\n  loadFlowDefinition: (details: FlowDetails, assetStore: AssetStore) => void;\r\n  createNewRevision: () => void;\r\n  onToggled: (visible: boolean, tab: PopTabType) => void;\r\n  utc?: boolean;\r\n  popped: string;\r\n}\r\n\r\nexport interface RevisionExplorerState {\r\n  revisions: Asset[];\r\n  revision: Asset;\r\n  definition: FlowDefinition;\r\n  visible: boolean;\r\n}\r\n\r\nexport class RevisionExplorer extends React.Component<\r\n  RevisionExplorerProps,\r\n  RevisionExplorerState\r\n> {\r\n  constructor(props: RevisionExplorerProps) {\r\n    super(props);\r\n    this.state = {\r\n      revisions: [],\r\n      revision: null,\r\n      definition: null,\r\n      visible: false\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public handleUpdateRevisions(): Promise<void> {\r\n    if (this.props.assetStore !== null) {\r\n      const assets = this.props.assetStore.revisions;\r\n      return getAssets(\r\n        assets.endpoint + '?version=' + SPEC_VERSION,\r\n        assets.type,\r\n        assets.id || 'id'\r\n      ).then((remoteAssets: Asset[]) => {\r\n        if (remoteAssets.length > 0) {\r\n          remoteAssets[0].content.current = true;\r\n        }\r\n        this.setState({ revisions: remoteAssets });\r\n      });\r\n    }\r\n  }\r\n\r\n  public handleTabClicked(): void {\r\n    this.props.onToggled(!this.state.visible, PopTabType.REVISION_HISTORY);\r\n\r\n    this.setState(\r\n      (prevState: RevisionExplorerState) => {\r\n        return { visible: !prevState.visible };\r\n      },\r\n      () => {\r\n        if (this.state.visible) {\r\n          this.handleUpdateRevisions();\r\n        } else {\r\n          if (this.state.revision && this.state.revision.id !== this.state.revisions[0].id) {\r\n            getFlowDetails(this.props.assetStore.revisions, this.state.revisions[0].id).then(\r\n              (details: FlowDetails) => {\r\n                this.props.loadFlowDefinition(details, this.props.assetStore);\r\n                this.setState({ revision: null });\r\n              }\r\n            );\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public onRevisionClicked = (\r\n    revision: Asset\r\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\r\n    return (event: React.MouseEvent<HTMLDivElement>) => {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      getFlowDetails(this.props.assetStore.revisions, revision.id).then((details: FlowDetails) => {\r\n        this.props.loadFlowDefinition(details, this.props.assetStore);\r\n        this.setState({ revision });\r\n      });\r\n    };\r\n  };\r\n\r\n  public onRevertClicked = (\r\n    revision: Asset\r\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\r\n    return (event: React.MouseEvent<HTMLDivElement>) => {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      this.props.createNewRevision();\r\n      this.setState({ visible: false, revision: null });\r\n    };\r\n  };\r\n\r\n  public render(): JSX.Element {\r\n    const classes = cx({\r\n      [styles.visible]: this.state.visible,\r\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.REVISION_HISTORY\r\n    });\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <div className={styles.mask} />\r\n        <PopTab\r\n          header={i18n.t('revisions.header', 'Revisions')}\r\n          color=\"#8e5ea7\"\r\n          icon=\"fe-time\"\r\n          label={i18n.t('revisions.label', 'Revision History')}\r\n          top=\"360px\"\r\n          visible={this.state.visible}\r\n          onShow={this.handleTabClicked}\r\n          onHide={this.handleTabClicked}\r\n        >\r\n          <div className={styles.explorer_wrapper}>\r\n            <div className={styles.explorer}>\r\n              <div className={styles.revisions}>\r\n                {this.state.revisions.map((asset: Asset) => {\r\n                  const revision = asset.content as Revision;\r\n\r\n                  const isSelected = this.state.revision && asset.id === this.state.revision.id;\r\n\r\n                  const selectedClass = revision.current || isSelected ? styles.selected : '';\r\n\r\n                  return (\r\n                    <div\r\n                      className={styles.revision + ' ' + selectedClass}\r\n                      key={'revision_' + asset.id}\r\n                      onClick={this.onRevisionClicked(asset)}\r\n                    >\r\n                      {renderIf(revision.current)(\r\n                        <div className={styles.button + ' ' + styles.current}>current</div>\r\n                      )}\r\n                      {renderIf(isSelected && !revision.current)(\r\n                        <div onClick={this.onRevertClicked(asset)} className={styles.button}>\r\n                          revert\r\n                        </div>\r\n                      )}\r\n                      <div className={styles.created_on}>\r\n                        {dateFormat(\r\n                          new Date(revision.created_on),\r\n                          'mmmm d, yyyy, h:MM TT',\r\n                          this.props.utc\r\n                        )}\r\n                      </div>\r\n                      <div className={styles.email}>\r\n                        {revision.user.name || revision.user.email}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </PopTab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport classNames from 'classnames/bind';\r\nimport React from 'react';\r\nimport styles from './IssuesTab.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { FlowIssue, Action } from 'flowTypes';\r\nimport { PopTab } from 'components/poptab/PopTab';\r\nimport { renderIssue } from 'components/flow/actions/helpers';\r\nimport {\r\n  AssetMap,\r\n  RenderNode,\r\n  Asset,\r\n  RenderNodeMap,\r\n  RenderAction,\r\n  FlowIssueMap\r\n} from 'store/flowContext';\r\nimport { getTypeConfig } from 'config';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { Type, PopTabType } from 'config/interfaces';\r\n\r\nconst cx: any = classNames.bind(styles);\r\n\r\nexport interface IssuesTabProps {\r\n  issues: FlowIssueMap;\r\n  languages: AssetMap;\r\n  nodes: RenderNodeMap;\r\n  onToggled: (visible: boolean, tab: PopTabType) => void;\r\n  onIssueClicked: (issueDetail: IssueDetail) => void;\r\n  onIssueOpened: (IssueDetail: IssueDetail) => void;\r\n  popped: string;\r\n}\r\n\r\nexport type IssueDetail = {\r\n  issues: FlowIssue[];\r\n  renderObjects: RenderObjects;\r\n  language: Asset;\r\n};\r\n\r\ntype IssueMap = {\r\n  [uuid: string]: IssueDetail;\r\n};\r\n\r\nexport interface IssuesTabState {\r\n  visible: boolean;\r\n  selectedIssue: FlowIssue;\r\n  issueDetails: IssueDetail[];\r\n}\r\n\r\nexport interface RenderObjects {\r\n  renderNode: RenderNode;\r\n  renderAction?: RenderAction;\r\n}\r\n\r\nconst getIssueKey = (issue: FlowIssue) => {\r\n  return (issue.action_uuid || issue.node_uuid) + (issue.language || '');\r\n};\r\n\r\nconst getRenderObjects = (issue: FlowIssue, nodes: RenderNodeMap): RenderObjects => {\r\n  const renderNode = nodes[issue.node_uuid];\r\n  let renderAction: RenderAction = null;\r\n\r\n  if (issue.action_uuid && renderNode) {\r\n    const actionIdx = issue.action_uuid\r\n      ? renderNode.node.actions.findIndex((action: Action) => action.uuid === issue.action_uuid)\r\n      : null;\r\n\r\n    if (actionIdx > -1) {\r\n      const action = renderNode.node.actions[actionIdx];\r\n      renderAction = {\r\n        action,\r\n        config: getTypeConfig(action.type),\r\n        index: actionIdx\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    renderNode,\r\n    renderAction\r\n  };\r\n};\r\n\r\nexport class IssuesTab extends React.Component<IssuesTabProps, IssuesTabState> {\r\n  constructor(props: IssuesTabProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n      selectedIssue: null,\r\n      issueDetails: this.buildIssueDetails()\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^render/]\r\n    });\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IssuesTabProps): void {\r\n    if (\r\n      this.props.issues !== prevProps.issues ||\r\n      prevProps.nodes !== this.props.nodes ||\r\n      this.props.languages !== prevProps.languages\r\n    ) {\r\n      this.setState({ issueDetails: this.buildIssueDetails() });\r\n    }\r\n  }\r\n\r\n  private buildIssueDetails(): IssueDetail[] {\r\n    const issueMap: IssueMap = {};\r\n    if (Object.keys(this.props.nodes).length > 0) {\r\n      for (const issues of Object.values(this.props.issues)) {\r\n        for (const issue of issues) {\r\n          const key = getIssueKey(issue);\r\n          let issueDetail = issueMap[key];\r\n          if (!issueDetail) {\r\n            let language = null;\r\n            if (issue.language && this.props.languages) {\r\n              language = this.props.languages[issue.language];\r\n            }\r\n\r\n            const renderObjects = getRenderObjects(issue, this.props.nodes);\r\n            if (renderObjects.renderNode && (!issue.action_uuid || renderObjects.renderAction)) {\r\n              issueDetail = {\r\n                issues: [issue],\r\n                renderObjects: renderObjects,\r\n                language\r\n              };\r\n            }\r\n          } else {\r\n            issueDetail.issues.push(issue);\r\n          }\r\n\r\n          if (issueDetail) {\r\n            issueMap[key] = issueDetail;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return Object.values(issueMap).sort((a: IssueDetail, b: IssueDetail) => {\r\n      if (a.language && !b.language) {\r\n        return 1;\r\n      }\r\n\r\n      if (!a.language && b.language) {\r\n        return -1;\r\n      }\r\n\r\n      if (a.language && b.language && a.language.name !== b.language.name) {\r\n        return a.language.name.localeCompare(b.language.name);\r\n      }\r\n\r\n      const nodeDifference =\r\n        a.renderObjects.renderNode.ui.position.top - b.renderObjects.renderNode.ui.position.top;\r\n\r\n      if (nodeDifference !== 0) {\r\n        return nodeDifference;\r\n      }\r\n\r\n      // if we are the same node and have actions sort by those\r\n      if (a.renderObjects.renderNode.node.uuid === b.renderObjects.renderNode.node.uuid) {\r\n        if (a.renderObjects.renderAction && b.renderObjects.renderAction) {\r\n          return a.renderObjects.renderAction.index - b.renderObjects.renderAction.index;\r\n        }\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  public handleTabClicked(): void {\r\n    this.props.onToggled(!this.state.visible, PopTabType.ISSUES_TAB);\r\n\r\n    this.setState((prevState: IssuesTabState) => {\r\n      return { visible: !prevState.visible };\r\n    });\r\n  }\r\n\r\n  private handleIssueClicked(issueDetail: IssueDetail) {\r\n    this.props.onIssueClicked(issueDetail);\r\n\r\n    window.setTimeout(() => {\r\n      this.props.onIssueOpened(issueDetail);\r\n    }, 750);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    let issueCount = 0;\r\n\r\n    let lastLanguage: Asset = null;\r\n\r\n    const issues = this.state.issueDetails.map((details: IssueDetail) => {\r\n      issueCount += details.issues.length;\r\n\r\n      let languageHeader: JSX.Element = null;\r\n\r\n      if (details.language && details.language !== lastLanguage) {\r\n        languageHeader = <div className={styles.language}>{details.language.name}</div>;\r\n      }\r\n\r\n      lastLanguage = details.language;\r\n\r\n      let typeConfig: Type = null;\r\n\r\n      if (!details.renderObjects.renderNode) {\r\n        return null;\r\n      }\r\n\r\n      if (details.renderObjects.renderAction) {\r\n        typeConfig = details.renderObjects.renderAction.config;\r\n      } else {\r\n        typeConfig = getTypeConfig(getType(details.renderObjects.renderNode));\r\n      }\r\n\r\n      const locationHeader: JSX.Element = null;\r\n      const issues = details.issues.map((issue: FlowIssue, num: number) => (\r\n        <div key={getIssueKey(issue) + num} className={styles.message}>\r\n          <div className={styles.header}>{typeConfig.name}:</div> {renderIssue(issue)}\r\n        </div>\r\n      ));\r\n\r\n      return (\r\n        <div key={getIssueKey(details.issues[0]) + '_detail'}>\r\n          {languageHeader}\r\n          <div className={styles.details} onClick={() => this.handleIssueClicked(details)}>\r\n            {locationHeader}\r\n            <div className={styles.issues_code}>{issues}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const classes = cx({\r\n      [styles.visible]: this.state.visible,\r\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.ISSUES_TAB\r\n    });\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <div className={styles.mask} />\r\n        <PopTab\r\n          header={`${i18n.t('issues.label', 'Flow Issues')} (${issueCount})`}\r\n          label={i18n.t('issues.header', 'Flow Issues')}\r\n          color=\"tomato\"\r\n          icon=\"fe-warning\"\r\n          top=\"416px\"\r\n          visible={this.state.visible}\r\n          onShow={this.handleTabClicked}\r\n          onHide={this.handleTabClicked}\r\n        >\r\n          <div className={styles.issues_wrapper}>{issues}</div>\r\n        </PopTab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport editorState from 'store/editor';\r\nimport flowContext from 'store/flowContext';\r\nimport nodeEditor from 'store/nodeEditor';\r\n\r\nexport default combineReducers({\r\n  flowContext,\r\n  editorState,\r\n  nodeEditor\r\n});\r\n","import { EditorState, initialState as editorState } from 'store/editor';\r\nimport { FlowContext, initialState as flowContext } from 'store/flowContext';\r\nimport { initialState as nodeEditor, NodeEditor } from 'store/nodeEditor';\r\n\r\nexport default interface AppState {\r\n  flowContext: FlowContext;\r\n  editorState: EditorState;\r\n  nodeEditor: NodeEditor;\r\n}\r\n\r\nexport const initialState: AppState = {\r\n  flowContext,\r\n  editorState,\r\n  nodeEditor\r\n};\r\n","import { applyMiddleware, createStore, Middleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from 'store/rootReducer';\r\nimport AppState, { initialState } from 'store/state';\r\n\r\nconst middlewares: Middleware[] = [thunk];\r\n\r\nexport default (state: AppState = initialState) => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    state,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n  );\r\n\r\n  /* istanbul ignore next */\r\n  if (module.hot) {\r\n    module.hot.accept('./rootReducer', () => {\r\n      const { default: nextRootReducer } = require('./rootReducer');\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n};\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport classNames from 'classnames/bind';\r\nimport React from 'react';\r\nimport styles from './TranslatorTab.module.scss';\r\nimport i18n from 'config/i18n';\r\nimport { PopTab } from 'components/poptab/PopTab';\r\nimport { AssetMap, Asset, RenderNodeMap } from 'store/flowContext';\r\nimport { PopTabType, Type } from 'config/interfaces';\r\nimport { Action, Category, Case } from 'flowTypes';\r\nimport { getTypeConfig } from 'config';\r\nimport {\r\n  findTranslations,\r\n  getMergedByType,\r\n  TranslationState,\r\n  getFriendlyAttribute,\r\n  getBundleKey\r\n} from './helpers';\r\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\r\nimport { UpdateTranslationFilters } from 'store/thunks';\r\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\r\nimport { getType } from 'config/typeConfigs';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\n\r\nconst cx: any = classNames.bind(styles);\r\n\r\nexport enum TranslationType {\r\n  PROPERTY = 'property',\r\n  CATEGORY = 'category',\r\n  CASE = 'case'\r\n}\r\n\r\nexport interface TranslationBundle {\r\n  node_uuid: string;\r\n  action_uuid?: string;\r\n  translations: Translation[];\r\n  translated: number;\r\n  typeConfig: Type;\r\n}\r\n\r\nexport interface Translation {\r\n  type: TranslationType;\r\n  attribute: string;\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\nexport interface TranslatorTabProps {\r\n  localization: { [uuid: string]: any };\r\n  language: Asset;\r\n  languages: AssetMap;\r\n\r\n  translationFilters: { categories: boolean; rules: boolean };\r\n\r\n  nodes: RenderNodeMap;\r\n  onToggled: (visible: boolean, tab: PopTabType) => void;\r\n  onTranslationClicked: (bundle: TranslationBundle) => void;\r\n  onTranslationOpened: (bundle: TranslationBundle) => void;\r\n  onTranslationFilterChanged: UpdateTranslationFilters;\r\n  popped: string;\r\n}\r\n\r\nexport interface TranslatorTabState {\r\n  visible: boolean;\r\n  selectedTranslation: Translation;\r\n  translationBundles: TranslationBundle[];\r\n  optionsVisible: boolean;\r\n  pctComplete: number;\r\n  translationFilters: { categories: boolean; rules: boolean };\r\n}\r\n\r\nexport class TranslatorTab extends React.Component<TranslatorTabProps, TranslatorTabState> {\r\n  public static contextTypes = {\r\n    config: fakePropType\r\n  };\r\n\r\n  constructor(props: TranslatorTabProps, context: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n      selectedTranslation: null,\r\n      translationBundles: [],\r\n      optionsVisible: false,\r\n      pctComplete: 0,\r\n      translationFilters: props.translationFilters || { categories: true, rules: true }\r\n    };\r\n\r\n    bindCallbacks(this, {\r\n      include: [/^handle/, /^render/, /^toggle/]\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    if (this.state.visible) {\r\n      this.handleTabClicked();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: TranslatorTabProps, prevState: TranslatorTabState): void {\r\n    // traceUpdate(this, prevProps, prevState);\r\n    if (\r\n      prevProps.translationFilters !== this.props.translationFilters ||\r\n      prevProps.localization !== this.props.localization ||\r\n      prevProps.language !== this.props.language ||\r\n      !prevState.visible ||\r\n      prevState.translationFilters !== this.state.translationFilters\r\n    ) {\r\n      this.handleUpdateTranslations();\r\n    }\r\n  }\r\n\r\n  private handleUpdateTranslations(): void {\r\n    const translationBundles: TranslationBundle[] = [];\r\n    Object.keys(this.props.nodes).forEach((node_uuid: string) => {\r\n      const renderNode = this.props.nodes[node_uuid];\r\n\r\n      // check for router level translations\r\n      if (\r\n        renderNode.node.router &&\r\n        (this.state.translationFilters.categories || this.state.translationFilters.rules)\r\n      ) {\r\n        const typeConfig = getTypeConfig(getType(renderNode));\r\n\r\n        let translations: Translation[] = [];\r\n        if (this.state.translationFilters.categories) {\r\n          const localizeableKeys = ['name'];\r\n          renderNode.node.router.categories.forEach((category: Category) => {\r\n            translations.push(\r\n              ...findTranslations(\r\n                TranslationType.CATEGORY,\r\n                localizeableKeys,\r\n                category,\r\n                this.props.localization\r\n              )\r\n            );\r\n          });\r\n        }\r\n\r\n        if (this.state.translationFilters.rules) {\r\n          const localizeableKeys = ['arguments'];\r\n          const switchRouter = getSwitchRouter(renderNode.node);\r\n          if (switchRouter) {\r\n            switchRouter.cases.forEach((kase: Case) => {\r\n              translations.push(\r\n                ...findTranslations(\r\n                  TranslationType.CASE,\r\n                  localizeableKeys,\r\n                  kase,\r\n                  this.props.localization\r\n                )\r\n              );\r\n            });\r\n          }\r\n        }\r\n\r\n        if (translations.length > 0) {\r\n          translationBundles.push({\r\n            typeConfig,\r\n            node_uuid,\r\n            translations,\r\n            translated: translations.filter((translation: Translation) => !!translation.to).length\r\n          });\r\n        }\r\n      } else {\r\n        // find attributes from each action\r\n        renderNode.node.actions.forEach((action: Action) => {\r\n          const typeConfig = getTypeConfig(action.type);\r\n          const translations = findTranslations(\r\n            TranslationType.PROPERTY,\r\n            typeConfig.localizeableKeys || [],\r\n            action,\r\n            this.props.localization\r\n          );\r\n\r\n          if (translations.length > 0) {\r\n            translationBundles.push({\r\n              typeConfig,\r\n              node_uuid,\r\n              action_uuid: action.uuid,\r\n              translations,\r\n              translated: translations.filter((translation: Translation) => !!translation.to).length\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    const counts = { total: 0, complete: 0 };\r\n    translationBundles.reduce((counts, bundle) => {\r\n      counts.total += bundle.translations.length;\r\n      counts.complete += bundle.translated;\r\n      return counts;\r\n    }, counts);\r\n\r\n    const pctComplete = counts.total > 0 ? Math.round((counts.complete / counts.total) * 100) : 0;\r\n\r\n    const bundles = translationBundles\r\n      .filter((bundle: TranslationBundle) => bundle.translated < bundle.translations.length)\r\n      .sort((a: TranslationBundle, b: TranslationBundle) => {\r\n        return b.translations.length - b.translated - (a.translations.length - a.translated);\r\n      });\r\n\r\n    if (\r\n      pctComplete !== this.state.pctComplete ||\r\n      bundles.length !== this.state.translationBundles.length\r\n    ) {\r\n      this.setState({\r\n        pctComplete,\r\n        translationBundles: bundles\r\n      });\r\n    }\r\n  }\r\n\r\n  public handleTabClicked(): void {\r\n    this.props.onToggled(!this.state.visible, PopTabType.TRANSLATOR_TAB);\r\n    this.setState((prevState: TranslatorTabState) => {\r\n      return { visible: !prevState.visible };\r\n    });\r\n  }\r\n\r\n  public toggleOptions(): void {\r\n    this.setState({ optionsVisible: !this.state.optionsVisible });\r\n  }\r\n\r\n  private toggleCategories(categories: boolean): void {\r\n    this.setState(\r\n      { translationFilters: { categories, rules: this.state.translationFilters.rules } },\r\n      () => {\r\n        this.props.onTranslationFilterChanged(this.state.translationFilters);\r\n      }\r\n    );\r\n  }\r\n  private toggleRules(rules: boolean): void {\r\n    this.setState(\r\n      { translationFilters: { rules, categories: this.state.translationFilters.categories } },\r\n      () => {\r\n        this.props.onTranslationFilterChanged(this.state.translationFilters);\r\n      }\r\n    );\r\n  }\r\n\r\n  private renderMissing(key: string, from: string, summary: string) {\r\n    if (from) {\r\n      return (\r\n        <div key={this.props.language.id + key} className={styles.item}>\r\n          <div className={styles.text + ' ' + styles.from_text}>{from}</div>\r\n          <div className={styles.text + ' ' + styles.attribute}>{summary}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private handleTranslationClicked(bundle: TranslationBundle) {\r\n    this.props.onTranslationClicked(bundle);\r\n\r\n    window.setTimeout(() => {\r\n      this.props.onTranslationOpened(bundle);\r\n    }, 750);\r\n  }\r\n\r\n  private handleChangeLanguageClick(e: any): void {\r\n    this.context.config.onChangeLanguage(this.props.language.id, this.props.language.name);\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    // only show change button if container set up to handle it\r\n    const showChangeButton = this.state.optionsVisible && this.context.config.onChangeLanguage;\r\n\r\n    const classes = cx({\r\n      [styles.visible]: this.state.visible,\r\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.TRANSLATOR_TAB\r\n    });\r\n\r\n    const optionsClasses = cx({\r\n      [styles.options]: true,\r\n      [styles.options_visible]: this.state.optionsVisible,\r\n      [styles.change_visible]: showChangeButton\r\n    });\r\n\r\n    const filledClasses = cx({\r\n      [styles.filled]: true,\r\n      [styles.hundredpct]: this.state.pctComplete === 100\r\n    });\r\n\r\n    const wrapperClasses = cx({\r\n      [styles.translations_wrapper]: true,\r\n      [styles.complete]: this.state.translationBundles.length === 0\r\n    });\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <PopTab\r\n          header={`${this.props.language.name} ${i18n.t('translation.label', 'Translations')}`}\r\n          label={i18n.t('translation.header', 'Flow Translation')}\r\n          color=\"#777\"\r\n          icon=\"fe-language\"\r\n          top=\"243px\"\r\n          visible={this.state.visible}\r\n          onShow={this.handleTabClicked}\r\n          onHide={this.handleTabClicked}\r\n        >\r\n          <div key={'translation_wrapper'} className={wrapperClasses}>\r\n            {this.state.translationBundles.map((bundle: TranslationBundle) => {\r\n              return (\r\n                <div\r\n                  key={this.props.language.id + getBundleKey(bundle)}\r\n                  className={styles.translate_block}\r\n                  onClick={() => {\r\n                    this.handleTranslationClicked(bundle);\r\n                  }}\r\n                >\r\n                  <div className={styles.needs_translation}>\r\n                    <div className={styles.type_name}>{bundle.typeConfig.name}</div>\r\n                    {this.renderMissing(\r\n                      getBundleKey(bundle) + 'categories',\r\n                      getMergedByType(bundle, TranslationState.MISSING, TranslationType.CATEGORY),\r\n                      getFriendlyAttribute('categories')\r\n                    )}\r\n\r\n                    {this.renderMissing(\r\n                      getBundleKey(bundle) + 'rules',\r\n\r\n                      getMergedByType(bundle, TranslationState.MISSING, TranslationType.CASE),\r\n                      getFriendlyAttribute('cases')\r\n                    )}\r\n                    {bundle.translations\r\n                      .filter(\r\n                        translation =>\r\n                          !translation.to && translation.type === TranslationType.PROPERTY\r\n                      )\r\n                      .map(translation =>\r\n                        this.renderMissing(\r\n                          getBundleKey(bundle) + translation.from,\r\n                          translation.from,\r\n                          getFriendlyAttribute(translation.attribute)\r\n                        )\r\n                      )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className={optionsClasses} onClick={this.toggleOptions}>\r\n            <div className={styles.header}>\r\n              <div className={styles.progress_bar}>\r\n                <div\r\n                  style={{ width: `${this.state.pctComplete}%` }}\r\n                  className={filledClasses}\r\n                ></div>\r\n              </div>\r\n              <div className={styles.toggle}>\r\n                <span className=\"fe-arrow-up\"></span>\r\n              </div>\r\n            </div>\r\n            <div className={styles.filters}>\r\n              <div className={styles.checkboxes}>\r\n                <div>\r\n                  <CheckboxElement\r\n                    name={i18n.t('forms.categories', 'categories')}\r\n                    checked={this.state.translationFilters.categories}\r\n                    description={'Categories'}\r\n                    checkboxClassName={styles.checkbox}\r\n                    onChange={this.toggleCategories}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CheckboxElement\r\n                    name={i18n.t('forms.rules', 'rules')}\r\n                    checked={this.state.translationFilters.rules}\r\n                    description={'Rule Arguments'}\r\n                    checkboxClassName={styles.checkbox}\r\n                    onChange={this.toggleRules}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={styles.pct_complete}>{this.state.pctComplete}%</div>\r\n            </div>\r\n            <div className={styles.changeLanguage}>\r\n              {showChangeButton && (\r\n                <button onClick={this.handleChangeLanguageClick}>\r\n                  {i18n.t('forms.use_as_default_language', 'Use as default language')}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </PopTab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { react as bindCallbacks } from 'auto-bind';\r\nimport Button, { ButtonTypes } from 'components/button/Button';\r\nimport Dialog from 'components/dialog/Dialog';\r\nimport { Fixy } from 'components/fixy/Fixy';\r\nimport ConnectedFlow from 'components/flow/Flow';\r\nimport styles from 'components/index.module.scss';\r\nimport ConnectedLanguageSelector from 'components/languageselector/LanguageSelector';\r\nimport Loading from 'components/loading/Loading';\r\nimport Modal from 'components/modal/Modal';\r\nimport { RevisionExplorer } from 'components/revisions/RevisionExplorer';\r\nimport { IssuesTab, IssueDetail } from 'components/issues/IssuesTab';\r\nimport ConfigProvider from 'config';\r\nimport { fakePropType } from 'config/ConfigProvider';\r\nimport { FlowDefinition, FlowEditorConfig, AnyAction } from 'flowTypes';\r\nimport * as React from 'react';\r\nimport { connect, Provider as ReduxProvider } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport createStore from 'store/createStore';\r\nimport { ModalMessage } from 'store/editor';\r\nimport { Asset, Assets, AssetStore, RenderNodeMap, FlowIssueMap } from 'store/flowContext';\r\nimport { getCurrentDefinition } from 'store/helpers';\r\nimport AppState from 'store/state';\r\nimport {\r\n  CreateNewRevision,\r\n  createNewRevision,\r\n  DispatchWithState,\r\n  FetchFlow,\r\n  fetchFlow,\r\n  LoadFlowDefinition,\r\n  loadFlowDefinition,\r\n  MergeEditorState,\r\n  mergeEditorState,\r\n  onOpenNodeEditor,\r\n  OnOpenNodeEditor,\r\n  handleLanguageChange,\r\n  HandleLanguageChange,\r\n  UpdateTranslationFilters,\r\n  updateTranslationFilters\r\n} from 'store/thunks';\r\nimport { ACTIVITY_INTERVAL, downloadJSON, renderIf, onNextRender } from 'utils';\r\nimport { PopTabType } from 'config/interfaces';\r\nimport { TranslatorTab, TranslationBundle } from './translator/TranslatorTab';\r\nimport i18n from 'config/i18n';\r\n\r\nconst { default: PageVisibility } = require('react-page-visibility');\r\n\r\nexport interface FlowEditorContainerProps {\r\n  config: FlowEditorConfig;\r\n}\r\n\r\nexport interface FlowEditorStoreProps {\r\n  assetStore: AssetStore;\r\n  baseLanguage: Asset;\r\n  language: Asset;\r\n  languages: Assets;\r\n  simulating: boolean;\r\n  translating: boolean;\r\n  fetchingFlow: boolean;\r\n  definition: FlowDefinition;\r\n  issues: FlowIssueMap;\r\n  fetchFlow: FetchFlow;\r\n  loadFlowDefinition: LoadFlowDefinition;\r\n  createNewRevision: CreateNewRevision;\r\n  mergeEditorState: MergeEditorState;\r\n  onOpenNodeEditor: OnOpenNodeEditor;\r\n  handleLanguageChange: HandleLanguageChange;\r\n  nodes: RenderNodeMap;\r\n  modalMessage: ModalMessage;\r\n  saving: boolean;\r\n  scrollToNode: string;\r\n  scrollToAction: string;\r\n  popped: string;\r\n  updateTranslationFilters: UpdateTranslationFilters;\r\n}\r\n\r\nconst hotStore = createStore();\r\n\r\nexport const getLabel = (): JSX.Element => {\r\n  return <div>testing</div>;\r\n};\r\n\r\n// Root container, wires up context-providers\r\nexport const FlowEditorContainer: React.SFC<FlowEditorContainerProps> = ({ config }) => {\r\n  return (\r\n    <ConfigProvider config={{ ...config }}>\r\n      <ReduxProvider store={hotStore as any}>\r\n        <ConnectedFlowEditor />\r\n      </ReduxProvider>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n\r\nexport const contextTypes = {\r\n  config: fakePropType\r\n};\r\n\r\nexport const editorContainerSpecId = 'editor-container';\r\nexport const editorSpecId = 'editor';\r\n\r\n/**\r\n * The main editor view for editing a flow\r\n */\r\nexport class FlowEditor extends React.Component<FlowEditorStoreProps> {\r\n  public static contextTypes = contextTypes;\r\n\r\n  constructor(props: FlowEditorStoreProps) {\r\n    super(props);\r\n    bindCallbacks(this, {\r\n      include: [/^handle/]\r\n    });\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const { endpoints, flow, forceSaveOnLoad } = this.context.config;\r\n    this.props.fetchFlow(endpoints, flow, forceSaveOnLoad);\r\n  }\r\n\r\n  private handleDownloadClicked(): void {\r\n    downloadJSON(getCurrentDefinition(this.props.definition, this.props.nodes), 'definition');\r\n  }\r\n\r\n  private handleVisibilityChanged(visible: boolean): void {\r\n    this.props.mergeEditorState({\r\n      visible,\r\n      activityInterval: ACTIVITY_INTERVAL\r\n    });\r\n  }\r\n\r\n  public getAlertModal(): JSX.Element {\r\n    if (!this.props.modalMessage) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal width=\"600px\" show={true}>\r\n        <Dialog\r\n          className={styles.alert_modal}\r\n          title={this.props.modalMessage.title}\r\n          headerClass=\"alert\"\r\n          buttons={{\r\n            primary: {\r\n              name: 'Ok',\r\n              onClick: () => {\r\n                this.props.mergeEditorState({ modalMessage: null });\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <div className={styles.alert_body}>{this.props.modalMessage.body}</div>\r\n        </Dialog>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  public getSavingIndicator(): JSX.Element {\r\n    if (!this.props.saving) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div id=\"saving_animation\" className={styles.saving}>\r\n        <Fixy>\r\n          <Loading units={5} color=\"#3498db\" size={7} />\r\n        </Fixy>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public getFooter(): JSX.Element {\r\n    return !this.props.fetchingFlow && this.context.config.showDownload ? (\r\n      <div className={styles.footer}>\r\n        <div className={styles.download_button}>\r\n          <Button\r\n            name={i18n.t('buttons.download', 'Download')}\r\n            onClick={this.handleDownloadClicked}\r\n            type={ButtonTypes.primary}\r\n          />\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  private handleLanguageSetting(issueDetail: IssueDetail): void {\r\n    if (issueDetail.language) {\r\n      this.props.handleLanguageChange(issueDetail.language);\r\n    } else {\r\n      this.props.handleLanguageChange(this.props.baseLanguage);\r\n    }\r\n  }\r\n\r\n  public handleOpenIssue(issueDetail: IssueDetail): void {\r\n    this.handleLanguageSetting(issueDetail);\r\n    this.props.onOpenNodeEditor({\r\n      originalNode: issueDetail.renderObjects.renderNode,\r\n      originalAction: issueDetail.renderObjects.renderAction\r\n        ? (issueDetail.renderObjects.renderAction.action as AnyAction)\r\n        : null\r\n    });\r\n  }\r\n\r\n  private handleScrollToNode(node_uuid: string, action_uuid: string): void {\r\n    if (this.props.scrollToNode === node_uuid && this.props.scrollToAction === action_uuid) {\r\n      this.props.mergeEditorState({\r\n        scrollToNode: null,\r\n        scrollToAction: null\r\n      });\r\n    }\r\n\r\n    onNextRender(() => {\r\n      this.props.mergeEditorState({\r\n        scrollToNode: node_uuid,\r\n        scrollToAction: action_uuid\r\n      });\r\n    });\r\n  }\r\n\r\n  public handleScrollToTranslation(translation: TranslationBundle): void {\r\n    this.handleScrollToNode(translation.node_uuid, translation.action_uuid);\r\n  }\r\n\r\n  private handleOpenTranslation(translation: TranslationBundle): void {\r\n    const renderNode = this.props.nodes[translation.node_uuid];\r\n    const action = translation.action_uuid\r\n      ? renderNode.node.actions.find(action => action.uuid === translation.action_uuid)\r\n      : null;\r\n\r\n    this.props.onOpenNodeEditor({\r\n      originalNode: renderNode,\r\n      originalAction: action\r\n    });\r\n  }\r\n\r\n  public handleScrollToIssue(issueDetail: IssueDetail): void {\r\n    this.handleLanguageSetting(issueDetail);\r\n    const issue = issueDetail.issues[0];\r\n    this.handleScrollToNode(issue.node_uuid, issue.action_uuid);\r\n  }\r\n\r\n  private handleTabPopped(visible: boolean, tab: PopTabType): void {\r\n    if (visible) {\r\n      this.props.mergeEditorState({ popped: tab });\r\n    } else {\r\n      this.props.mergeEditorState({ popped: null });\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: FlowEditorStoreProps): void {\r\n    // traceUpdate(this, prevProps);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <PageVisibility onChange={this.handleVisibilityChanged}>\r\n        <div\r\n          id={editorContainerSpecId}\r\n          className={this.props.translating ? styles.translating : undefined}\r\n          data-spec={editorContainerSpecId}\r\n        >\r\n          {this.getFooter()}\r\n          {this.getAlertModal()}\r\n          <div className={styles.editor} data-spec={editorSpecId}>\r\n            {renderIf(\r\n              Object.keys(this.props.nodes || {}).length > 0 &&\r\n                this.props.languages &&\r\n                Object.keys(this.props.languages.items).length > 0\r\n            )(<ConnectedLanguageSelector />)}\r\n\r\n            {this.getSavingIndicator()}\r\n\r\n            {renderIf(this.props.definition && this.props.language && !this.props.fetchingFlow)(\r\n              <ConnectedFlow />\r\n            )}\r\n\r\n            {renderIf(this.props.definition && this.props.translating && !this.props.fetchingFlow)(\r\n              <TranslatorTab\r\n                language={this.props.language}\r\n                languages={this.props.languages ? this.props.languages.items : {}}\r\n                localization={\r\n                  this.props.definition && this.props.language\r\n                    ? this.props.definition.localization[this.props.language.id]\r\n                    : {}\r\n                }\r\n                onTranslationClicked={this.handleScrollToTranslation}\r\n                onTranslationOpened={this.handleOpenTranslation}\r\n                onTranslationFilterChanged={this.props.updateTranslationFilters}\r\n                translationFilters={\r\n                  this.props.definition ? this.props.definition._ui.translation_filters : null\r\n                }\r\n                nodes={this.props.nodes}\r\n                onToggled={this.handleTabPopped}\r\n                popped={this.props.popped}\r\n              />\r\n            )}\r\n\r\n            <RevisionExplorer\r\n              loadFlowDefinition={this.props.loadFlowDefinition}\r\n              createNewRevision={this.props.createNewRevision}\r\n              assetStore={this.props.assetStore}\r\n              onToggled={this.handleTabPopped}\r\n              popped={this.props.popped}\r\n            />\r\n\r\n            {renderIf(Object.keys(this.props.issues).length > 0)(\r\n              <IssuesTab\r\n                issues={this.props.issues}\r\n                onIssueClicked={this.handleScrollToIssue}\r\n                onIssueOpened={this.handleOpenIssue}\r\n                languages={this.props.languages ? this.props.languages.items : {}}\r\n                nodes={this.props.nodes}\r\n                onToggled={this.handleTabPopped}\r\n                popped={this.props.popped}\r\n              />\r\n            )}\r\n            <div id=\"portal-root\" />\r\n            <div id=\"canvas-portal\" />\r\n          </div>\r\n        </div>\r\n      </PageVisibility>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  flowContext: { definition, issues, nodes, assetStore, baseLanguage },\r\n  editorState: {\r\n    translating,\r\n    language,\r\n    fetchingFlow,\r\n    simulating,\r\n    modalMessage,\r\n    saving,\r\n    scrollToAction,\r\n    scrollToNode,\r\n    popped\r\n  }\r\n}: AppState) => {\r\n  const languages = assetStore ? assetStore.languages : null;\r\n\r\n  return {\r\n    popped,\r\n    baseLanguage,\r\n    modalMessage,\r\n    saving,\r\n    simulating,\r\n    assetStore,\r\n    translating,\r\n    language,\r\n    fetchingFlow,\r\n    definition,\r\n    issues,\r\n    nodes,\r\n    languages,\r\n    scrollToAction,\r\n    scrollToNode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\r\n  bindActionCreators(\r\n    {\r\n      fetchFlow,\r\n      loadFlowDefinition,\r\n      createNewRevision,\r\n      mergeEditorState,\r\n      onOpenNodeEditor,\r\n      handleLanguageChange,\r\n      updateTranslationFilters\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport const ConnectedFlowEditor = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FlowEditor);\r\n\r\nexport default FlowEditorContainer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './global.module.scss';\r\nimport 'static/fonts/floweditor/style.css';\r\n\r\nimport FlowEditor from 'components';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// bring in our temba-components if they aren't already registered\r\nif (typeof customElements !== 'undefined' && !customElements.get('temba-textinput')) {\r\n  import('@nyaruka/temba-components').then(() => {\r\n    console.log('Loading temba components');\r\n  });\r\n}\r\n\r\nwindow.showFlowEditor = (ele, config) => {\r\n  ReactDOM.render(<FlowEditor config={config} />, ele);\r\n};\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"context_explorer\":\"ContextExplorer_context_explorer__2AUwa\",\"visible\":\"ContextExplorer_visible__2RP-A\",\"panel\":\"ContextExplorer_panel__3dyj9\",\"close_button\":\"ContextExplorer_close_button__lKvyh\",\"row\":\"ContextExplorer_row__bxZTJ\",\"arrow_right\":\"ContextExplorer_arrow_right__1RdI5\",\"has_children\":\"ContextExplorer_has_children__2Wec8\",\"open\":\"ContextExplorer_open__3NIiv\",\"key\":\"ContextExplorer_key__1i4ZU\",\"clipboard\":\"ContextExplorer_clipboard__1_N5N\",\"key_summary\":\"ContextExplorer_key_summary__OPyQ_\",\"colon\":\"ContextExplorer_colon__3ATuY\",\"str_value\":\"ContextExplorer_str_value__1WQnW\",\"footer\":\"ContextExplorer_footer__3x48c\",\"hide_checkbox\":\"ContextExplorer_hide_checkbox__l8uL2\",\"help\":\"ContextExplorer_help__1AzNs\",\"empty_toggle\":\"ContextExplorer_empty_toggle__2GOlh\",\"message\":\"ContextExplorer_message__3354w\",\"expression\":\"ContextExplorer_expression__2c6JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"yellow\":\"Sticky_yellow__iwTMz\",\"color_option\":\"Sticky_color_option__3N-mN\",\"sticky\":\"Sticky_sticky__38p9g\",\"blue\":\"Sticky_blue__1Vkxx\",\"purple\":\"Sticky_purple__3yjtA\",\"gray\":\"Sticky_gray__s_JjI\",\"green\":\"Sticky_green__2nEZ_\",\"color_chooser_container\":\"Sticky_color_chooser_container__L6elN\",\"color_chooser\":\"Sticky_color_chooser__157T2\",\"sticky_container\":\"Sticky_sticky_container__132Eo\",\"selected\":\"Sticky_selected__1W0Ac\",\"removal\":\"Sticky_removal__1TJwt\",\"title_wrapper\":\"Sticky_title_wrapper__3Zj6c\",\"remove_button\":\"Sticky_remove_button__LO7Da\",\"title\":\"Sticky_title__3ojEH\",\"confirmation\":\"Sticky_confirmation__14yUL\",\"body_wrapper\":\"Sticky_body_wrapper__uiRQ8\",\"body\":\"Sticky_body__2c3uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node_container\":\"Node_node_container__2xQdr\",\"uuid\":\"Node_uuid__yyY4K\",\"ghost\":\"Node_ghost__1j1Bu\",\"nondragged\":\"Node_nondragged__3VKJl\",\"selected\":\"Node_selected__3NuLL\",\"node\":\"Node_node__2zuk-\",\"immutable\":\"Node_immutable__1mPnU\",\"save_as\":\"Node_save_as__2QkEk\",\"save_result\":\"Node_save_result__2S9M5\",\"result_name\":\"Node_result_name__SVZCo\",\"cropped\":\"Node_cropped__LhQgS\",\"exit_table\":\"Node_exit_table__2f2Qa\",\"exits\":\"Node_exits__2cT69\",\"add\":\"Node_add__1rVP0\",\"drag_group\":\"Node_drag_group__3A4QI\",\"flow_start\":\"Node_flow_start__15ff2\",\"flow_start_message\":\"Node_flow_start_message__1xOPG\",\"active\":\"Node_active__2skN1\",\"pulse\":\"Node_pulse__2Pyj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"random\":\"shared_random__1Jk9Z\",\"issues\":\"shared_issues__2BXGC\",\"header\":\"shared_header__BLDoK\",\"icon\":\"shared_icon__1Ocfu\",\"title\":\"shared_title__3CeGl\",\"summary\":\"shared_summary__3kwe4\",\"issue_help\":\"shared_issue_help__2cQvT\",\"wait_for_audio\":\"shared_wait_for_audio__2tJdX\",\"wait_for_image\":\"shared_wait_for_image__1jHhe\",\"wait_for_video\":\"shared_wait_for_video__10x28\",\"wait_for_location\":\"shared_wait_for_location__3yFSK\",\"wait_for_menu\":\"shared_wait_for_menu__3b087\",\"wait_for_digits\":\"shared_wait_for_digits__1i7Ri\",\"wait_for_response\":\"shared_wait_for_response__2A42B\",\"add_contact_groups\":\"shared_add_contact_groups__HrVyx\",\"remove_contact_groups\":\"shared_remove_contact_groups__-aC4V\",\"send_email\":\"shared_send_email__2u6y1\",\"send_broadcast\":\"shared_send_broadcast__16SMm\",\"msg\":\"shared_msg__5ndku\",\"say_msg\":\"shared_say_msg__19BqK\",\"send_msg\":\"shared_send_msg__2tewb\",\"open_ticket\":\"shared_open_ticket__pzfLv\",\"transfer_airtime\":\"shared_transfer_airtime__2d5by\",\"enter_flow\":\"shared_enter_flow__Ql5BV\",\"start_session\":\"shared_start_session__2KBo2\",\"set_run_result\":\"shared_set_run_result__17Dz_\",\"add_input_labels\":\"shared_add_input_labels__wUoMx\",\"add_contact_urn\":\"shared_add_contact_urn__VG2sr\",\"set_contact_name\":\"shared_set_contact_name__3dce9\",\"set_contact_field\":\"shared_set_contact_field__3IRna\",\"set_contact_language\":\"shared_set_contact_language__1RZj3\",\"set_contact_status\":\"shared_set_contact_status__2ZRC9\",\"set_contact_channel\":\"shared_set_contact_channel__15nvY\",\"play_audio\":\"shared_play_audio__2RiLX\",\"missing\":\"shared_missing__2sjyj\",\"missing_asset\":\"shared_missing_asset__BYxcj\",\"call_classifier\":\"shared_call_classifier__37TDD\",\"split_by_random\":\"shared_split_by_random__2ftAh\",\"split_by_expression\":\"shared_split_by_expression__1VEwC\",\"split_by_groups\":\"shared_split_by_groups__niEjF\",\"split_by_contact_field\":\"shared_split_by_contact_field__DijBu\",\"split_by_intent\":\"shared_split_by_intent__1Dczn\",\"split_by_run_result\":\"shared_split_by_run_result__1kKvf\",\"split_by_scheme\":\"shared_split_by_scheme__H8hZZ\",\"call_resthook\":\"shared_call_resthook__2EwJD\",\"call_webhook\":\"shared_call_webhook__2cdWc\",\"breaks\":\"shared_breaks__o0n4c\",\"url\":\"shared_url__2UvmT\",\"node_asset\":\"shared_node_asset__1xBfm\",\"node_group\":\"shared_node_group__2iCjO\",\"node_label\":\"shared_node_label__15efA\",\"advanced_title\":\"shared_advanced_title__pJYNq\",\"alert\":\"shared_alert__2sRqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"action\":\"Action_action__3PZIT\",\"has_router\":\"Action_has_router__2Rmo_\",\"body\":\"Action_body__3PRcb\",\"add_contact_urn\":\"Action_add_contact_urn__2KsoP\",\"add_input_labels\":\"Action_add_input_labels__3_kFZ\",\"send_msg\":\"Action_send_msg__1tlaL\",\"set_contact_field\":\"Action_set_contact_field__q2mYj\",\"set_contact_name\":\"Action_set_contact_name__2M0Re\",\"call_webhook\":\"Action_call_webhook__330hZ\",\"call_resthook\":\"Action_call_resthook__jdai_\",\"set_contact_language\":\"Action_set_contact_language__3GfFP\",\"set_contact_status\":\"Action_set_contact_status__6H7ru\",\"set_contact_channel\":\"Action_set_contact_channel__1722v\",\"add_contact_groups\":\"Action_add_contact_groups__3fRoC\",\"remove_contact_groups\":\"Action_remove_contact_groups__3pBAi\",\"play_audio\":\"Action_play_audio__3y6iH\",\"say_msg\":\"Action_say_msg__2b_vi\",\"set_run_result\":\"Action_set_run_result__33qNk\",\"send_email\":\"Action_send_email__aAC5-\",\"send_broadcast\":\"Action_send_broadcast__3Hxth\",\"transfer_airtime\":\"Action_transfer_airtime__2hwUt\",\"open_ticket\":\"Action_open_ticket__LsSGR\",\"missing\":\"Action_missing__3MFTs\",\"enter_flow\":\"Action_enter_flow__3fFZX\",\"call_classifier\":\"Action_call_classifier__3faIJ\",\"start_session\":\"Action_start_session__3SD8a\",\"not_localizable\":\"Action_not_localizable__3Bq2A\",\"overlay\":\"Action_overlay__34Yxf\",\"immutable\":\"Action_immutable__x07ed\",\"translate_from\":\"Action_translate_from__THL5i\",\"translate_to\":\"Action_translate_to__1zRRq\",\"translating\":\"Action_translating__3ighU\",\"missing_localization\":\"Action_missing_localization__2L6XU\",\"localized\":\"Action_localized__YkbBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"group\":\"CaseElement_group__1Qt_0\",\"divider\":\"CaseElement_divider__2vV8J\",\"kase\":\"CaseElement_kase__2VC9X\",\"has_intent\":\"CaseElement_has_intent__39kUP\",\"choice\":\"CaseElement_choice__2t_wO\",\"has_top_intent\":\"CaseElement_has_top_intent__CRF1t\",\"multi_operand\":\"CaseElement_multi_operand__3T9vg\",\"form_group\":\"CaseElement_form_group__3nYjh\",\"single_operand\":\"CaseElement_single_operand__8QvUF\",\"categorize_as\":\"CaseElement_categorize_as__2yG-Q\",\"category\":\"CaseElement_category__2Lm9x\",\"remove_icon\":\"CaseElement_remove_icon__2TYZA\",\"dnd_icon\":\"CaseElement_dnd_icon__3PaY1\",\"relative_date\":\"CaseElement_relative_date__1hCNb\",\"empty\":\"CaseElement_empty__3Dqc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"WebhookRouterForm_link__2-3z3\",\"info\":\"WebhookRouterForm_info__1tJPK\",\"method\":\"WebhookRouterForm_method__2hd8v\",\"url\":\"WebhookRouterForm_url__2WZqi\",\"code\":\"WebhookRouterForm_code__1acsH\",\"instructions\":\"WebhookRouterForm_instructions__2IhXo\",\"headers_title\":\"WebhookRouterForm_headers_title__3SOqQ\",\"remove_ico\":\"WebhookRouterForm_remove_ico__HQaBY\",\"example\":\"WebhookRouterForm_example__2I1Kz\",\"header\":\"WebhookRouterForm_header__w1DJp\",\"header_name\":\"WebhookRouterForm_header_name__Y1-IB\",\"header_value\":\"WebhookRouterForm_header_value__3GKdg\",\"body_form\":\"WebhookRouterForm_body_form__3zsDs\",\"req_body\":\"WebhookRouterForm_req_body__cenCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"RevisionExplorer_hidden__gXkQS\",\"mask\":\"RevisionExplorer_mask__3JvLF\",\"visible\":\"RevisionExplorer_visible__B4Lni\",\"explorer_wrapper\":\"RevisionExplorer_explorer_wrapper__2946d\",\"explorer\":\"RevisionExplorer_explorer__RHmcS\",\"revisions\":\"RevisionExplorer_revisions__1tTn2\",\"revision\":\"RevisionExplorer_revision__2EnUF\",\"selected\":\"RevisionExplorer_selected__3pfCE\",\"button\":\"RevisionExplorer_button__26HZh\",\"current\":\"RevisionExplorer_current__2TeZO\",\"created_on\":\"RevisionExplorer_created_on__2jM5h\",\"email\":\"RevisionExplorer_email__1kSY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"ele\":\"FormElement_ele__3CKIM\",\"border\":\"FormElement_border__6sNMM\",\"error_list\":\"FormElement_error_list__2Cbdd\",\"error\":\"FormElement_error__vl1zT\",\"arrow_up\":\"FormElement_arrow_up__1GYby\",\"send_msg_error\":\"FormElement_send_msg_error__3Qz7r\",\"label\":\"FormElement_label__2zMZ6\",\"invalid\":\"FormElement_invalid__1oT1m\",\"help_text\":\"FormElement_help_text__214BR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"checkbox\":\"SendMsgForm_checkbox__1StOz\",\"quick_reply_summary\":\"SendMsgForm_quick_reply_summary__36uP_\",\"type_choice\":\"SendMsgForm_type_choice__3irye\",\"url_attachment\":\"SendMsgForm_url_attachment__3FtY3\",\"upload\":\"SendMsgForm_upload__11LV8\",\"remove_upload\":\"SendMsgForm_remove_upload__3_LQC\",\"url\":\"SendMsgForm_url__NuqbB\",\"remove\":\"SendMsgForm_remove__1KMQN\",\"existing_quick_replies\":\"SendMsgForm_existing_quick_replies__1uCjS\",\"existing_quick_reply\":\"SendMsgForm_existing_quick_reply__2RLqU\",\"add_quick_replies\":\"SendMsgForm_add_quick_replies__34tWs\",\"template_text\":\"SendMsgForm_template_text__2Ajn5\",\"variable\":\"SendMsgForm_variable__2vpEg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"delimited\":\"ResultRouterForm_delimited__1pAOp\",\"non_delimited\":\"ResultRouterForm_non_delimited__2WEp4\",\"lead_in\":\"ResultRouterForm_lead_in__1FMmB\",\"lead_in_sub\":\"ResultRouterForm_lead_in_sub__tyCxw\",\"result_select\":\"ResultRouterForm_result_select__2ZLCO\",\"result_select_delimited\":\"ResultRouterForm_result_select_delimited__3HE34\",\"should_delimit\":\"ResultRouterForm_should_delimit__YQXU-\",\"field_number\":\"ResultRouterForm_field_number__197v1\",\"delimiter\":\"ResultRouterForm_delimiter__1BzvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"titlebar\":\"TitleBar_titlebar__1IjbN\",\"titletext\":\"TitleBar_titletext__1gQGA\",\"normal\":\"TitleBar_normal__oICl2\",\"remove_confirm\":\"TitleBar_remove_confirm__Cl2de\",\"remove_button\":\"TitleBar_remove_button__3m_pg\",\"up_button\":\"TitleBar_up_button__13tr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pop_wrapper\":\"PopTab_pop_wrapper__1ZxCo\",\"visible\":\"PopTab_visible__XJvvG\",\"popped\":\"PopTab_popped__3NjBk\",\"tab_wrapper\":\"PopTab_tab_wrapper__3cx4U\",\"tab\":\"PopTab_tab__29U5D\",\"label\":\"PopTab_label__dGXVf\",\"icon\":\"PopTab_icon__3EvbB\",\"header\":\"PopTab_header__z_68l\",\"header_label\":\"PopTab_header_label__UVe8_\",\"close\":\"PopTab_close__2QNT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"IssuesTab_hidden__2O4qO\",\"message\":\"IssuesTab_message__1Q4vM\",\"header\":\"IssuesTab_header__2OY4Q\",\"issues_wrapper\":\"IssuesTab_issues_wrapper__5MAP1\",\"language\":\"IssuesTab_language__2QWCl\",\"mask\":\"IssuesTab_mask__4maF_\",\"visible\":\"IssuesTab_visible__2fSde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"count\":\"CharCount_count__5oKf7\",\"tooltip\":\"CharCount_tooltip__3GhiZ\",\"fine_print\":\"CharCount_fine_print__3B6z8\",\"divider\":\"CharCount_divider__3yZGu\",\"tooltip_text\":\"CharCount_tooltip_text__5R7Ir\",\"unicode\":\"CharCount_unicode__1NYdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"MediaPlayer_player__1GIFD\",\"playing\":\"MediaPlayer_playing__3Ogvk\",\"button\":\"MediaPlayer_button__2EjfR\",\"circles\":\"MediaPlayer_circles__1mfVV\",\"circle_background\":\"MediaPlayer_circle_background__36GQk\",\"circle_foreground\":\"MediaPlayer_circle_foreground__28pTM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"translating_categories\":\"RouterLocalizationForm_translating_categories__1zIPm\",\"translating_category\":\"RouterLocalizationForm_translating_category__3yATe\",\"translating_from\":\"RouterLocalizationForm_translating_from__1hMGU\",\"translating_to\":\"RouterLocalizationForm_translating_to__3mM0Y\",\"translating_operator_title\":\"RouterLocalizationForm_translating_operator_title__1wKPt\",\"translating_operator_instructions\":\"RouterLocalizationForm_translating_operator_instructions__1lPjI\",\"translating_operator_container\":\"RouterLocalizationForm_translating_operator_container__1lHkN\",\"translating_operator\":\"RouterLocalizationForm_translating_operator__33H5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"drag_helper\":\"DragHelper_drag_helper__19MlD\",\"visible\":\"DragHelper_visible__33auZ\",\"arrow\":\"DragHelper_arrow__3zWRu\",\"tail\":\"DragHelper_tail__3pDwi\",\"help_text\":\"DragHelper_help_text__1MuND\",\"head\":\"DragHelper_head__2r3m-\",\"bold\":\"DragHelper_bold__22VZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"editor\":\"components_editor__34hMw\",\"translating\":\"components_translating__3B6i1\",\"footer\":\"components_footer__3_cem\",\"download_button\":\"components_download_button__3_Tzb\",\"alert_body\":\"components_alert_body__32Lao\",\"alert_modal\":\"components_alert_modal__1Se5S\",\"saving\":\"components_saving__kd4Mv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"quick_replies\":\"SendMsg_quick_replies__1OdCV\",\"attachment\":\"SendMsg_attachment__3XAwT\",\"summary\":\"SendMsg_summary__BI2Cx\",\"whatsapp\":\"SendMsg_whatsapp__ot7qq\",\"facebook\":\"SendMsg_facebook__30HSu\",\"line\":\"SendMsg_line__3iKQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"message\":\"AssetSelector_message__ZqJvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"CheckboxElement_label__13xd4\",\"title\":\"CheckboxElement_title__2urQe\",\"description\":\"CheckboxElement_description__2Lk1m\",\"description_solo\":\"CheckboxElement_description_solo__OpwGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_element\":\"CurrencyElement_form_element__3r8zD\",\"transfer\":\"CurrencyElement_transfer__1Pzka\",\"currency\":\"CurrencyElement_currency__39r0W\",\"amount\":\"CurrencyElement_amount__qLUBo\",\"remove\":\"CurrencyElement_remove__HdMuG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"params\":\"SubflowRouterForm_params__pSmHk\",\"param\":\"SubflowRouterForm_param__29IYj\",\"param_name\":\"SubflowRouterForm_param_name__37i3p\",\"param_input\":\"SubflowRouterForm_param_input__h9vrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"btn\":\"Button_btn__2bPs-\",\"disabled\":\"Button_disabled__1aiFJ\",\"primary\":\"Button_primary__KNJyi\",\"active\":\"Button_active__34adT\",\"secondary\":\"Button_secondary__1dFYK\",\"tertiary\":\"Button_tertiary__80Kls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pill\":\"Pill_pill__3DdKg\",\"clickable\":\"Pill_clickable__1mN4l\",\"icon\":\"Pill_icon__1_zpb\",\"large\":\"Pill_large___V69Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"recipients\":\"SendBroadcast_recipients__JtS20\",\"node\":\"SendBroadcast_node__2OWCP\",\"to\":\"SendBroadcast_to__2SWoI\",\"name\":\"SendBroadcast_name__2ICmt\",\"icon\":\"SendBroadcast_icon__1OuzO\",\"more\":\"SendBroadcast_more__2Ro8H\",\"message\":\"SendBroadcast_message__1BjMD\",\"line\":\"SendBroadcast_line__3jRYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"case_list_container\":\"CaseList_case_list_container__17XlJ\",\"scrolling\":\"CaseList_scrolling__3HvJp\",\"case_list\":\"CaseList_case_list__1ZUoR\",\"kase\":\"CaseList_kase__2vI4R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"MenuRouterForm_lead_in__sAD9V\",\"digit\":\"MenuRouterForm_digit__L3Qj2\",\"category\":\"MenuRouterForm_category__1ug9l\",\"menu\":\"MenuRouterForm_menu__2tnGm\",\"menu_option\":\"MenuRouterForm_menu_option__1kHbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"RandomRouterForm_lead_in__1NwAG\",\"bucket_select\":\"RandomRouterForm_bucket_select__1q-qm\",\"bucket_list\":\"RandomRouterForm_bucket_list__16oUs\",\"bucket_name\":\"RandomRouterForm_bucket_name__15IVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeout_control_container\":\"TimeoutControl_timeout_control_container__LZ5Ex\",\"left_section\":\"TimeoutControl_left_section__12_sG\",\"label\":\"TimeoutControl_label__2ehgv\",\"checkbox\":\"TimeoutControl_checkbox__1Mt44\",\"drop_down\":\"TimeoutControl_drop_down__SYvCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"canvas_container\":\"Canvas_canvas_container__aTD4I\",\"canvas_background\":\"Canvas_canvas_background__1fdfM\",\"canvas\":\"Canvas_canvas__1AOdm\",\"drag_selection\":\"Canvas_drag_selection__3frHd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"language\":\"LanguageSelector_language__3G6wF\",\"language_link\":\"LanguageSelector_language_link__2sv3M\",\"active\":\"LanguageSelector_active__2EoP5\",\"separator\":\"LanguageSelector_separator__2iu65\"};"],"sourceRoot":""}